<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/lms/lms.djangoapps.instructor_task.tasks_helper.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-instructor-task-tasks-helper-package" names="lms.djangoapps.instructor_task.tasks_helper\ package">
        <title>lms.djangoapps.instructor_task.tasks_helper package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.certs lms-djangoapps-instructor-task-tasks-helper-certs-module" names="lms.djangoapps.instructor_task.tasks_helper.certs\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.certs module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.certs',\ 'module-lms.djangoapps.instructor_task.tasks_helper.certs',\ '',\ None]"></index>
            <paragraph>Instructor tasks related to certificates.</paragraph>
            <index entries="['single',\ 'generate_students_certificates()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.certs)',\ 'lms.djangoapps.instructor_task.tasks_helper.certs.generate_students_certificates',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_students_certificates()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.certs generate_students_certificates" class="" classes="sig sig-object py" fullname="generate_students_certificates" ids="lms.djangoapps.instructor_task.tasks_helper.certs.generate_students_certificates" module="lms.djangoapps.instructor_task.tasks_helper.certs"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.certs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_students_certificates</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>For a given <title_reference>course_id</title_reference>, generate certificates for only students present in ‘students’ key in task_input
                        json column, otherwise generate certificates for all enrolled students.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'students_require_certificate()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.certs)',\ 'lms.djangoapps.instructor_task.tasks_helper.certs.students_require_certificate',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="students_require_certificate()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.certs students_require_certificate" class="" classes="sig sig-object py" fullname="students_require_certificate" ids="lms.djangoapps.instructor_task.tasks_helper.certs.students_require_certificate" module="lms.djangoapps.instructor_task.tasks_helper.certs"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.certs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">students_require_certificate</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enrolled_students</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">statuses_to_regenerate</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns list of students where certificates needs to be generated.
                        if ‘statuses_to_regenerate’ is given then return students that have Generated Certificates
                        and the generated certificate status lies in ‘statuses_to_regenerate’</paragraph>
                    <paragraph>if ‘statuses_to_regenerate’ is not given then return all the enrolled student skipping the ones
                        whose certificates have already been generated.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_id</literal_strong></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>enrolled_students</literal_strong></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>statuses_to_regenerate</literal_strong></paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.enrollments lms-djangoapps-instructor-task-tasks-helper-enrollments-module" names="lms.djangoapps.instructor_task.tasks_helper.enrollments\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.enrollments module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.enrollments',\ 'module-lms.djangoapps.instructor_task.tasks_helper.enrollments',\ '',\ None]"></index>
            <paragraph>Instructor tasks related to enrollments.</paragraph>
            <index entries="['single',\ 'upload_may_enroll_csv()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.enrollments)',\ 'lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_may_enroll_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_may_enroll_csv()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.enrollments upload_may_enroll_csv" class="" classes="sig sig-object py" fullname="upload_may_enroll_csv" ids="lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_may_enroll_csv" module="lms.djangoapps.instructor_task.tasks_helper.enrollments"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.enrollments.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_may_enroll_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>For a given <title_reference>course_id</title_reference>, generate a CSV file containing
                        information about students who may enroll but have not done so
                        yet, and store using a <title_reference>ReportStore</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_students_csv()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.enrollments)',\ 'lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_students_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_students_csv()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.enrollments upload_students_csv" class="" classes="sig sig-object py" fullname="upload_students_csv" ids="lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_students_csv" module="lms.djangoapps.instructor_task.tasks_helper.enrollments"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.enrollments.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_students_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>For a given <title_reference>course_id</title_reference>, generate a CSV file containing profile
                        information for all students that are enrolled, and store using a
                        <title_reference>ReportStore</title_reference>.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.grades lms-djangoapps-instructor-task-tasks-helper-grades-module" names="lms.djangoapps.instructor_task.tasks_helper.grades\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.grades module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.grades',\ 'module-lms.djangoapps.instructor_task.tasks_helper.grades',\ '',\ None]"></index>
            <paragraph>Functionality for generating grade reports.</paragraph>
            <index entries="['single',\ 'CourseGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades CourseGradeReport" class="" classes="sig sig-object py" fullname="CourseGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase"><literal classes="xref py py-class">GradeReportBase</literal></reference></paragraph>
                    <paragraph>Class to encapsulate functionality related to generating user/row had header data for Corse Grade Reports.</paragraph>
                    <index entries="['single',\ 'USER_BATCH_SIZE\ (lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.USER_BATCH_SIZE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseGradeReport.USER_BATCH_SIZE" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades CourseGradeReport USER_BATCH_SIZE" class="CourseGradeReport" classes="sig sig-object py" fullname="CourseGradeReport.USER_BATCH_SIZE" ids="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.USER_BATCH_SIZE" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_name classes="sig-name descname" xml:space="preserve">USER_BATCH_SIZE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>100</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'generate()\ (lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport\ class\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.generate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseGradeReport.generate()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades CourseGradeReport generate" class="CourseGradeReport" classes="sig sig-object py" fullname="CourseGradeReport.generate" ids="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.generate" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">generate</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Public method to generate a grade report.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'GradeReportBase\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="GradeReportBase" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades GradeReportBase" class="" classes="sig sig-object py" fullname="GradeReportBase" ids="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">GradeReportBase</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Base class for grade reports (ProblemGradeReport and CourseGradeReport).</paragraph>
                    <index entries="['single',\ 'log_additional_info_for_testing()\ (lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_additional_info_for_testing',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GradeReportBase.log_additional_info_for_testing()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades GradeReportBase log_additional_info_for_testing" class="GradeReportBase" classes="sig sig-object py" fullname="GradeReportBase.log_additional_info_for_testing" ids="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_additional_info_for_testing" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_name classes="sig-name descname" xml:space="preserve">log_additional_info_for_testing</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Investigation logs for test problem grade report.</paragraph>
                            <paragraph>TODO – Remove as a part of PROD-1287</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'log_task_info()\ (lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_task_info',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GradeReportBase.log_task_info()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades GradeReportBase log_task_info" class="GradeReportBase" classes="sig sig-object py" fullname="GradeReportBase.log_task_info" ids="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_task_info" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_name classes="sig-name descname" xml:space="preserve">log_task_info</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updates the status on the celery task to the given message.
                                Also logs the update.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'InMemoryCourseGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryCourseGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InMemoryCourseGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades InMemoryCourseGradeReport" class="" classes="sig sig-object py" fullname="InMemoryCourseGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryCourseGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InMemoryCourseGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport"><literal classes="xref py py-class">CourseGradeReport</literal></reference>, <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin"><literal classes="xref py py-class">InMemoryReportMixin</literal></reference></paragraph>
                    <paragraph>Course Grade Report that compiles and then uploads all rows at once</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'InMemoryProblemGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryProblemGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InMemoryProblemGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades InMemoryProblemGradeReport" class="" classes="sig sig-object py" fullname="InMemoryProblemGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryProblemGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InMemoryProblemGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport"><literal classes="xref py py-class">ProblemGradeReport</literal></reference>, <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin"><literal classes="xref py py-class">InMemoryReportMixin</literal></reference></paragraph>
                    <paragraph>Program Grade Report that compiles and then uploads all rows at once</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'InMemoryReportMixin\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InMemoryReportMixin" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades InMemoryReportMixin" class="" classes="sig sig-object py" fullname="InMemoryReportMixin" ids="lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InMemoryReportMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Mixin for a file report that will generate file in memory and then upload to report store</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ProblemGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ProblemGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades ProblemGradeReport" class="" classes="sig sig-object py" fullname="ProblemGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ProblemGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase"><literal classes="xref py py-class">GradeReportBase</literal></reference></paragraph>
                    <paragraph>Class to encapsulate functionality related to generating user/row had header data for Problem Grade Reports.</paragraph>
                    <index entries="['single',\ 'generate()\ (lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport\ class\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport.generate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ProblemGradeReport.generate()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades ProblemGradeReport generate" class="ProblemGradeReport" classes="sig sig-object py" fullname="ProblemGradeReport.generate" ids="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport.generate" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">generate</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Public method to generate a grade report.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ProblemResponses\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ProblemResponses" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades ProblemResponses" class="" classes="sig sig-object py" fullname="ProblemResponses" ids="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ProblemResponses</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Class to encapsulate functionality related to generating Problem Responses Reports.</paragraph>
                    <index entries="['single',\ 'generate()\ (lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses\ class\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses.generate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ProblemResponses.generate()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades ProblemResponses generate" class="ProblemResponses" classes="sig sig-object py" fullname="ProblemResponses.generate" ids="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses.generate" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">generate</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>For a given <title_reference>course_id</title_reference>, generate a CSV file containing
                                all student answers to a given problem, and store using a <title_reference>ReportStore</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TempFileCourseGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.TempFileCourseGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TempFileCourseGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades TempFileCourseGradeReport" class="" classes="sig sig-object py" fullname="TempFileCourseGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.TempFileCourseGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TempFileCourseGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport"><literal classes="xref py py-class">CourseGradeReport</literal></reference>, <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin"><literal classes="xref py py-class">TemporaryFileReportMixin</literal></reference></paragraph>
                    <paragraph>Course Grade Report that writes file iteratively to a TempFile to then be uploaded</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TempFileProblemGradeReport\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.TempFileProblemGradeReport',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TempFileProblemGradeReport" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades TempFileProblemGradeReport" class="" classes="sig sig-object py" fullname="TempFileProblemGradeReport" ids="lms.djangoapps.instructor_task.tasks_helper.grades.TempFileProblemGradeReport" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TempFileProblemGradeReport</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport"><literal classes="xref py py-class">ProblemGradeReport</literal></reference>, <reference internal="True" refid="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin" reftitle="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin"><literal classes="xref py py-class">TemporaryFileReportMixin</literal></reference></paragraph>
                    <paragraph>Program Grade Report that writes file iteratively to a TempFile to then be uploaded</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TemporaryFileReportMixin\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.grades)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TemporaryFileReportMixin" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades TemporaryFileReportMixin" class="" classes="sig sig-object py" fullname="TemporaryFileReportMixin" ids="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.grades.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TemporaryFileReportMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Mixin for a file report that will write rows iteratively to a TempFile</paragraph>
                    <index entries="['single',\ 'iter_and_write_batched_rows()\ (lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.iter_and_write_batched_rows',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TemporaryFileReportMixin.iter_and_write_batched_rows()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades TemporaryFileReportMixin iter_and_write_batched_rows" class="TemporaryFileReportMixin" classes="sig sig-object py" fullname="TemporaryFileReportMixin.iter_and_write_batched_rows" ids="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.iter_and_write_batched_rows" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_name classes="sig-name descname" xml:space="preserve">iter_and_write_batched_rows</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">batched_rows</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">success_file</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_file</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Iterate through batched rows, writing returned chunks to disk as we go.
                                This should hopefully help us avoid out of memory errors.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'upload_temp_files()\ (lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.upload_temp_files',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TemporaryFileReportMixin.upload_temp_files()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.grades TemporaryFileReportMixin upload_temp_files" class="TemporaryFileReportMixin" classes="sig sig-object py" fullname="TemporaryFileReportMixin.upload_temp_files" ids="lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.upload_temp_files" module="lms.djangoapps.instructor_task.tasks_helper.grades"><desc_name classes="sig-name descname" xml:space="preserve">upload_temp_files</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">success_file</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_file</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">has_errors</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Uploads success and error csv files to report store</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.misc lms-djangoapps-instructor-task-tasks-helper-misc-module" names="lms.djangoapps.instructor_task.tasks_helper.misc\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.misc module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.misc',\ 'module-lms.djangoapps.instructor_task.tasks_helper.misc',\ '',\ None]"></index>
            <paragraph>This file contains tasks that are designed to perform background operations on the
                running state of a course.</paragraph>
            <index entries="['single',\ 'cohort_students_and_upload()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.cohort_students_and_upload',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="cohort_students_and_upload()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc cohort_students_and_upload" class="" classes="sig sig-object py" fullname="cohort_students_and_upload" ids="lms.djangoapps.instructor_task.tasks_helper.misc.cohort_students_and_upload" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">cohort_students_and_upload</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Within a given course, cohort students in bulk, then upload the results
                        using a <title_reference>ReportStore</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'generate_anonymous_ids()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.generate_anonymous_ids',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_anonymous_ids()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc generate_anonymous_ids" class="" classes="sig sig-object py" fullname="generate_anonymous_ids" ids="lms.djangoapps.instructor_task.tasks_helper.misc.generate_anonymous_ids" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_anonymous_ids</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate a 2-column CSV output of user-id, anonymized-user-id</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_course_survey_report()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.upload_course_survey_report',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_course_survey_report()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc upload_course_survey_report" class="" classes="sig sig-object py" fullname="upload_course_survey_report" ids="lms.djangoapps.instructor_task.tasks_helper.misc.upload_course_survey_report" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_course_survey_report</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>For a given <title_reference>course_id</title_reference>, generate a html report containing the survey results for a course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_ora2_data()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_ora2_data()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc upload_ora2_data" class="" classes="sig sig-object py" fullname="upload_ora2_data" ids="lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_data" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_ora2_data</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Collect ora2 responses and upload them to S3 as a CSV</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_ora2_submission_files()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_submission_files',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_ora2_submission_files()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc upload_ora2_submission_files" class="" classes="sig sig-object py" fullname="upload_ora2_submission_files" ids="lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_submission_files" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_ora2_submission_files</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Creates zip archive with submission files in three steps:</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Collect all files information using ORA download helper.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Download all submission attachments, put them in temporary zip</term>
                                    <definition>
                                        <paragraph>file along with submission texts and csv downloads list.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph>Upload zip file into reports storage.</paragraph>
                        </list_item>
                    </enumerated_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_ora2_summary()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_summary',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_ora2_summary()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc upload_ora2_summary" class="" classes="sig sig-object py" fullname="upload_ora2_summary" ids="lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_summary" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_ora2_summary</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Collect ora2/student summaries and upload them to file storage as a CSV</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_proctored_exam_results_report()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.misc)',\ 'lms.djangoapps.instructor_task.tasks_helper.misc.upload_proctored_exam_results_report',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_proctored_exam_results_report()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.misc upload_proctored_exam_results_report" class="" classes="sig sig-object py" fullname="upload_proctored_exam_results_report" ids="lms.djangoapps.instructor_task.tasks_helper.misc.upload_proctored_exam_results_report" module="lms.djangoapps.instructor_task.tasks_helper.misc"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.misc.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_proctored_exam_results_report</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>For a given <title_reference>course_id</title_reference>, generate a CSV file containing
                        information about proctored exam results, and store using a <title_reference>ReportStore</title_reference>.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.module_state lms-djangoapps-instructor-task-tasks-helper-module-state-module" names="lms.djangoapps.instructor_task.tasks_helper.module_state\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.module_state module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.module_state',\ 'module-lms.djangoapps.instructor_task.tasks_helper.module_state',\ '',\ None]"></index>
            <paragraph>Instructor Tasks related to module state.</paragraph>
            <index entries="['single',\ 'delete_problem_module_state()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.module_state)',\ 'lms.djangoapps.instructor_task.tasks_helper.module_state.delete_problem_module_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_problem_module_state()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.module_state delete_problem_module_state" class="" classes="sig sig-object py" fullname="delete_problem_module_state" ids="lms.djangoapps.instructor_task.tasks_helper.module_state.delete_problem_module_state" module="lms.djangoapps.instructor_task.tasks_helper.module_state"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.module_state.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_problem_module_state</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Delete the StudentModule entry.</paragraph>
                    <paragraph>Always returns UPDATE_STATUS_SUCCEEDED, indicating success, if it doesn’t raise an exception due to database error.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'override_score_module_state()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.module_state)',\ 'lms.djangoapps.instructor_task.tasks_helper.module_state.override_score_module_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="override_score_module_state()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.module_state override_score_module_state" class="" classes="sig sig-object py" fullname="override_score_module_state" ids="lms.djangoapps.instructor_task.tasks_helper.module_state.override_score_module_state" module="lms.djangoapps.instructor_task.tasks_helper.module_state"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.module_state.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">override_score_module_state</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Takes an XBlock and a corresponding StudentModule object, and
                        performs an override on the student’s problem score.</paragraph>
                    <paragraph>Throws exceptions if the override is fatal and should be aborted if in a loop.
                        In particular, raises UpdateProblemModuleStateError if module fails to instantiate,
                        or if the module doesn’t support overriding, or if the score used for override
                        is outside the acceptable range of scores (between 0 and the max score for the
                        problem).</paragraph>
                    <paragraph>Returns True if problem was successfully overriden for the given student, and False
                        if problem encountered some kind of error in overriding.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'perform_module_state_update()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.module_state)',\ 'lms.djangoapps.instructor_task.tasks_helper.module_state.perform_module_state_update',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="perform_module_state_update()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.module_state perform_module_state_update" class="" classes="sig sig-object py" fullname="perform_module_state_update" ids="lms.djangoapps.instructor_task.tasks_helper.module_state.perform_module_state_update" module="lms.djangoapps.instructor_task.tasks_helper.module_state"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.module_state.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">perform_module_state_update</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">update_fcn</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_fcn</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Performs generic update by visiting StudentModule instances with the update_fcn provided.</paragraph>
                    <paragraph>The student modules are fetched for update the <title_reference>update_fcn</title_reference> is called on each StudentModule
                        that passes the resulting filtering. It is passed four arguments:  the block for
                        the module pointed to by the module_state_key, the particular StudentModule to update, the
                        xblock_instance_args, and the task_input being passed through.  If the value returned by the
                        update function evaluates to a boolean True, the update is successful; False indicates the update
                        on the particular student module failed.
                        A raised exception indicates a fatal condition – that no other student modules should be considered.</paragraph>
                    <paragraph>The return value is a dict containing the task’s results, with the following keys:</paragraph>
                    <block_quote>
                        <paragraph>‘attempted’: number of attempts made
                            ‘succeeded’: number of attempts that “succeeded”
                            ‘skipped’: number of attempts that “skipped”
                            ‘failed’: number of attempts that “failed”
                            ‘total’: number of possible updates to attempt
                            ‘action_name’: user-visible verb to use in status messages.  Should be past-tense.</paragraph>
                        <block_quote>
                            <paragraph>Pass-through of input <title_reference>action_name</title_reference>.</paragraph>
                        </block_quote>
                        <paragraph>‘duration_ms’: how long the task has (or had) been running.</paragraph>
                    </block_quote>
                    <paragraph>Because this is run internal to a task, it does not catch exceptions.  These are allowed to pass up to the
                        next level, so that it can set the failure modes and capture the error trace in the InstructorTask and the
                        result object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'rescore_problem_module_state()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.module_state)',\ 'lms.djangoapps.instructor_task.tasks_helper.module_state.rescore_problem_module_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="rescore_problem_module_state()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.module_state rescore_problem_module_state" class="" classes="sig sig-object py" fullname="rescore_problem_module_state" ids="lms.djangoapps.instructor_task.tasks_helper.module_state.rescore_problem_module_state" module="lms.djangoapps.instructor_task.tasks_helper.module_state"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.module_state.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">rescore_problem_module_state</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Takes an XBlock and a corresponding StudentModule object, and
                        performs rescoring on the student’s problem submission.</paragraph>
                    <paragraph>Throws exceptions if the rescoring is fatal and should be aborted if in a loop.
                        In particular, raises UpdateProblemModuleStateError if module fails to instantiate,
                        or if the module doesn’t support rescoring.</paragraph>
                    <paragraph>Returns True if problem was successfully rescored for the given student, and False
                        if problem encountered some kind of error in rescoring.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'reset_attempts_module_state()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.module_state)',\ 'lms.djangoapps.instructor_task.tasks_helper.module_state.reset_attempts_module_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="reset_attempts_module_state()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.module_state reset_attempts_module_state" class="" classes="sig sig-object py" fullname="reset_attempts_module_state" ids="lms.djangoapps.instructor_task.tasks_helper.module_state.reset_attempts_module_state" module="lms.djangoapps.instructor_task.tasks_helper.module_state"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.module_state.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">reset_attempts_module_state</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_instance_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_task_input</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Resets problem attempts to zero for specified <title_reference>student_module</title_reference>.</paragraph>
                    <paragraph>Returns a status of UPDATE_STATUS_SUCCEEDED if a problem has non-zero attempts
                        that are being reset, and UPDATE_STATUS_SKIPPED otherwise.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.runner lms-djangoapps-instructor-task-tasks-helper-runner-module" names="lms.djangoapps.instructor_task.tasks_helper.runner\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.runner module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.runner',\ 'module-lms.djangoapps.instructor_task.tasks_helper.runner',\ '',\ None]"></index>
            <paragraph>Instrutor Task runner</paragraph>
            <index entries="['single',\ 'TaskProgress\ (class\ in\ lms.djangoapps.instructor_task.tasks_helper.runner)',\ 'lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TaskProgress" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.runner TaskProgress" class="" classes="sig sig-object py" fullname="TaskProgress" ids="lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress" module="lms.djangoapps.instructor_task.tasks_helper.runner"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.runner.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TaskProgress</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">total</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_time</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Encapsulates the current task’s progress by keeping track of
                        ‘attempted’, ‘succeeded’, ‘skipped’, ‘failed’, ‘total’,
                        ‘action_name’, and ‘duration_ms’ values.</paragraph>
                    <index entries="['single',\ 'state\ (lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress\ property)',\ 'lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.state',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="TaskProgress.state" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.runner TaskProgress state" class="TaskProgress" classes="sig sig-object py" fullname="TaskProgress.state" ids="lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.state" module="lms.djangoapps.instructor_task.tasks_helper.runner"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">state</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_task_state()\ (lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress\ method)',\ 'lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.update_task_state',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TaskProgress.update_task_state()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.runner TaskProgress update_task_state" class="TaskProgress" classes="sig sig-object py" fullname="TaskProgress.update_task_state" ids="lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.update_task_state" module="lms.djangoapps.instructor_task.tasks_helper.runner"><desc_name classes="sig-name descname" xml:space="preserve">update_task_state</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">extra_meta</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update the current celery task’s state to the progress state
                                specified by the current object.  Returns the progress
                                dictionary for use by <title_reference>run_main_task</title_reference> and
                                <title_reference>BaseInstructorTask.on_success</title_reference>.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>extra_meta</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – Extra metadata to pass to <title_reference>update_state</title_reference></paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The current task’s progress dict</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>dict</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'run_main_task()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.runner)',\ 'lms.djangoapps.instructor_task.tasks_helper.runner.run_main_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="run_main_task()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.runner run_main_task" class="" classes="sig sig-object py" fullname="run_main_task" ids="lms.djangoapps.instructor_task.tasks_helper.runner.run_main_task" module="lms.djangoapps.instructor_task.tasks_helper.runner"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.runner.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">run_main_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_fcn</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Applies the <title_reference>task_fcn</title_reference> to the arguments defined in <title_reference>entry_id</title_reference> InstructorTask.</paragraph>
                    <paragraph>Arguments passed to <title_reference>task_fcn</title_reference> are:</paragraph>
                    <block_quote>
                        <paragraph><title_reference>entry_id</title_reference> : the primary key for the InstructorTask entry representing the task.
                            <title_reference>course_id</title_reference> : the id for the course.
                            <title_reference>task_input</title_reference> : dict containing task-specific arguments, JSON-decoded from InstructorTask’s task_input.
                            <title_reference>action_name</title_reference> : past-tense verb to use for constructing status messages.</paragraph>
                    </block_quote>
                    <paragraph>If no exceptions are raised, the <title_reference>task_fcn</title_reference> should return a dict containing
                        the task’s result with the following keys:</paragraph>
                    <block_quote>
                        <paragraph>‘attempted’: number of attempts made
                            ‘succeeded’: number of attempts that “succeeded”
                            ‘skipped’: number of attempts that “skipped”
                            ‘failed’: number of attempts that “failed”
                            ‘total’: number of possible subtasks to attempt
                            ‘action_name’: user-visible verb to use in status messages.</paragraph>
                        <block_quote>
                            <paragraph>Should be past-tense.  Pass-through of input <title_reference>action_name</title_reference>.</paragraph>
                        </block_quote>
                        <paragraph>‘duration_ms’: how long the task has (or had) been running.</paragraph>
                    </block_quote>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper.utils lms-djangoapps-instructor-task-tasks-helper-utils-module" names="lms.djangoapps.instructor_task.tasks_helper.utils\ module">
            <title>lms.djangoapps.instructor_task.tasks_helper.utils module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper.utils',\ 'module-lms.djangoapps.instructor_task.tasks_helper.utils',\ '',\ None]"></index>
            <paragraph>Utility methods for instructor tasks</paragraph>
            <index entries="['single',\ 'tracker_emit()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.utils)',\ 'lms.djangoapps.instructor_task.tasks_helper.utils.tracker_emit',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="tracker_emit()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.utils tracker_emit" class="" classes="sig sig-object py" fullname="tracker_emit" ids="lms.djangoapps.instructor_task.tasks_helper.utils.tracker_emit" module="lms.djangoapps.instructor_task.tasks_helper.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">tracker_emit</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">report_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Emits a ‘report.requested’ event for the given report.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_csv_file_to_report_store()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.utils)',\ 'lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_file_to_report_store',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_csv_file_to_report_store()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.utils upload_csv_file_to_report_store" class="" classes="sig sig-object py" fullname="upload_csv_file_to_report_store" ids="lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_file_to_report_store" module="lms.djangoapps.instructor_task.tasks_helper.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_csv_file_to_report_store</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">csv_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">timestamp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">config_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'GRADES_DOWNLOAD'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Upload data as a CSV using ReportStore.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>rows</literal_strong> – CSV data in a file-like object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>csv_name</literal_strong> – Name of the resulting CSV</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_id</literal_strong> – ID of the course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>parent_dor</literal_strong> – Name of the directory where the CSV file will be stored</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>string - Name of the generated report</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>report_name</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_csv_to_report_store()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.utils)',\ 'lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_to_report_store',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_csv_to_report_store()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.utils upload_csv_to_report_store" class="" classes="sig sig-object py" fullname="upload_csv_to_report_store" ids="lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_to_report_store" module="lms.djangoapps.instructor_task.tasks_helper.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_csv_to_report_store</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">rows</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">csv_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">timestamp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">config_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'GRADES_DOWNLOAD'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Upload data as a CSV using ReportStore.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>rows</literal_strong> – <paragraph>CSV data in the following format (first column may be a
                                                header):
                                                [</paragraph><block_quote><paragraph>[row1_colum1, row1_colum2, …],
                                                    …</paragraph></block_quote><paragraph>]</paragraph></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>csv_name</literal_strong> – Name of the resulting CSV</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_id</literal_strong> – ID of the course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>parent_dor</literal_strong> – Name of the directory where the CSV file will be stored</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>string - Name of the generated report</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>report_name</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'upload_zip_to_report_store()\ (in\ module\ lms.djangoapps.instructor_task.tasks_helper.utils)',\ 'lms.djangoapps.instructor_task.tasks_helper.utils.upload_zip_to_report_store',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="upload_zip_to_report_store()" _toc_parts="lms.djangoapps.instructor_task.tasks_helper.utils upload_zip_to_report_store" class="" classes="sig sig-object py" fullname="upload_zip_to_report_store" ids="lms.djangoapps.instructor_task.tasks_helper.utils.upload_zip_to_report_store" module="lms.djangoapps.instructor_task.tasks_helper.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_helper.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">upload_zip_to_report_store</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">zip_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">timestamp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">config_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'GRADES_DOWNLOAD'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Upload given file buffer as a zip file using ReportStore.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_helper module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_helper',\ 'module-lms.djangoapps.instructor_task.tasks_helper',\ '',\ None]"></index>
        </section>
    </section>
</document>
