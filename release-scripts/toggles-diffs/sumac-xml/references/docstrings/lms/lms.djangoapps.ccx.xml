<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/lms/lms.djangoapps.ccx.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-ccx-package" names="lms.djangoapps.ccx\ package">
        <title>lms.djangoapps.ccx package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.ccx.api">lms.djangoapps.ccx.api package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="lms.djangoapps.ccx.api#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="lms.djangoapps.ccx.api.v0">lms.djangoapps.ccx.api.v0 package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.ccx.api.v0#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.ccx.api.v0.paginators" internal="True" refuri="lms.djangoapps.ccx.api.v0#module-lms.djangoapps.ccx.api.v0.paginators">lms.djangoapps.ccx.api.v0.paginators module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.ccx.api.v0.serializers" internal="True" refuri="lms.djangoapps.ccx.api.v0#module-lms.djangoapps.ccx.api.v0.serializers">lms.djangoapps.ccx.api.v0.serializers module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.ccx.api.v0.urls" internal="True" refuri="lms.djangoapps.ccx.api.v0#module-lms.djangoapps.ccx.api.v0.urls">lms.djangoapps.ccx.api.v0.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.ccx.api.v0.views" internal="True" refuri="lms.djangoapps.ccx.api.v0#module-lms.djangoapps.ccx.api.v0.views">lms.djangoapps.ccx.api.v0.views module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.ccx.api.v0" internal="True" refuri="lms.djangoapps.ccx.api.v0#module-lms.djangoapps.ccx.api.v0">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.ccx.api#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.ccx.api.urls" internal="True" refuri="lms.djangoapps.ccx.api#module-lms.djangoapps.ccx.api.urls">lms.djangoapps.ccx.api.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.ccx.api" internal="True" refuri="lms.djangoapps.ccx.api#module-lms.djangoapps.ccx.api">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.ccx.apps lms-djangoapps-ccx-apps-module" names="lms.djangoapps.ccx.apps\ module">
            <title>lms.djangoapps.ccx.apps module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.apps',\ 'module-lms.djangoapps.ccx.apps',\ '',\ None]"></index>
            <paragraph>LMS CCX application configuration
                Signal handlers are connected here.</paragraph>
            <index entries="['single',\ 'CCXConfig\ (class\ in\ lms.djangoapps.ccx.apps)',\ 'lms.djangoapps.ccx.apps.CCXConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXConfig" _toc_parts="lms.djangoapps.ccx.apps CCXConfig" class="" classes="sig sig-object py" fullname="CCXConfig" ids="lms.djangoapps.ccx.apps.CCXConfig" module="lms.djangoapps.ccx.apps"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>Application Configuration for CCX.</paragraph>
                    <index entries="['single',\ 'name\ (lms.djangoapps.ccx.apps.CCXConfig\ attribute)',\ 'lms.djangoapps.ccx.apps.CCXConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXConfig.name" _toc_parts="lms.djangoapps.ccx.apps CCXConfig name" class="CCXConfig" classes="sig sig-object py" fullname="CCXConfig.name" ids="lms.djangoapps.ccx.apps.CCXConfig.name" module="lms.djangoapps.ccx.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'lms.djangoapps.ccx'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (lms.djangoapps.ccx.apps.CCXConfig\ method)',\ 'lms.djangoapps.ccx.apps.CCXConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXConfig.ready()" _toc_parts="lms.djangoapps.ccx.apps CCXConfig ready" class="CCXConfig" classes="sig sig-object py" fullname="CCXConfig.ready" ids="lms.djangoapps.ccx.apps.CCXConfig.ready" module="lms.djangoapps.ccx.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Connect signal handlers.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.custom_exception lms-djangoapps-ccx-custom-exception-module" names="lms.djangoapps.ccx.custom_exception\ module">
            <title>lms.djangoapps.ccx.custom_exception module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.custom_exception',\ 'module-lms.djangoapps.ccx.custom_exception',\ '',\ None]"></index>
            <paragraph>This file has custom exceptions for ccx</paragraph>
            <index entries="['single',\ 'CCXLocatorValidationException',\ 'lms.djangoapps.ccx.custom_exception.CCXLocatorValidationException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CCXLocatorValidationException" _toc_parts="lms.djangoapps.ccx.custom_exception CCXLocatorValidationException" class="" classes="sig sig-object py" fullname="CCXLocatorValidationException" ids="lms.djangoapps.ccx.custom_exception.CCXLocatorValidationException" module="lms.djangoapps.ccx.custom_exception"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.custom_exception.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXLocatorValidationException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Custom Exception to validate CCX locator</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CCXUserValidationException',\ 'lms.djangoapps.ccx.custom_exception.CCXUserValidationException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CCXUserValidationException" _toc_parts="lms.djangoapps.ccx.custom_exception CCXUserValidationException" class="" classes="sig sig-object py" fullname="CCXUserValidationException" ids="lms.djangoapps.ccx.custom_exception.CCXUserValidationException" module="lms.djangoapps.ccx.custom_exception"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.custom_exception.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXUserValidationException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Custom Exception for validation of users in CCX</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.models lms-djangoapps-ccx-models-module" names="lms.djangoapps.ccx.models\ module">
            <title>lms.djangoapps.ccx.models module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.models',\ 'module-lms.djangoapps.ccx.models',\ '',\ None]"></index>
            <paragraph>Models for the custom course feature</paragraph>
            <index entries="['single',\ 'CcxFieldOverride\ (class\ in\ lms.djangoapps.ccx.models)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CcxFieldOverride" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride" class="" classes="sig sig-object py" fullname="CcxFieldOverride" ids="lms.djangoapps.ccx.models.CcxFieldOverride" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CcxFieldOverride</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Field overrides for custom courses.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CcxFieldOverride.DoesNotExist',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CcxFieldOverride.DoesNotExist" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride DoesNotExist" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.DoesNotExist" ids="lms.djangoapps.ccx.models.CcxFieldOverride.DoesNotExist" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CcxFieldOverride.MultipleObjectsReturned',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CcxFieldOverride.MultipleObjectsReturned" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride MultipleObjectsReturned" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.MultipleObjectsReturned" ids="lms.djangoapps.ccx.models.CcxFieldOverride.MultipleObjectsReturned" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ccx\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.ccx',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.ccx" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride ccx" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.ccx" ids="lms.djangoapps.ccx.models.CcxFieldOverride.ccx" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">ccx</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ccx_id\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.ccx_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.ccx_id" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride ccx_id" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.ccx_id" ids="lms.djangoapps.ccx.models.CcxFieldOverride.ccx_id" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">ccx_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'field\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.field',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.field" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride field" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.field" ids="lms.djangoapps.ccx.models.CcxFieldOverride.field" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">field</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.id" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride id" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.id" ids="lms.djangoapps.ccx.models.CcxFieldOverride.id" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'location\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.location',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.location" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride location" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.location" ids="lms.djangoapps.ccx.models.CcxFieldOverride.location" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.objects" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride objects" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.objects" ids="lms.djangoapps.ccx.models.CcxFieldOverride.objects" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'value\ (lms.djangoapps.ccx.models.CcxFieldOverride\ attribute)',\ 'lms.djangoapps.ccx.models.CcxFieldOverride.value',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxFieldOverride.value" _toc_parts="lms.djangoapps.ccx.models CcxFieldOverride value" class="CcxFieldOverride" classes="sig sig-object py" fullname="CcxFieldOverride.value" ids="lms.djangoapps.ccx.models.CcxFieldOverride.value" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">value</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CustomCourseForEdX\ (class\ in\ lms.djangoapps.ccx.models)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CustomCourseForEdX" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX" class="" classes="sig sig-object py" fullname="CustomCourseForEdX" ids="lms.djangoapps.ccx.models.CustomCourseForEdX" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CustomCourseForEdX</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>A Custom Course.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CustomCourseForEdX.DoesNotExist',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CustomCourseForEdX.DoesNotExist" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX DoesNotExist" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.DoesNotExist" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.DoesNotExist" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CustomCourseForEdX.MultipleObjectsReturned',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CustomCourseForEdX.MultipleObjectsReturned" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX MultipleObjectsReturned" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.MultipleObjectsReturned" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.MultipleObjectsReturned" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ccxfieldoverride_set\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.ccxfieldoverride_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.ccxfieldoverride_set" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX ccxfieldoverride_set" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.ccxfieldoverride_set" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.ccxfieldoverride_set" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">ccxfieldoverride_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'coach\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.coach',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.coach" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX coach" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.coach" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.coach" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">coach</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'coach_id\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.coach_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.coach_id" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX coach_id" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.coach_id" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.coach_id" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">coach_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.course()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX course" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.course" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.course" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">course</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the CourseBlock of the course related to this CCX</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.course_id" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX course_id" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.course_id" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.course_id" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'display_name\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.display_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.display_name" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX display_name" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.display_name" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.display_name" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">display_name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'due()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.due',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.due()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX due" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.due" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.due" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">due</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the value of the override of the ‘due’ datetime for this CCX</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_ended()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.has_ended',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.has_ended()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX has_ended" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.has_ended" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.has_ended" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">has_ended</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return True if the CCX due date is set and is in the past</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_started()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.has_started',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.has_started()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX has_started" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.has_started" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.has_started" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">has_started</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return True if the CCX start date is in the past</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.id" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX id" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.id" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.id" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'locator\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ property)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.locator',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="CustomCourseForEdX.locator" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX locator" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.locator" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.locator" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">locator</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Helper property that gets a corresponding CCXLocator for this CCX.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The CCXLocator corresponding to this CCX.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'max_student_enrollments_allowed()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.max_student_enrollments_allowed',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.max_student_enrollments_allowed()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX max_student_enrollments_allowed" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.max_student_enrollments_allowed" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.max_student_enrollments_allowed" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">max_student_enrollments_allowed</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the value of the override of the ‘max_student_enrollments_allowed’
                                datetime for this CCX</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.objects" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX objects" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.objects" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.objects" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'start()\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ method)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.start',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCourseForEdX.start()" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX start" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.start" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.start" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">start</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the value of the override of the ‘start’ datetime for this CCX</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'structure\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ property)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.structure',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="CustomCourseForEdX.structure" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX structure" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.structure" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.structure" module="lms.djangoapps.ccx.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">structure</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Deserializes a course structure JSON object</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'structure_json\ (lms.djangoapps.ccx.models.CustomCourseForEdX\ attribute)',\ 'lms.djangoapps.ccx.models.CustomCourseForEdX.structure_json',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomCourseForEdX.structure_json" _toc_parts="lms.djangoapps.ccx.models CustomCourseForEdX structure_json" class="CustomCourseForEdX" classes="sig sig-object py" fullname="CustomCourseForEdX.structure_json" ids="lms.djangoapps.ccx.models.CustomCourseForEdX.structure_json" module="lms.djangoapps.ccx.models"><desc_name classes="sig-name descname" xml:space="preserve">structure_json</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.modulestore lms-djangoapps-ccx-modulestore-module" names="lms.djangoapps.ccx.modulestore\ module">
            <title>lms.djangoapps.ccx.modulestore module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.modulestore',\ 'module-lms.djangoapps.ccx.modulestore',\ '',\ None]"></index>
            <paragraph>A modulestore wrapper</paragraph>
            <paragraph>It will ‘unwrap’ ccx keys on the way in and re-wrap them on the way out</paragraph>
            <paragraph>In practical terms this means that when an object is retrieved from modulestore
                using a CCXLocator or CCXBlockUsageLocator as the key, the equivalent
                CourseLocator or BlockUsageLocator will actually be used. And all objects
                returned from the modulestore will have their keys updated to be the CCX
                version that was passed in.</paragraph>
            <index entries="['single',\ 'CCXModulestoreWrapper\ (class\ in\ lms.djangoapps.ccx.modulestore)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXModulestoreWrapper" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper" class="" classes="sig sig-object py" fullname="CCXModulestoreWrapper" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper" module="lms.djangoapps.ccx.modulestore"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.modulestore.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXModulestoreWrapper</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">modulestore</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>This class wraps a modulestore</paragraph>
                    <paragraph>The purpose is to remove ccx-specific identifiers during lookup and restore
                        it after retrieval so that data can be stored local to a course, but
                        referenced in app context as ccx-specific</paragraph>
                    <index entries="['single',\ 'branch_setting()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.branch_setting',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.branch_setting()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper branch_setting" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.branch_setting" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.branch_setting" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">branch_setting</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">branch_setting</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'bulk_operations()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.bulk_operations',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.bulk_operations()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper bulk_operations" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.bulk_operations" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.bulk_operations" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">bulk_operations</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">emit_signals</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ignore_case</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'check_supports()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.check_supports',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.check_supports()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper check_supports" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.check_supports" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.check_supports" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">check_supports</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">method</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clone_course()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.clone_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.clone_course()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper clone_course" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.clone_course" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.clone_course" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">clone_course</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">source_course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dest_course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'convert_to_draft()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.convert_to_draft',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.convert_to_draft()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper convert_to_draft" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.convert_to_draft" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.convert_to_draft" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">convert_to_draft</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'copy_from_template()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.copy_from_template',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.copy_from_template()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper copy_from_template" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.copy_from_template" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.copy_from_template" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">copy_from_template</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">source_keys</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dest_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_child()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_child',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.create_child()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper create_child" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.create_child" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_child" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">create_child</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_item()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.create_item()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper create_item" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.create_item" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_item" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">create_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_xblock()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_xblock',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.create_xblock()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper create_xblock" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.create_xblock" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.create_xblock" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">create_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">runtime</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_course()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.delete_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.delete_course()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper delete_course" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.delete_course" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.delete_course" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">delete_course</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See xmodule.modulestore.__init__.ModuleStoreWrite.delete_course</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete_item()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.delete_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.delete_item()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper delete_item" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.delete_item" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.delete_item" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">delete_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'fill_in_run()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.fill_in_run',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.fill_in_run()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper fill_in_run" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.fill_in_run" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.fill_in_run" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">fill_in_run</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_block_original_usage()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_block_original_usage',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_block_original_usage()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_block_original_usage" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_block_original_usage" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_block_original_usage" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_block_original_usage</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_course()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_course()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_course" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_course" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_course" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_course</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">depth</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_item()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_item()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_item" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_item" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_item" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">depth</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_items()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_items',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_items()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_items" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_items" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_items" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_items</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_modulestore_type()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_modulestore_type',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_modulestore_type()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_modulestore_type" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_modulestore_type" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_modulestore_type" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_modulestore_type</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_orphans()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_orphans',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_orphans()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_orphans" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_orphans" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_orphans" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_orphans</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_parent_location()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_parent_location',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.get_parent_location()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper get_parent_location" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.get_parent_location" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.get_parent_location" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">get_parent_location</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_changes()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_changes',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.has_changes()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper has_changes" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.has_changes" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_changes" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">has_changes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_course()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.has_course()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper has_course" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.has_course" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_course" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">has_course</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ignore_case</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_item()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.has_item()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper has_item" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.has_item" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_item" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">has_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_published_version()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_published_version',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.has_published_version()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper has_published_version" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.has_published_version" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.has_published_version" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">has_published_version</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'import_xblock()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.import_xblock',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.import_xblock()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper import_xblock" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.import_xblock" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.import_xblock" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">import_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">runtime</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'publish()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.publish',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.publish()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper publish" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.publish" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.publish" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">publish</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'revert_to_published()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.revert_to_published',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.revert_to_published()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper revert_to_published" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.revert_to_published" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.revert_to_published" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">revert_to_published</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'unpublish()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.unpublish',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.unpublish()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper unpublish" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.unpublish" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.unpublish" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">unpublish</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_item()\ (lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper\ method)',\ 'lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.update_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXModulestoreWrapper.update_item()" _toc_parts="lms.djangoapps.ccx.modulestore CCXModulestoreWrapper update_item" class="CCXModulestoreWrapper" classes="sig sig-object py" fullname="CCXModulestoreWrapper.update_item" ids="lms.djangoapps.ccx.modulestore.CCXModulestoreWrapper.update_item" module="lms.djangoapps.ccx.modulestore"><desc_name classes="sig-name descname" xml:space="preserve">update_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allow_not_found</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>See the docs for xmodule.modulestore.mixed.MixedModuleStore</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_ccx()\ (in\ module\ lms.djangoapps.ccx.modulestore)',\ 'lms.djangoapps.ccx.modulestore.remove_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_ccx()" _toc_parts="lms.djangoapps.ccx.modulestore remove_ccx" class="" classes="sig sig-object py" fullname="remove_ccx" ids="lms.djangoapps.ccx.modulestore.remove_ccx" module="lms.djangoapps.ccx.modulestore"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.modulestore.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">to_strip</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A context manager for wrapping modulestore api methods.</paragraph>
                    <paragraph>yields a stripped value and a function suitable for restoring it</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'restore_ccx()\ (in\ module\ lms.djangoapps.ccx.modulestore)',\ 'lms.djangoapps.ccx.modulestore.restore_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="restore_ccx()" _toc_parts="lms.djangoapps.ccx.modulestore restore_ccx" class="" classes="sig sig-object py" fullname="restore_ccx" ids="lms.djangoapps.ccx.modulestore.restore_ccx" module="lms.djangoapps.ccx.modulestore"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.modulestore.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">restore_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">val</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>restore references to a CCX to the incoming value</paragraph>
                    <paragraph>returns the value converted to a CCX-aware state, using the provided ccx_id</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'restore_ccx_collection()\ (in\ module\ lms.djangoapps.ccx.modulestore)',\ 'lms.djangoapps.ccx.modulestore.restore_ccx_collection',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="restore_ccx_collection()" _toc_parts="lms.djangoapps.ccx.modulestore restore_ccx_collection" class="" classes="sig sig-object py" fullname="restore_ccx_collection" ids="lms.djangoapps.ccx.modulestore.restore_ccx_collection" module="lms.djangoapps.ccx.modulestore"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.modulestore.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">restore_ccx_collection</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>restore references to a CCX to collections of incoming values</paragraph>
                    <paragraph>returns the original collection with all values converted to a ccx-aware
                        state, using the provided ccx_id</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'strip_ccx()\ (in\ module\ lms.djangoapps.ccx.modulestore)',\ 'lms.djangoapps.ccx.modulestore.strip_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="strip_ccx()" _toc_parts="lms.djangoapps.ccx.modulestore strip_ccx" class="" classes="sig sig-object py" fullname="strip_ccx" ids="lms.djangoapps.ccx.modulestore.strip_ccx" module="lms.djangoapps.ccx.modulestore"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.modulestore.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">strip_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">val</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>remove any reference to a CCX from the incoming value</paragraph>
                    <paragraph>return a tuple of the stripped value and the id of the ccx</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.overrides lms-djangoapps-ccx-overrides-module" names="lms.djangoapps.ccx.overrides\ module">
            <title>lms.djangoapps.ccx.overrides module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.overrides',\ 'module-lms.djangoapps.ccx.overrides',\ '',\ None]"></index>
            <paragraph>API related to providing field overrides for individual students.  This is used
                by the individual custom courses feature.</paragraph>
            <index entries="['single',\ 'CustomCoursesForEdxOverrideProvider\ (class\ in\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CustomCoursesForEdxOverrideProvider" _toc_parts="lms.djangoapps.ccx.overrides CustomCoursesForEdxOverrideProvider" class="" classes="sig sig-object py" fullname="CustomCoursesForEdxOverrideProvider" ids="lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider" module="lms.djangoapps.ccx.overrides"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CustomCoursesForEdxOverrideProvider</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fallback_field_data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="lms.djangoapps.courseware.field_overrides.FieldOverrideProvider" refuri="lms.djangoapps.courseware#lms.djangoapps.courseware.field_overrides.FieldOverrideProvider"><literal classes="xref py py-class">FieldOverrideProvider</literal></reference></paragraph>
                    <paragraph>A concrete implementation of
                        <literal classes="xref py py-class">FieldOverrideProvider</literal> which allows for
                        overrides to be made on a per user basis.</paragraph>
                    <index entries="['single',\ 'enabled_for()\ (lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider\ class\ method)',\ 'lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider.enabled_for',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCoursesForEdxOverrideProvider.enabled_for()" _toc_parts="lms.djangoapps.ccx.overrides CustomCoursesForEdxOverrideProvider enabled_for" class="CustomCoursesForEdxOverrideProvider" classes="sig sig-object py" fullname="CustomCoursesForEdxOverrideProvider.enabled_for" ids="lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider.enabled_for" module="lms.djangoapps.ccx.overrides"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">enabled_for</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>CCX field overrides are enabled for CCX blocks.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider\ method)',\ 'lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomCoursesForEdxOverrideProvider.get()" _toc_parts="lms.djangoapps.ccx.overrides CustomCoursesForEdxOverrideProvider get" class="CustomCoursesForEdxOverrideProvider" classes="sig sig-object py" fullname="CustomCoursesForEdxOverrideProvider.get" ids="lms.djangoapps.ccx.overrides.CustomCoursesForEdxOverrideProvider.get" module="lms.djangoapps.ccx.overrides"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Just call the get_override_for_ccx method if there is a ccx</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'bulk_delete_ccx_override_fields()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.bulk_delete_ccx_override_fields',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="bulk_delete_ccx_override_fields()" _toc_parts="lms.djangoapps.ccx.overrides bulk_delete_ccx_override_fields" class="" classes="sig sig-object py" fullname="bulk_delete_ccx_override_fields" ids="lms.djangoapps.ccx.overrides.bulk_delete_ccx_override_fields" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">bulk_delete_ccx_override_fields</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ids</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bulk delete for CcxFieldOverride model</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'clear_ccx_field_info_from_ccx_map()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.clear_ccx_field_info_from_ccx_map',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clear_ccx_field_info_from_ccx_map()" _toc_parts="lms.djangoapps.ccx.overrides clear_ccx_field_info_from_ccx_map" class="" classes="sig sig-object py" fullname="clear_ccx_field_info_from_ccx_map" ids="lms.djangoapps.ccx.overrides.clear_ccx_field_info_from_ccx_map" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clear_ccx_field_info_from_ccx_map</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove field information from ccx overrides mapping dictionary</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'clear_override_for_ccx()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.clear_override_for_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clear_override_for_ccx()" _toc_parts="lms.djangoapps.ccx.overrides clear_override_for_ccx" class="" classes="sig sig-object py" fullname="clear_override_for_ccx" ids="lms.djangoapps.ccx.overrides.clear_override_for_ccx" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clear_override_for_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Clears a previously set field override for the <title_reference>ccx</title_reference>.  <title_reference>block</title_reference> and <title_reference>name</title_reference>
                        specify the block and the name of the field on that block to clear.
                        This function is idempotent–if no override is set, nothing action is
                        performed.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_current_ccx()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.get_current_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_current_ccx()" _toc_parts="lms.djangoapps.ccx.overrides get_current_ccx" class="" classes="sig sig-object py" fullname="get_current_ccx" ids="lms.djangoapps.ccx.overrides.get_current_ccx" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_current_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the ccx that is active for this course.</paragraph>
                    <paragraph>course_key is expected to be an instance of an opaque CourseKey, a
                        ValueError is raised if this expectation is not met.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_override_for_ccx()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.get_override_for_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_override_for_ccx()" _toc_parts="lms.djangoapps.ccx.overrides get_override_for_ccx" class="" classes="sig sig-object py" fullname="get_override_for_ccx" ids="lms.djangoapps.ccx.overrides.get_override_for_ccx" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_override_for_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Gets the value of the overridden field for the <title_reference>ccx</title_reference>.  <title_reference>block</title_reference> and <title_reference>name</title_reference>
                        specify the block and the name of the field.  If the field is not
                        overridden for the given ccx, returns <title_reference>default</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'override_field_for_ccx()\ (in\ module\ lms.djangoapps.ccx.overrides)',\ 'lms.djangoapps.ccx.overrides.override_field_for_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="override_field_for_ccx()" _toc_parts="lms.djangoapps.ccx.overrides override_field_for_ccx" class="" classes="sig sig-object py" fullname="override_field_for_ccx" ids="lms.djangoapps.ccx.overrides.override_field_for_ccx" module="lms.djangoapps.ccx.overrides"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.overrides.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">override_field_for_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Overrides a field for the <title_reference>ccx</title_reference>.  <title_reference>block</title_reference> and <title_reference>name</title_reference> specify the block
                        and the name of the field on that block to override.  <title_reference>value</title_reference> is the
                        value to set for the given field.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.permissions lms-djangoapps-ccx-permissions-module" names="lms.djangoapps.ccx.permissions\ module">
            <title>lms.djangoapps.ccx.permissions module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.permissions',\ 'module-lms.djangoapps.ccx.permissions',\ '',\ None]"></index>
            <paragraph>Permission definitions for the ccx djangoapp</paragraph>
        </section>
        <section ids="module-lms.djangoapps.ccx.plugins lms-djangoapps-ccx-plugins-module" names="lms.djangoapps.ccx.plugins\ module">
            <title>lms.djangoapps.ccx.plugins module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.plugins',\ 'module-lms.djangoapps.ccx.plugins',\ '',\ None]"></index>
            <paragraph>Registers the CCX feature for the edX platform.</paragraph>
            <index entries="['single',\ 'CcxCourseTab\ (class\ in\ lms.djangoapps.ccx.plugins)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CcxCourseTab" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab" class="" classes="sig sig-object py" fullname="CcxCourseTab" ids="lms.djangoapps.ccx.plugins.CcxCourseTab" module="lms.djangoapps.ccx.plugins"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.plugins.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CcxCourseTab</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tab_dict</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">CourseTab</literal></paragraph>
                    <paragraph>The representation of the CCX course tab</paragraph>
                    <index entries="['single',\ 'is_dynamic\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ attribute)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.is_dynamic',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxCourseTab.is_dynamic" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab is_dynamic" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.is_dynamic" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.is_dynamic" module="lms.djangoapps.ccx.plugins"><desc_name classes="sig-name descname" xml:space="preserve">is_dynamic</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_enabled()\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ class\ method)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.is_enabled',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CcxCourseTab.is_enabled()" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab is_enabled" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.is_enabled" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.is_enabled" module="lms.djangoapps.ccx.plugins"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_enabled</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns true if CCX has been enabled and the specified user is a coach</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'priority\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ attribute)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.priority',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxCourseTab.priority" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab priority" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.priority" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.priority" module="lms.djangoapps.ccx.plugins"><desc_name classes="sig-name descname" xml:space="preserve">priority</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>310</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'title\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ attribute)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.title',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxCourseTab.title" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab title" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.title" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.title" module="lms.djangoapps.ccx.plugins"><desc_name classes="sig-name descname" xml:space="preserve">title</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'CCX Coach'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'type\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ attribute)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxCourseTab.type" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab type" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.type" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.type" module="lms.djangoapps.ccx.plugins"><desc_name classes="sig-name descname" xml:space="preserve">type</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'ccx_coach'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'view_name\ (lms.djangoapps.ccx.plugins.CcxCourseTab\ attribute)',\ 'lms.djangoapps.ccx.plugins.CcxCourseTab.view_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CcxCourseTab.view_name" _toc_parts="lms.djangoapps.ccx.plugins CcxCourseTab view_name" class="CcxCourseTab" classes="sig sig-object py" fullname="CcxCourseTab.view_name" ids="lms.djangoapps.ccx.plugins.CcxCourseTab.view_name" module="lms.djangoapps.ccx.plugins"><desc_name classes="sig-name descname" xml:space="preserve">view_name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'ccx_coach_dashboard'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.tasks lms-djangoapps-ccx-tasks-module" names="lms.djangoapps.ccx.tasks\ module">
            <title>lms.djangoapps.ccx.tasks module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.tasks',\ 'module-lms.djangoapps.ccx.tasks',\ '',\ None]"></index>
            <paragraph>Asynchronous tasks for the CCX app.</paragraph>
            <index entries="['single',\ 'course_published_handler()\ (in\ module\ lms.djangoapps.ccx.tasks)',\ 'lms.djangoapps.ccx.tasks.course_published_handler',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_published_handler()" _toc_parts="lms.djangoapps.ccx.tasks course_published_handler" class="" classes="sig sig-object py" fullname="course_published_handler" ids="lms.djangoapps.ccx.tasks.course_published_handler" module="lms.djangoapps.ccx.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_published_handler</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Consume signals that indicate course published. If course already a CCX, do nothing.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.urls lms-djangoapps-ccx-urls-module" names="lms.djangoapps.ccx.urls\ module">
            <title>lms.djangoapps.ccx.urls module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.urls',\ 'module-lms.djangoapps.ccx.urls',\ '',\ None]"></index>
            <paragraph>URLs for the CCX Feature.</paragraph>
        </section>
        <section ids="module-lms.djangoapps.ccx.utils lms-djangoapps-ccx-utils-module" names="lms.djangoapps.ccx.utils\ module">
            <title>lms.djangoapps.ccx.utils module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.utils',\ 'module-lms.djangoapps.ccx.utils',\ '',\ None]"></index>
            <paragraph>CCX Enrollment operations for use by Coach APIs.</paragraph>
            <paragraph>Does not include any access control, be sure to check access before calling.</paragraph>
            <index entries="['single',\ 'add_master_course_staff_to_ccx()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.add_master_course_staff_to_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_master_course_staff_to_ccx()" _toc_parts="lms.djangoapps.ccx.utils add_master_course_staff_to_ccx" class="" classes="sig sig-object py" fullname="add_master_course_staff_to_ccx" ids="lms.djangoapps.ccx.utils.add_master_course_staff_to_ccx" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_master_course_staff_to_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">master_course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">display_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">send_email</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Add staff and instructor roles on ccx to all the staff and instructors members of master course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>master_course</literal_strong> (<literal_emphasis>CourseBlockWithMixins</literal_emphasis>) – Master course instance.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ccx_key</literal_strong> (<literal_emphasis>CCXLocator</literal_emphasis>) – CCX course key.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>display_name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – ccx display name for email.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>send_email</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – flag to switch on or off email to the users on access grant.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'assign_staff_role_to_ccx()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.assign_staff_role_to_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="assign_staff_role_to_ccx()" _toc_parts="lms.djangoapps.ccx.utils assign_staff_role_to_ccx" class="" classes="sig sig-object py" fullname="assign_staff_role_to_ccx" ids="lms.djangoapps.ccx.utils.assign_staff_role_to_ccx" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">assign_staff_role_to_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_locator</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">master_course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if user has ccx_coach role on master course then assign them staff role on ccx only
                        if role is not already assigned. Because of this coach can open dashboard from master course
                        as well as ccx.
                        :param ccx_locator: CCX key
                        :param user: User to whom we want to assign role.
                        :param master_course_id: Master course key</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_course()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.ccx_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_course()" _toc_parts="lms.djangoapps.ccx.utils ccx_course" class="" classes="sig sig-object py" fullname="ccx_course" ids="lms.djangoapps.ccx.utils.ccx_course" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_course</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_locator</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create a context in which the course identified by course_locator exists</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_students_enrolling_center()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.ccx_students_enrolling_center',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_students_enrolling_center()" _toc_parts="lms.djangoapps.ccx.utils ccx_students_enrolling_center" class="" classes="sig sig-object py" fullname="ccx_students_enrolling_center" ids="lms.djangoapps.ccx.utils.ccx_students_enrolling_center" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_students_enrolling_center</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">identifiers</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">email_students</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">email_params</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">coach</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function to enroll or unenroll/revoke students.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>action</literal_strong> (<literal_emphasis>str</literal_emphasis>) – type of action to perform (Enroll, Unenroll/revoke)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>identifiers</literal_strong> (<literal_emphasis>list</literal_emphasis>) – list of students username/email</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>email_students</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Flag to send an email to students</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CCXLocator</literal_emphasis>) – a CCX course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>email_params</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – dictionary of settings for the email to be sent</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>coach</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – ccx coach</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of error</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>list</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_ccx_by_ccx_id()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_ccx_by_ccx_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_ccx_by_ccx_id()" _toc_parts="lms.djangoapps.ccx.utils get_ccx_by_ccx_id" class="" classes="sig sig-object py" fullname="get_ccx_by_ccx_id" ids="lms.djangoapps.ccx.utils.get_ccx_by_ccx_id" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_by_ccx_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">coach</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Finds a CCX of given coach on given master course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course</literal_strong> (<literal_emphasis>CourseBlock</literal_emphasis>) – Master course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>coach</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – Coach to ccx</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ccx_id</literal_strong> (<literal_emphasis>long</literal_emphasis>) – Id of ccx</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Instance of CCX.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>ccx (<reference internal="True" refid="lms.djangoapps.ccx.models.CustomCourseForEdX" reftitle="lms.djangoapps.ccx.models.CustomCourseForEdX">CustomCourseForEdX</reference>)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_ccx_creation_dict()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_ccx_creation_dict',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_ccx_creation_dict()" _toc_parts="lms.djangoapps.ccx.utils get_ccx_creation_dict" class="" classes="sig sig-object py" fullname="get_ccx_creation_dict" ids="lms.djangoapps.ccx.utils.get_ccx_creation_dict" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_creation_dict</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return dict of rendering create ccx form.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course</literal_strong> (<literal_emphasis>CourseBlockWithMixins</literal_emphasis>) – An edx course</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A attribute dict for view rendering</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>dict</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_ccx_for_coach()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_ccx_for_coach',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_ccx_for_coach()" _toc_parts="lms.djangoapps.ccx.utils get_ccx_for_coach" class="" classes="sig sig-object py" fullname="get_ccx_for_coach" ids="lms.djangoapps.ccx.utils.get_ccx_for_coach" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_for_coach</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">coach</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Looks to see if user is coach of a CCX for this course.  Returns the CCX or
                        None.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_ccx_from_ccx_locator()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_ccx_from_ccx_locator',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_ccx_from_ccx_locator()" _toc_parts="lms.djangoapps.ccx.utils get_ccx_from_ccx_locator" class="" classes="sig sig-object py" fullname="get_ccx_from_ccx_locator" ids="lms.djangoapps.ccx.utils.get_ccx_from_ccx_locator" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_from_ccx_locator</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>helper function to allow querying ccx fields from templates</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_date()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_date',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_date()" _toc_parts="lms.djangoapps.ccx.utils get_date" class="" classes="sig sig-object py" fullname="get_date" ids="lms.djangoapps.ccx.utils.get_date" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_date</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">node</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">date_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_node</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This returns override or master date for section, subsection or a unit.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>ccx</literal_strong> – ccx instance</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>node</literal_strong> – chapter, subsection or unit</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>date_type</literal_strong> – start or due</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>parent_node</literal_strong> – parent of node</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>start or due date</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_enrollment_action_and_identifiers()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_enrollment_action_and_identifiers',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_enrollment_action_and_identifiers()" _toc_parts="lms.djangoapps.ccx.utils get_enrollment_action_and_identifiers" class="" classes="sig sig-object py" fullname="get_enrollment_action_and_identifiers" ids="lms.djangoapps.ccx.utils.get_enrollment_action_and_identifiers" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_enrollment_action_and_identifiers</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Extracts action type and student identifiers from the request
                        on Enrollment tab of CCX Dashboard.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_valid_student_with_email()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.get_valid_student_with_email',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_valid_student_with_email()" _toc_parts="lms.djangoapps.ccx.utils get_valid_student_with_email" class="" classes="sig sig-object py" fullname="get_valid_student_with_email" ids="lms.djangoapps.ccx.utils.get_valid_student_with_email" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_valid_student_with_email</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">identifier</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function to get an user email from an identifier and validate it.</paragraph>
                    <paragraph>In the UI a Coach can enroll users using both an email and an username.
                        This function takes care of:
                        - in case the identifier is an username, extracting the user object from</paragraph>
                    <block_quote>
                        <paragraph>the DB and then the associated email</paragraph>
                    </block_quote>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>validating the email</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>identifier</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Username or email of the user to enroll</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph><definition_list><definition_list_item><term>tuple containing:</term><definition><paragraph>email (str): A validated email for the user to enroll.
                                                    user (User): A valid User object or None.</paragraph></definition></definition_list_item></definition_list></paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>(tuple)</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="lms.djangoapps.ccx.custom_exception.CCXUserValidationException" reftitle="lms.djangoapps.ccx.custom_exception.CCXUserValidationException"><literal_strong>CCXUserValidationException</literal_strong></reference> – if the username is not found or the email
                                        is not valid.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_email()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.is_email',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_email()" _toc_parts="lms.djangoapps.ccx.utils is_email" class="" classes="sig sig-object py" fullname="is_email" ids="lms.djangoapps.ccx.utils.is_email" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_email</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">identifier</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Checks if an <title_reference>identifier</title_reference> string is a valid email</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'parse_date()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.parse_date',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="parse_date()" _toc_parts="lms.djangoapps.ccx.utils parse_date" class="" classes="sig sig-object py" fullname="parse_date" ids="lms.djangoapps.ccx.utils.parse_date" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">parse_date</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">datestring</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate a UTC datetime.datetime object from a string of the form
                        ‘YYYY-MM-DD HH:MM’.  If string is empty or <title_reference>None</title_reference>, returns <title_reference>None</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_master_course_staff_from_ccx()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.remove_master_course_staff_from_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_master_course_staff_from_ccx()" _toc_parts="lms.djangoapps.ccx.utils remove_master_course_staff_from_ccx" class="" classes="sig sig-object py" fullname="remove_master_course_staff_from_ccx" ids="lms.djangoapps.ccx.utils.remove_master_course_staff_from_ccx" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_master_course_staff_from_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">master_course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">display_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">send_email</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove staff and instructor roles on ccx to all the staff and instructors members of master course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>master_course</literal_strong> (<literal_emphasis>CourseBlockWithMixins</literal_emphasis>) – Master course instance.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ccx_key</literal_strong> (<literal_emphasis>CCXLocator</literal_emphasis>) – CCX course key.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>display_name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – ccx display name for email.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>send_email</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – flag to switch on or off email to the users on revoke access.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'validate_date()\ (in\ module\ lms.djangoapps.ccx.utils)',\ 'lms.djangoapps.ccx.utils.validate_date',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="validate_date()" _toc_parts="lms.djangoapps.ccx.utils validate_date" class="" classes="sig sig-object py" fullname="validate_date" ids="lms.djangoapps.ccx.utils.validate_date" module="lms.djangoapps.ccx.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">validate_date</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">year</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">month</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">day</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">hour</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">minute</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>avoid corrupting db if bad dates come in</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.views lms-djangoapps-ccx-views-module" names="lms.djangoapps.ccx.views\ module">
            <title>lms.djangoapps.ccx.views module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.views',\ 'module-lms.djangoapps.ccx.views',\ '',\ None]"></index>
            <paragraph>Views related to the Custom Courses feature.</paragraph>
            <index entries="['single',\ 'TODAY()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.TODAY',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="TODAY()" _toc_parts="lms.djangoapps.ccx.views TODAY" class="" classes="sig sig-object py" fullname="TODAY" ids="lms.djangoapps.ccx.views.TODAY" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TODAY</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Current date or datetime:  same as self.__class__.fromtimestamp(time.time()).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_gradebook()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.ccx_gradebook',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_gradebook()" _toc_parts="lms.djangoapps.ccx.views ccx_gradebook" class="" classes="sig sig-object py" fullname="ccx_gradebook" ids="lms.djangoapps.ccx.views.ccx_gradebook" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_gradebook</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Show the gradebook for this CCX.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_grades_csv()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.ccx_grades_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_grades_csv()" _toc_parts="lms.djangoapps.ccx.views ccx_grades_csv" class="" classes="sig sig-object py" fullname="ccx_grades_csv" ids="lms.djangoapps.ccx.views.ccx_grades_csv" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_grades_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Download grades as CSV.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_schedule()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.ccx_schedule',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_schedule()" _toc_parts="lms.djangoapps.ccx.views ccx_schedule" class="" classes="sig sig-object py" fullname="ccx_schedule" ids="lms.djangoapps.ccx.views.ccx_schedule" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_schedule</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>get json representation of ccx schedule</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ccx_students_management()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.ccx_students_management',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ccx_students_management()" _toc_parts="lms.djangoapps.ccx.views ccx_students_management" class="" classes="sig sig-object py" fullname="ccx_students_management" ids="lms.djangoapps.ccx.views.ccx_students_management" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ccx_students_management</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Manage the enrollment of the students in a CCX</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'coach_dashboard()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.coach_dashboard',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="coach_dashboard()" _toc_parts="lms.djangoapps.ccx.views coach_dashboard" class="" classes="sig sig-object py" fullname="coach_dashboard" ids="lms.djangoapps.ccx.views.coach_dashboard" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">coach_dashboard</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>View decorator which enforces that the user have the CCX coach role on the
                        given course and goes ahead and translates the course_id from the Django
                        route into a course object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_ccx()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.create_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_ccx()" _toc_parts="lms.djangoapps.ccx.views create_ccx" class="" classes="sig sig-object py" fullname="create_ccx" ids="lms.djangoapps.ccx.views.create_ccx" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create a new CCX</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'dashboard()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.dashboard',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="dashboard()" _toc_parts="lms.djangoapps.ccx.views dashboard" class="" classes="sig sig-object py" fullname="dashboard" ids="lms.djangoapps.ccx.views.dashboard" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">dashboard</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Display the CCX Coach Dashboard.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_ccx_schedule()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.get_ccx_schedule',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_ccx_schedule()" _toc_parts="lms.djangoapps.ccx.views get_ccx_schedule" class="" classes="sig sig-object py" fullname="get_ccx_schedule" ids="lms.djangoapps.ccx.views.get_ccx_schedule" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_schedule</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate a JSON serializable CCX schedule.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'save_ccx()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.save_ccx',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="save_ccx()" _toc_parts="lms.djangoapps.ccx.views save_ccx" class="" classes="sig sig-object py" fullname="save_ccx" ids="lms.djangoapps.ccx.views.save_ccx" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">save_ccx</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Save changes to CCX.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_grading_policy()\ (in\ module\ lms.djangoapps.ccx.views)',\ 'lms.djangoapps.ccx.views.set_grading_policy',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_grading_policy()" _toc_parts="lms.djangoapps.ccx.views set_grading_policy" class="" classes="sig sig-object py" fullname="set_grading_policy" ids="lms.djangoapps.ccx.views.set_grading_policy" module="lms.djangoapps.ccx.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_grading_policy</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Set grading policy for the CCX.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx',\ 'module-lms.djangoapps.ccx',\ '',\ None]"></index>
        </section>
    </section>
</document>
