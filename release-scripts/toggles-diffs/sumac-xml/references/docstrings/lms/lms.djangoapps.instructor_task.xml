<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/lms/lms.djangoapps.instructor_task.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-instructor-task-package" names="lms.djangoapps.instructor_task\ package">
        <title>lms.djangoapps.instructor_task package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.config">lms.djangoapps.instructor_task.config package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.instructor_task.config#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.config.models" internal="True" refuri="lms.djangoapps.instructor_task.config#module-lms.djangoapps.instructor_task.config.models">lms.djangoapps.instructor_task.config.models module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting"><literal>GradeReportSetting</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.DoesNotExist" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.DoesNotExist"><literal>GradeReportSetting.DoesNotExist</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.MultipleObjectsReturned" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.MultipleObjectsReturned"><literal>GradeReportSetting.MultipleObjectsReturned</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.batch_size" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.batch_size"><literal>GradeReportSetting.batch_size</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.change_date" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.change_date"><literal>GradeReportSetting.change_date</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.changed_by" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.changed_by"><literal>GradeReportSetting.changed_by</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.changed_by_id" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.changed_by_id"><literal>GradeReportSetting.changed_by_id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.enabled" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.enabled"><literal>GradeReportSetting.enabled</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.get_next_by_change_date" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.get_next_by_change_date"><literal>GradeReportSetting.get_next_by_change_date()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.get_previous_by_change_date" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.get_previous_by_change_date"><literal>GradeReportSetting.get_previous_by_change_date()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.models.GradeReportSetting.id" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.models.GradeReportSetting.id"><literal>GradeReportSetting.id</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.config.waffle" internal="True" refuri="lms.djangoapps.instructor_task.config#module-lms.djangoapps.instructor_task.config.waffle">lms.djangoapps.instructor_task.config.waffle module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.waffle.course_grade_report_verified_only" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.waffle.course_grade_report_verified_only"><literal>course_grade_report_verified_only()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.waffle.optimize_get_learners_switch_enabled" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.waffle.optimize_get_learners_switch_enabled"><literal>optimize_get_learners_switch_enabled()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.waffle.problem_grade_report_verified_only" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.waffle.problem_grade_report_verified_only"><literal>problem_grade_report_verified_only()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.config.waffle.use_on_disk_grade_reporting" internal="True" refuri="lms.djangoapps.instructor_task.config#lms.djangoapps.instructor_task.config.waffle.use_on_disk_grade_reporting"><literal>use_on_disk_grade_reporting()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.config" internal="True" refuri="lms.djangoapps.instructor_task.config#module-lms.djangoapps.instructor_task.config">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.management">lms.djangoapps.instructor_task.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="lms.djangoapps.instructor_task.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.management.commands">lms.djangoapps.instructor_task.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.instructor_task.management.commands#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.management.commands.fail_old_tasks" internal="True" refuri="lms.djangoapps.instructor_task.management.commands#module-lms.djangoapps.instructor_task.management.commands.fail_old_tasks">lms.djangoapps.instructor_task.management.commands.fail_old_tasks module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.management.commands.process_scheduled_instructor_tasks" internal="True" refuri="lms.djangoapps.instructor_task.management.commands#module-lms.djangoapps.instructor_task.management.commands.process_scheduled_instructor_tasks">lms.djangoapps.instructor_task.management.commands.process_scheduled_instructor_tasks module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.management.commands" internal="True" refuri="lms.djangoapps.instructor_task.management.commands#module-lms.djangoapps.instructor_task.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.management" internal="True" refuri="lms.djangoapps.instructor_task.management#module-lms.djangoapps.instructor_task.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.rest_api">lms.djangoapps.instructor_task.rest_api package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="lms.djangoapps.instructor_task.rest_api#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1">lms.djangoapps.instructor_task.rest_api.v1 package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1.exceptions" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1.exceptions">lms.djangoapps.instructor_task.rest_api.v1.exceptions module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1.permissions" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1.permissions">lms.djangoapps.instructor_task.rest_api.v1.permissions module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1.serializers" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1.serializers">lms.djangoapps.instructor_task.rest_api.v1.serializers module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1.urls" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1.urls">lms.djangoapps.instructor_task.rest_api.v1.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1.views" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1.views">lms.djangoapps.instructor_task.rest_api.v1.views module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.v1" internal="True" refuri="lms.djangoapps.instructor_task.rest_api.v1#module-lms.djangoapps.instructor_task.rest_api.v1">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.instructor_task.rest_api#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api.urls" internal="True" refuri="lms.djangoapps.instructor_task.rest_api#module-lms.djangoapps.instructor_task.rest_api.urls">lms.djangoapps.instructor_task.rest_api.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.rest_api" internal="True" refuri="lms.djangoapps.instructor_task.rest_api#module-lms.djangoapps.instructor_task.rest_api">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper">lms.djangoapps.instructor_task.tasks_helper package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.certs" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.certs">lms.djangoapps.instructor_task.tasks_helper.certs module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.certs.generate_students_certificates" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.certs.generate_students_certificates"><literal>generate_students_certificates()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.certs.students_require_certificate" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.certs.students_require_certificate"><literal>students_require_certificate()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.enrollments" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.enrollments">lms.djangoapps.instructor_task.tasks_helper.enrollments module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_may_enroll_csv" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_may_enroll_csv"><literal>upload_may_enroll_csv()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_students_csv" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.enrollments.upload_students_csv"><literal>upload_students_csv()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.grades" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.grades">lms.djangoapps.instructor_task.tasks_helper.grades module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport"><literal>CourseGradeReport</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.USER_BATCH_SIZE" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.USER_BATCH_SIZE"><literal>CourseGradeReport.USER_BATCH_SIZE</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.generate" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.CourseGradeReport.generate"><literal>CourseGradeReport.generate()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase"><literal>GradeReportBase</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_additional_info_for_testing" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_additional_info_for_testing"><literal>GradeReportBase.log_additional_info_for_testing()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_task_info" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.GradeReportBase.log_task_info"><literal>GradeReportBase.log_task_info()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryCourseGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryCourseGradeReport"><literal>InMemoryCourseGradeReport</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryProblemGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryProblemGradeReport"><literal>InMemoryProblemGradeReport</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.InMemoryReportMixin"><literal>InMemoryReportMixin</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport"><literal>ProblemGradeReport</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport.generate" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemGradeReport.generate"><literal>ProblemGradeReport.generate()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses"><literal>ProblemResponses</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses.generate" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.ProblemResponses.generate"><literal>ProblemResponses.generate()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.TempFileCourseGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.TempFileCourseGradeReport"><literal>TempFileCourseGradeReport</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.TempFileProblemGradeReport" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.TempFileProblemGradeReport"><literal>TempFileProblemGradeReport</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin"><literal>TemporaryFileReportMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.iter_and_write_batched_rows" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.iter_and_write_batched_rows"><literal>TemporaryFileReportMixin.iter_and_write_batched_rows()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.upload_temp_files" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.grades.TemporaryFileReportMixin.upload_temp_files"><literal>TemporaryFileReportMixin.upload_temp_files()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.misc" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.misc">lms.djangoapps.instructor_task.tasks_helper.misc module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.cohort_students_and_upload" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.cohort_students_and_upload"><literal>cohort_students_and_upload()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.generate_anonymous_ids" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.generate_anonymous_ids"><literal>generate_anonymous_ids()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.upload_course_survey_report" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.upload_course_survey_report"><literal>upload_course_survey_report()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_data" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_data"><literal>upload_ora2_data()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_submission_files" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_submission_files"><literal>upload_ora2_submission_files()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_summary" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.upload_ora2_summary"><literal>upload_ora2_summary()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.misc.upload_proctored_exam_results_report" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.misc.upload_proctored_exam_results_report"><literal>upload_proctored_exam_results_report()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.module_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.module_state">lms.djangoapps.instructor_task.tasks_helper.module_state module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.module_state.delete_problem_module_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.module_state.delete_problem_module_state"><literal>delete_problem_module_state()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.module_state.override_score_module_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.module_state.override_score_module_state"><literal>override_score_module_state()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.module_state.perform_module_state_update" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.module_state.perform_module_state_update"><literal>perform_module_state_update()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.module_state.rescore_problem_module_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.module_state.rescore_problem_module_state"><literal>rescore_problem_module_state()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.module_state.reset_attempts_module_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.module_state.reset_attempts_module_state"><literal>reset_attempts_module_state()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.runner" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.runner">lms.djangoapps.instructor_task.tasks_helper.runner module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress"><literal>TaskProgress</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.state"><literal>TaskProgress.state</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.update_task_state" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.runner.TaskProgress.update_task_state"><literal>TaskProgress.update_task_state()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.runner.run_main_task" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.runner.run_main_task"><literal>run_main_task()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper.utils" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper.utils">lms.djangoapps.instructor_task.tasks_helper.utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.utils.tracker_emit" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.utils.tracker_emit"><literal>tracker_emit()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_file_to_report_store" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_file_to_report_store"><literal>upload_csv_file_to_report_store()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_to_report_store" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.utils.upload_csv_to_report_store"><literal>upload_csv_to_report_store()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.instructor_task.tasks_helper.utils.upload_zip_to_report_store" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#lms.djangoapps.instructor_task.tasks_helper.utils.upload_zip_to_report_store"><literal>upload_zip_to_report_store()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_task.tasks_helper" internal="True" refuri="lms.djangoapps.instructor_task.tasks_helper#module-lms.djangoapps.instructor_task.tasks_helper">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.api lms-djangoapps-instructor-task-api-module" names="lms.djangoapps.instructor_task.api\ module">
            <title>lms.djangoapps.instructor_task.api module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.api',\ 'module-lms.djangoapps.instructor_task.api',\ '',\ None]"></index>
            <paragraph>API for submitting background tasks by an instructor for a course.</paragraph>
            <paragraph>Also includes methods for getting information about tasks that have
                already been submitted, filtered either by running state or input
                arguments.</paragraph>
            <index entries="['single',\ 'SpecificStudentIdMissingError',\ 'lms.djangoapps.instructor_task.api.SpecificStudentIdMissingError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="SpecificStudentIdMissingError" _toc_parts="lms.djangoapps.instructor_task.api SpecificStudentIdMissingError" class="" classes="sig sig-object py" fullname="SpecificStudentIdMissingError" ids="lms.djangoapps.instructor_task.api.SpecificStudentIdMissingError" module="lms.djangoapps.instructor_task.api"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SpecificStudentIdMissingError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception indicating that a student id was not provided when generating a certificate for a specific student.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'generate_anonymous_ids()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.generate_anonymous_ids',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_anonymous_ids()" _toc_parts="lms.djangoapps.instructor_task.api generate_anonymous_ids" class="" classes="sig sig-object py" fullname="generate_anonymous_ids" ids="lms.djangoapps.instructor_task.api.generate_anonymous_ids" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_anonymous_ids</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate anonymize id CSV report.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'generate_certificates_for_students()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.generate_certificates_for_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_certificates_for_students()" _toc_parts="lms.djangoapps.instructor_task.api generate_certificates_for_students" class="" classes="sig sig-object py" fullname="generate_certificates_for_students" ids="lms.djangoapps.instructor_task.api.generate_certificates_for_students" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_certificates_for_students</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_set</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">specific_student_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate certificates for given students enrolled in the course.</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>Arguments:</term>
                                <definition>
                                    <paragraph>course_key  : Course Key
                                        student_set : Semantic for student collection for certificate generation.</paragraph>
                                    <block_quote>
                                        <paragraph>Options are:
                                            ‘all_allowlisted’: All students on the certificate allowlist.
                                            ‘allowlisted_not_generated’: Students on certificate allowlist who do not have certificates yet.
                                            ‘specific_student’: Single student for certificate generation.</paragraph>
                                    </block_quote>
                                    <paragraph>specific_student_id : Student ID when student_set is ‘specific_student’</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </block_quote>
                    <paragraph>Raises AlreadyRunningError if certificates are currently being generated.
                        Raises SpecificStudentIdMissingError if student_set is ‘specific_student’ and specific_student_id is ‘None’</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_entrance_exam_instructor_task_history()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.get_entrance_exam_instructor_task_history',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_entrance_exam_instructor_task_history()" _toc_parts="lms.djangoapps.instructor_task.api get_entrance_exam_instructor_task_history" class="" classes="sig sig-object py" fullname="get_entrance_exam_instructor_task_history" ids="lms.djangoapps.instructor_task.api.get_entrance_exam_instructor_task_history" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_entrance_exam_instructor_task_history</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a query of InstructorTask objects of historical tasks for a given course,
                        that optionally match an entrance exam and student if present.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_instructor_task_history()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.get_instructor_task_history',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_instructor_task_history()" _toc_parts="lms.djangoapps.instructor_task.api get_instructor_task_history" class="" classes="sig sig-object py" fullname="get_instructor_task_history" ids="lms.djangoapps.instructor_task.api.get_instructor_task_history" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_instructor_task_history</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a query of InstructorTask objects of historical tasks for a given course,
                        that optionally match a particular problem, a student, and/or a task type.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_running_instructor_tasks()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.get_running_instructor_tasks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_running_instructor_tasks()" _toc_parts="lms.djangoapps.instructor_task.api get_running_instructor_tasks" class="" classes="sig sig-object py" fullname="get_running_instructor_tasks" ids="lms.djangoapps.instructor_task.api.get_running_instructor_tasks" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_running_instructor_tasks</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a query of InstructorTask objects of running tasks for a given course.</paragraph>
                    <paragraph>Used to generate a list of tasks to display on the instructor dashboard.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'process_scheduled_instructor_tasks()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.process_scheduled_instructor_tasks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="process_scheduled_instructor_tasks()" _toc_parts="lms.djangoapps.instructor_task.api process_scheduled_instructor_tasks" class="" classes="sig sig-object py" fullname="process_scheduled_instructor_tasks" ids="lms.djangoapps.instructor_task.api.process_scheduled_instructor_tasks" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">process_scheduled_instructor_tasks</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Utility function that retrieves tasks whose schedules have elapsed and should be processed. Only retrieves
                        instructor tasks that are in the <title_reference>SCHEDULED</title_reference> state. Then submits these tasks for processing by Celery.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'regenerate_certificates()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.regenerate_certificates',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="regenerate_certificates()" _toc_parts="lms.djangoapps.instructor_task.api regenerate_certificates" class="" classes="sig sig-object py" fullname="regenerate_certificates" ids="lms.djangoapps.instructor_task.api.regenerate_certificates" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">regenerate_certificates</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">statuses_to_regenerate</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to regenerate certificates for given students enrolled in the course.
                        Regenerate Certificate only if the status of the existing generated certificate is in ‘statuses_to_regenerate’
                        list passed in the arguments.</paragraph>
                    <paragraph>Raises AlreadyRunningError if certificates are currently being generated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_bulk_course_email()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_bulk_course_email',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_bulk_course_email()" _toc_parts="lms.djangoapps.instructor_task.api submit_bulk_course_email" class="" classes="sig sig-object py" fullname="submit_bulk_course_email" ids="lms.djangoapps.instructor_task.api.submit_bulk_course_email" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_bulk_course_email</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">email_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">schedule</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request to have bulk email sent as a background task.</paragraph>
                    <paragraph>The specified CourseEmail object will be sent be updated for all students who have enrolled
                        in a course.  Parameters are the <title_reference>course_key</title_reference> and the <title_reference>email_id</title_reference>, the id of the CourseEmail object.</paragraph>
                    <paragraph>AlreadyRunningError is raised if the same recipients are already being emailed with the same
                        CourseEmail object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_calculate_grades_csv()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_calculate_grades_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_calculate_grades_csv()" _toc_parts="lms.djangoapps.instructor_task.api submit_calculate_grades_csv" class="" classes="sig sig-object py" fullname="submit_calculate_grades_csv" ids="lms.djangoapps.instructor_task.api.submit_calculate_grades_csv" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_calculate_grades_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">task_kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>AlreadyRunningError is raised if the course’s grades are already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_calculate_may_enroll_csv()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_calculate_may_enroll_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_calculate_may_enroll_csv()" _toc_parts="lms.djangoapps.instructor_task.api submit_calculate_may_enroll_csv" class="" classes="sig sig-object py" fullname="submit_calculate_may_enroll_csv" ids="lms.djangoapps.instructor_task.api.submit_calculate_may_enroll_csv" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_calculate_may_enroll_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a CSV file containing information about
                        invited students who have not enrolled in a given course yet.</paragraph>
                    <paragraph>Raises AlreadyRunningError if said file is already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_calculate_problem_responses_csv()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_calculate_problem_responses_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_calculate_problem_responses_csv()" _toc_parts="lms.djangoapps.instructor_task.api submit_calculate_problem_responses_csv" class="" classes="sig sig-object py" fullname="submit_calculate_problem_responses_csv" ids="lms.djangoapps.instructor_task.api.submit_calculate_problem_responses_csv" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_calculate_problem_responses_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">problem_locations</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">problem_types_filter</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a CSV file containing all student
                        answers to a given problem.</paragraph>
                    <paragraph>Raises AlreadyRunningError if said file is already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_calculate_students_features_csv()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_calculate_students_features_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_calculate_students_features_csv()" _toc_parts="lms.djangoapps.instructor_task.api submit_calculate_students_features_csv" class="" classes="sig sig-object py" fullname="submit_calculate_students_features_csv" ids="lms.djangoapps.instructor_task.api.submit_calculate_students_features_csv" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_calculate_students_features_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">task_kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a CSV containing student profile info.</paragraph>
                    <paragraph>Raises AlreadyRunningError if said CSV is already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_cohort_students()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_cohort_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_cohort_students()" _toc_parts="lms.djangoapps.instructor_task.api submit_cohort_students" class="" classes="sig sig-object py" fullname="submit_cohort_students" ids="lms.djangoapps.instructor_task.api.submit_cohort_students" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_cohort_students</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request to have students cohorted in bulk.</paragraph>
                    <paragraph>Raises AlreadyRunningError if students are currently being cohorted.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_course_survey_report()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_course_survey_report',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_course_survey_report()" _toc_parts="lms.djangoapps.instructor_task.api submit_course_survey_report" class="" classes="sig sig-object py" fullname="submit_course_survey_report" ids="lms.djangoapps.instructor_task.api.submit_course_survey_report" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_course_survey_report</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a HTML File containing the executive summary report.</paragraph>
                    <paragraph>Raises AlreadyRunningError if HTML File is already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_delete_entrance_exam_state_for_student()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_delete_entrance_exam_state_for_student',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_delete_entrance_exam_state_for_student()" _toc_parts="lms.djangoapps.instructor_task.api submit_delete_entrance_exam_state_for_student" class="" classes="sig sig-object py" fullname="submit_delete_entrance_exam_state_for_student" ids="lms.djangoapps.instructor_task.api.submit_delete_entrance_exam_state_for_student" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_delete_entrance_exam_state_for_student</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Requests reset of state for entrance exam as a background task.</paragraph>
                    <paragraph>Block state for all problems in entrance exam will be deleted
                        for specified student.</paragraph>
                    <paragraph>All User Milestones of entrance exam will be removed for the specified student</paragraph>
                    <paragraph>Parameters are <title_reference>usage_key</title_reference>, which must be a <literal classes="xref py py-class">Location</literal>
                        representing entrance exam section and the <title_reference>student</title_reference> as a User object.</paragraph>
                    <paragraph>ItemNotFoundError is raised if entrance exam does not exists for given
                        usage_key, AlreadyRunningError is raised if the entrance exam
                        is already being reset.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_delete_problem_state_for_all_students()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_delete_problem_state_for_all_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_delete_problem_state_for_all_students()" _toc_parts="lms.djangoapps.instructor_task.api submit_delete_problem_state_for_all_students" class="" classes="sig sig-object py" fullname="submit_delete_problem_state_for_all_students" ids="lms.djangoapps.instructor_task.api.submit_delete_problem_state_for_all_students" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_delete_problem_state_for_all_students</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request to have state deleted for a problem as a background task.</paragraph>
                    <paragraph>The problem’s state will be deleted for all students who have accessed the
                        particular problem in a course.  Parameters are the <title_reference>course_id</title_reference> and
                        the <title_reference>usage_key</title_reference>, which must be a <literal classes="xref py py-class">Location</literal>.</paragraph>
                    <paragraph>ItemNotFoundException is raised if the problem doesn’t exist, or AlreadyRunningError
                        if the particular problem’s state is already being deleted.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_export_ora2_data()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_export_ora2_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_export_ora2_data()" _toc_parts="lms.djangoapps.instructor_task.api submit_export_ora2_data" class="" classes="sig sig-object py" fullname="submit_export_ora2_data" ids="lms.djangoapps.instructor_task.api.submit_export_ora2_data" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_export_ora2_data</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>AlreadyRunningError is raised if an ora2 report is already being generated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_export_ora2_submission_files()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_export_ora2_submission_files',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_export_ora2_submission_files()" _toc_parts="lms.djangoapps.instructor_task.api submit_export_ora2_submission_files" class="" classes="sig sig-object py" fullname="submit_export_ora2_submission_files" ids="lms.djangoapps.instructor_task.api.submit_export_ora2_submission_files" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_export_ora2_submission_files</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to download and compress all submissions
                        files (texts, attachments) for given course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_export_ora2_summary()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_export_ora2_summary',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_export_ora2_summary()" _toc_parts="lms.djangoapps.instructor_task.api submit_export_ora2_summary" class="" classes="sig sig-object py" fullname="submit_export_ora2_summary" ids="lms.djangoapps.instructor_task.api.submit_export_ora2_summary" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_export_ora2_summary</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>AlreadyRunningError is raised if an ora2 report is already being generated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_override_score()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_override_score',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_override_score()" _toc_parts="lms.djangoapps.instructor_task.api submit_override_score" class="" classes="sig sig-object py" fullname="submit_override_score" ids="lms.djangoapps.instructor_task.api.submit_override_score" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_override_score</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">score</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request a problem score override as a background task. Only
                        applicable to individual users.</paragraph>
                    <paragraph>The problem score will be overridden for the specified student only.
                        Parameters are the <title_reference>course_id</title_reference>, the <title_reference>problem_url</title_reference>, the <title_reference>student</title_reference> as
                        a User object, and the score override desired.
                        The url must specify the location of the problem, using i4x-type notation.</paragraph>
                    <paragraph>ItemNotFoundException is raised if the problem doesn’t exist, or AlreadyRunningError
                        if this task is already running for this student, or NotImplementedError if
                        the problem is not a ScorableXBlock.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_problem_grade_report()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_problem_grade_report',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_problem_grade_report()" _toc_parts="lms.djangoapps.instructor_task.api submit_problem_grade_report" class="" classes="sig sig-object py" fullname="submit_problem_grade_report" ids="lms.djangoapps.instructor_task.api.submit_problem_grade_report" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_problem_grade_report</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">task_kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a CSV grade report containing problem
                        values.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_proctored_exam_results_report()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_proctored_exam_results_report',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_proctored_exam_results_report()" _toc_parts="lms.djangoapps.instructor_task.api submit_proctored_exam_results_report" class="" classes="sig sig-object py" fullname="submit_proctored_exam_results_report" ids="lms.djangoapps.instructor_task.api.submit_proctored_exam_results_report" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_proctored_exam_results_report</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Submits a task to generate a HTML File containing the executive summary report.</paragraph>
                    <paragraph>Raises AlreadyRunningError if HTML File is already being updated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_rescore_entrance_exam_for_student()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_rescore_entrance_exam_for_student',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_rescore_entrance_exam_for_student()" _toc_parts="lms.djangoapps.instructor_task.api submit_rescore_entrance_exam_for_student" class="" classes="sig sig-object py" fullname="submit_rescore_entrance_exam_for_student" ids="lms.djangoapps.instructor_task.api.submit_rescore_entrance_exam_for_student" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_rescore_entrance_exam_for_student</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">only_if_higher</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request entrance exam problems to be re-scored as a background task.</paragraph>
                    <paragraph>The entrance exam problems will be re-scored for given student or if student
                        is None problems for all students who have accessed the entrance exam.</paragraph>
                    <paragraph>Parameters are <title_reference>usage_key</title_reference>, which must be a <literal classes="xref py py-class">Location</literal>
                        representing entrance exam section and the <title_reference>student</title_reference> as a User object.</paragraph>
                    <paragraph>ItemNotFoundError is raised if entrance exam does not exists for given
                        usage_key, AlreadyRunningError is raised if the entrance exam
                        is already being re-scored, or NotImplementedError if the problem doesn’t
                        support rescoring.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_rescore_problem_for_all_students()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_rescore_problem_for_all_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_rescore_problem_for_all_students()" _toc_parts="lms.djangoapps.instructor_task.api submit_rescore_problem_for_all_students" class="" classes="sig sig-object py" fullname="submit_rescore_problem_for_all_students" ids="lms.djangoapps.instructor_task.api.submit_rescore_problem_for_all_students" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_rescore_problem_for_all_students</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">only_if_higher</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request a problem to be rescored as a background task.</paragraph>
                    <paragraph>The problem will be rescored for all students who have accessed the
                        particular problem in a course and have provided and checked an answer.
                        Parameters are the <title_reference>course_id</title_reference> and the <title_reference>problem_url</title_reference>.
                        The url must specify the location of the problem, using i4x-type notation.</paragraph>
                    <paragraph>ItemNotFoundException is raised if the problem doesn’t exist, or AlreadyRunningError
                        if the problem is already being rescored, or NotImplementedError if the problem doesn’t
                        support rescoring.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_rescore_problem_for_student()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_rescore_problem_for_student',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_rescore_problem_for_student()" _toc_parts="lms.djangoapps.instructor_task.api submit_rescore_problem_for_student" class="" classes="sig sig-object py" fullname="submit_rescore_problem_for_student" ids="lms.djangoapps.instructor_task.api.submit_rescore_problem_for_student" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_rescore_problem_for_student</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">only_if_higher</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request a problem to be rescored as a background task.</paragraph>
                    <paragraph>The problem will be rescored for the specified student only.  Parameters are the <title_reference>course_id</title_reference>,
                        the <title_reference>problem_url</title_reference>, and the <title_reference>student</title_reference> as a User object.
                        The url must specify the location of the problem, using i4x-type notation.</paragraph>
                    <paragraph>ItemNotFoundException is raised if the problem doesn’t exist, or AlreadyRunningError
                        if the problem is already being rescored for this student, or NotImplementedError if
                        the problem doesn’t support rescoring.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_reset_problem_attempts_for_all_students()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_reset_problem_attempts_for_all_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_reset_problem_attempts_for_all_students()" _toc_parts="lms.djangoapps.instructor_task.api submit_reset_problem_attempts_for_all_students" class="" classes="sig sig-object py" fullname="submit_reset_problem_attempts_for_all_students" ids="lms.djangoapps.instructor_task.api.submit_reset_problem_attempts_for_all_students" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_reset_problem_attempts_for_all_students</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request to have attempts reset for a problem as a background task.</paragraph>
                    <paragraph>The problem’s attempts will be reset for all students who have accessed the
                        particular problem in a course.  Parameters are the <title_reference>course_id</title_reference> and
                        the <title_reference>usage_key</title_reference>, which must be a <literal classes="xref py py-class">Location</literal>.</paragraph>
                    <paragraph>ItemNotFoundException is raised if the problem doesn’t exist, or AlreadyRunningError
                        if the problem is already being reset.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_reset_problem_attempts_in_entrance_exam()\ (in\ module\ lms.djangoapps.instructor_task.api)',\ 'lms.djangoapps.instructor_task.api.submit_reset_problem_attempts_in_entrance_exam',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_reset_problem_attempts_in_entrance_exam()" _toc_parts="lms.djangoapps.instructor_task.api submit_reset_problem_attempts_in_entrance_exam" class="" classes="sig sig-object py" fullname="submit_reset_problem_attempts_in_entrance_exam" ids="lms.djangoapps.instructor_task.api.submit_reset_problem_attempts_in_entrance_exam" module="lms.djangoapps.instructor_task.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_reset_problem_attempts_in_entrance_exam</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Request to have attempts reset for a entrance exam as a background task.</paragraph>
                    <paragraph>Problem attempts for all problems in entrance exam will be reset
                        for specified student. If student is None problem attempts will be
                        reset for all students.</paragraph>
                    <paragraph>Parameters are <title_reference>usage_key</title_reference>, which must be a <literal classes="xref py py-class">Location</literal>
                        representing entrance exam section and the <title_reference>student</title_reference> as a User object.</paragraph>
                    <paragraph>ItemNotFoundError is raised if entrance exam does not exists for given
                        usage_key, AlreadyRunningError is raised if the entrance exam
                        is already being reset.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.api_helper lms-djangoapps-instructor-task-api-helper-module" names="lms.djangoapps.instructor_task.api_helper\ module">
            <title>lms.djangoapps.instructor_task.api_helper module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.api_helper',\ 'module-lms.djangoapps.instructor_task.api_helper',\ '',\ None]"></index>
            <paragraph>Helper lib for instructor_tasks API.</paragraph>
            <paragraph>Includes methods to check args for rescoring task, encoding student input,
                and task submission logic, including handling the Celery backend.</paragraph>
            <index entries="['single',\ 'AlreadyRunningError',\ 'lms.djangoapps.instructor_task.api_helper.AlreadyRunningError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="AlreadyRunningError" _toc_parts="lms.djangoapps.instructor_task.api_helper AlreadyRunningError" class="" classes="sig sig-object py" fullname="AlreadyRunningError" ids="lms.djangoapps.instructor_task.api_helper.AlreadyRunningError" module="lms.djangoapps.instructor_task.api_helper"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AlreadyRunningError</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception indicating that a background task is already running</paragraph>
                    <index entries="['single',\ 'message\ (lms.djangoapps.instructor_task.api_helper.AlreadyRunningError\ attribute)',\ 'lms.djangoapps.instructor_task.api_helper.AlreadyRunningError.message',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AlreadyRunningError.message" _toc_parts="lms.djangoapps.instructor_task.api_helper AlreadyRunningError message" class="AlreadyRunningError" classes="sig sig-object py" fullname="AlreadyRunningError.message" ids="lms.djangoapps.instructor_task.api_helper.AlreadyRunningError.message" module="lms.djangoapps.instructor_task.api_helper"><desc_name classes="sig-name descname" xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Requested task is already running'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'QueueConnectionError',\ 'lms.djangoapps.instructor_task.api_helper.QueueConnectionError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="QueueConnectionError" _toc_parts="lms.djangoapps.instructor_task.api_helper QueueConnectionError" class="" classes="sig sig-object py" fullname="QueueConnectionError" ids="lms.djangoapps.instructor_task.api_helper.QueueConnectionError" module="lms.djangoapps.instructor_task.api_helper"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">QueueConnectionError</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception indicating that celery task was not created successfully.</paragraph>
                    <index entries="['single',\ 'message\ (lms.djangoapps.instructor_task.api_helper.QueueConnectionError\ attribute)',\ 'lms.djangoapps.instructor_task.api_helper.QueueConnectionError.message',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="QueueConnectionError.message" _toc_parts="lms.djangoapps.instructor_task.api_helper QueueConnectionError message" class="QueueConnectionError" classes="sig sig-object py" fullname="QueueConnectionError.message" ids="lms.djangoapps.instructor_task.api_helper.QueueConnectionError.message" module="lms.djangoapps.instructor_task.api_helper"><desc_name classes="sig-name descname" xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Error occured. Please try again later.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_arguments_for_overriding()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.check_arguments_for_overriding',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_arguments_for_overriding()" _toc_parts="lms.djangoapps.instructor_task.api_helper check_arguments_for_overriding" class="" classes="sig sig-object py" fullname="check_arguments_for_overriding" ids="lms.djangoapps.instructor_task.api_helper.check_arguments_for_overriding" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_arguments_for_overriding</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">score</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Do simple checks on the block to confirm that it supports overriding
                        the problem score and the score passed in is not greater than the value of
                        the problem or less than 0.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_arguments_for_rescoring()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.check_arguments_for_rescoring',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_arguments_for_rescoring()" _toc_parts="lms.djangoapps.instructor_task.api_helper check_arguments_for_rescoring" class="" classes="sig sig-object py" fullname="check_arguments_for_rescoring" ids="lms.djangoapps.instructor_task.api_helper.check_arguments_for_rescoring" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_arguments_for_rescoring</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Do simple checks on the block to confirm that it supports rescoring.</paragraph>
                    <paragraph>Confirms first that the usage_key is defined (since that’s currently typed
                        in).  An ItemNotFoundException is raised if the corresponding module
                        block doesn’t exist.  NotImplementedError is raised if the
                        corresponding module doesn’t support rescoring calls.</paragraph>
                    <paragraph>Note: the string returned here is surfaced as the error
                        message on the instructor dashboard when a rescore is
                        submitted for a non-rescorable block.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_entrance_exam_problems_for_rescoring()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.check_entrance_exam_problems_for_rescoring',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_entrance_exam_problems_for_rescoring()" _toc_parts="lms.djangoapps.instructor_task.api_helper check_entrance_exam_problems_for_rescoring" class="" classes="sig sig-object py" fullname="check_entrance_exam_problems_for_rescoring" ids="lms.djangoapps.instructor_task.api_helper.check_entrance_exam_problems_for_rescoring" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_entrance_exam_problems_for_rescoring</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exam_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Grabs all problem blocks in exam and checks each block to
                        confirm that it supports re-scoring.</paragraph>
                    <paragraph>An ItemNotFoundException is raised if the corresponding module
                        block doesn’t exist for exam_key. NotImplementedError is raised if
                        any of the problem in entrance exam doesn’t support re-scoring calls.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'encode_entrance_exam_and_student_input()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.encode_entrance_exam_and_student_input',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="encode_entrance_exam_and_student_input()" _toc_parts="lms.djangoapps.instructor_task.api_helper encode_entrance_exam_and_student_input" class="" classes="sig sig-object py" fullname="encode_entrance_exam_and_student_input" ids="lms.djangoapps.instructor_task.api_helper.encode_entrance_exam_and_student_input" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">encode_entrance_exam_and_student_input</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Encode usage_key and optional student into task_key and task_input values.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>Location</literal_emphasis>) – The usage_key identifying the entrance exam.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>student</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – the student affected</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'encode_problem_and_student_input()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.encode_problem_and_student_input',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="encode_problem_and_student_input()" _toc_parts="lms.djangoapps.instructor_task.api_helper encode_problem_and_student_input" class="" classes="sig sig-object py" fullname="encode_problem_and_student_input" ids="lms.djangoapps.instructor_task.api_helper.encode_problem_and_student_input" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">encode_problem_and_student_input</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Encode optional usage_key and optional student into task_key and task_input values.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>Location</literal_emphasis>) – The usage_key identifying the problem.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>student</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – the student affected</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'generate_already_running_error_message()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.generate_already_running_error_message',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_already_running_error_message()" _toc_parts="lms.djangoapps.instructor_task.api_helper generate_already_running_error_message" class="" classes="sig sig-object py" fullname="generate_already_running_error_message" ids="lms.djangoapps.instructor_task.api_helper.generate_already_running_error_message" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_already_running_error_message</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns already running error message for given task type.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_status_from_instructor_task()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.get_status_from_instructor_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_status_from_instructor_task()" _toc_parts="lms.djangoapps.instructor_task.api_helper get_status_from_instructor_task" class="" classes="sig sig-object py" fullname="get_status_from_instructor_task" ids="lms.djangoapps.instructor_task.api_helper.get_status_from_instructor_task" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_status_from_instructor_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instructor_task</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the status for a given InstructorTask entry.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Returns a dict, with the following keys:</term>
                            <definition>
                                <paragraph>‘task_id’: id assigned by LMS and used by celery.
                                    ‘task_state’: state of task as stored in celery’s result store.
                                    ‘in_progress’: boolean indicating if task is still running.
                                    ‘task_progress’: dict containing progress information.  This includes:</paragraph>
                                <block_quote>
                                    <paragraph>‘attempted’: number of attempts made
                                        ‘succeeded’: number of attempts that “succeeded”
                                        ‘total’: number of possible subtasks to attempt
                                        ‘action_name’: user-visible verb to use in status messages.  Should be past-tense.
                                        ‘duration_ms’: how long the task has (or had) been running.
                                        ‘exception’: name of exception class raised in failed tasks.
                                        ‘message’: returned for failed and revoked tasks.
                                        ‘traceback’: optional, returned if task failed and produced a traceback.</paragraph>
                                </block_quote>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_updated_instructor_task()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.get_updated_instructor_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_updated_instructor_task()" _toc_parts="lms.djangoapps.instructor_task.api_helper get_updated_instructor_task" class="" classes="sig sig-object py" fullname="get_updated_instructor_task" ids="lms.djangoapps.instructor_task.api_helper.get_updated_instructor_task" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_updated_instructor_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns InstructorTask object corresponding to a given <title_reference>task_id</title_reference>.</paragraph>
                    <paragraph>If the InstructorTask thinks the task is still running, then
                        the task’s result is checked to return an updated state and output.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'schedule_task()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.schedule_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="schedule_task()" _toc_parts="lms.djangoapps.instructor_task.api_helper schedule_task" class="" classes="sig sig-object py" fullname="schedule_task" ids="lms.djangoapps.instructor_task.api_helper.schedule_task" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">schedule_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">schedule</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function to schedule a background task.</paragraph>
                    <paragraph>Reserves the requested task and stores it until the task is ready for execution. We also create an instance of a
                        InstructorTaskSchedule object responsible for maintaining the details of _when_ a task should be executed. Extracts
                        arguments important to the task from the originating server request and stores them as part of the schedule object.
                        Sets the <title_reference>task_status</title_reference> to SCHEDULED to indicate this task will be executed in the future.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>WSGIRequest</literal_emphasis>) – The originating web request associated with this task request.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>task_type</literal_strong> (<literal_emphasis>String</literal_emphasis>) – Text describing the type of task (e.g. ‘bulk_course_email’ or ‘grade_course’)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The CourseKey of the course-run the task belongs to.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>task_input</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – Task input arguments stores as JSON-serialized dictionary.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>task_key</literal_strong> (<literal_emphasis>String</literal_emphasis>) – Encoded input arguments used during task execution.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>schedule</literal_strong> (<literal_emphasis>DateTime</literal_emphasis>) – DateTime (in UTC) describing when the task should be executed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_scheduled_task()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.submit_scheduled_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_scheduled_task()" _toc_parts="lms.djangoapps.instructor_task.api_helper submit_scheduled_task" class="" classes="sig sig-object py" fullname="submit_scheduled_task" ids="lms.djangoapps.instructor_task.api_helper.submit_scheduled_task" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_scheduled_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">schedule</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function for submitting a scheduled task due for execution to Celery.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'submit_task()\ (in\ module\ lms.djangoapps.instructor_task.api_helper)',\ 'lms.djangoapps.instructor_task.api_helper.submit_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="submit_task()" _toc_parts="lms.djangoapps.instructor_task.api_helper submit_task" class="" classes="sig sig-object py" fullname="submit_task" ids="lms.djangoapps.instructor_task.api_helper.submit_task" module="lms.djangoapps.instructor_task.api_helper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.api_helper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">submit_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_class</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper method to submit a task.</paragraph>
                    <paragraph>Reserves the requested task, based on the <title_reference>course_key</title_reference>, <title_reference>task_type</title_reference>, and <title_reference>task_key</title_reference>,
                        checking to see if the task is already running.  The <title_reference>task_input</title_reference> is also passed so that
                        it can be stored in the resulting InstructorTask entry.  Arguments are extracted from
                        the <title_reference>request</title_reference> provided by the originating server request.  Then the task is submitted to run
                        asynchronously, using the specified <title_reference>task_class</title_reference> and using the task_id constructed for it.</paragraph>
                    <paragraph>Cannot be inside an atomic block.</paragraph>
                    <paragraph><title_reference>AlreadyRunningError</title_reference> is raised if the task is already running.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.apps lms-djangoapps-instructor-task-apps-module" names="lms.djangoapps.instructor_task.apps\ module">
            <title>lms.djangoapps.instructor_task.apps module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.apps',\ 'module-lms.djangoapps.instructor_task.apps',\ '',\ None]"></index>
            <paragraph>Instructor Task Application Configuration</paragraph>
            <index entries="['single',\ 'InstructorTaskConfig\ (class\ in\ lms.djangoapps.instructor_task.apps)',\ 'lms.djangoapps.instructor_task.apps.InstructorTaskConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InstructorTaskConfig" _toc_parts="lms.djangoapps.instructor_task.apps InstructorTaskConfig" class="" classes="sig sig-object py" fullname="InstructorTaskConfig" ids="lms.djangoapps.instructor_task.apps.InstructorTaskConfig" module="lms.djangoapps.instructor_task.apps"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InstructorTaskConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>Application Configuration for Instructor Task</paragraph>
                    <index entries="['single',\ 'name\ (lms.djangoapps.instructor_task.apps.InstructorTaskConfig\ attribute)',\ 'lms.djangoapps.instructor_task.apps.InstructorTaskConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskConfig.name" _toc_parts="lms.djangoapps.instructor_task.apps InstructorTaskConfig name" class="InstructorTaskConfig" classes="sig sig-object py" fullname="InstructorTaskConfig.name" ids="lms.djangoapps.instructor_task.apps.InstructorTaskConfig.name" module="lms.djangoapps.instructor_task.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'lms.djangoapps.instructor_task'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (lms.djangoapps.instructor_task.apps.InstructorTaskConfig\ method)',\ 'lms.djangoapps.instructor_task.apps.InstructorTaskConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskConfig.ready()" _toc_parts="lms.djangoapps.instructor_task.apps InstructorTaskConfig ready" class="InstructorTaskConfig" classes="sig sig-object py" fullname="InstructorTaskConfig.ready" ids="lms.djangoapps.instructor_task.apps.InstructorTaskConfig.ready" module="lms.djangoapps.instructor_task.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override this method in subclasses to run code when Django starts.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.data lms-djangoapps-instructor-task-data-module" names="lms.djangoapps.instructor_task.data\ module">
            <title>lms.djangoapps.instructor_task.data module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.data',\ 'module-lms.djangoapps.instructor_task.data',\ '',\ None]"></index>
            <paragraph>Public data structures for the instructor_task app.</paragraph>
            <index entries="['single',\ 'InstructorTaskTypes\ (class\ in\ lms.djangoapps.instructor_task.data)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InstructorTaskTypes" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes" class="" classes="sig sig-object py" fullname="InstructorTaskTypes" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes" module="lms.djangoapps.instructor_task.data"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.data.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InstructorTaskTypes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">names</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">module</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">qualname</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">1</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">boundary</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">str</literal>, <literal classes="xref py py-class">Enum</literal></paragraph>
                    <paragraph>Enum describing the assortment of instructor tasks supported by edx-platform.</paragraph>
                    <index entries="['single',\ 'BULK_COURSE_EMAIL\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.BULK_COURSE_EMAIL',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.BULK_COURSE_EMAIL" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes BULK_COURSE_EMAIL" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.BULK_COURSE_EMAIL" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.BULK_COURSE_EMAIL" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">BULK_COURSE_EMAIL</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'bulk_course_email'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'COHORT_STUDENTS\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.COHORT_STUDENTS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.COHORT_STUDENTS" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes COHORT_STUDENTS" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.COHORT_STUDENTS" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.COHORT_STUDENTS" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">COHORT_STUDENTS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'cohort_students'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'COURSE_SURVEY_REPORT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.COURSE_SURVEY_REPORT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.COURSE_SURVEY_REPORT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes COURSE_SURVEY_REPORT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.COURSE_SURVEY_REPORT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.COURSE_SURVEY_REPORT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">COURSE_SURVEY_REPORT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'course_survey_report'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'DELETE_PROBLEM_STATE\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.DELETE_PROBLEM_STATE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.DELETE_PROBLEM_STATE" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes DELETE_PROBLEM_STATE" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.DELETE_PROBLEM_STATE" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.DELETE_PROBLEM_STATE" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">DELETE_PROBLEM_STATE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'delete_problem_state'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'DETAILED_ENROLLMENT_REPORT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.DETAILED_ENROLLMENT_REPORT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.DETAILED_ENROLLMENT_REPORT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes DETAILED_ENROLLMENT_REPORT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.DETAILED_ENROLLMENT_REPORT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.DETAILED_ENROLLMENT_REPORT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">DETAILED_ENROLLMENT_REPORT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'detailed_enrollment_report'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EXEC_SUMMARY_REPORT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXEC_SUMMARY_REPORT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.EXEC_SUMMARY_REPORT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes EXEC_SUMMARY_REPORT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.EXEC_SUMMARY_REPORT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXEC_SUMMARY_REPORT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">EXEC_SUMMARY_REPORT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'exec_summary_report'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EXPORT_ORA2_DATA\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_DATA',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.EXPORT_ORA2_DATA" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes EXPORT_ORA2_DATA" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.EXPORT_ORA2_DATA" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_DATA" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">EXPORT_ORA2_DATA</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'export_ora2_data'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EXPORT_ORA2_SUBMISSION_FILES\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_SUBMISSION_FILES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.EXPORT_ORA2_SUBMISSION_FILES" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes EXPORT_ORA2_SUBMISSION_FILES" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.EXPORT_ORA2_SUBMISSION_FILES" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_SUBMISSION_FILES" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">EXPORT_ORA2_SUBMISSION_FILES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'export_ora2_submission_files'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EXPORT_ORA2_SUMMARY\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_SUMMARY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.EXPORT_ORA2_SUMMARY" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes EXPORT_ORA2_SUMMARY" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.EXPORT_ORA2_SUMMARY" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.EXPORT_ORA2_SUMMARY" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">EXPORT_ORA2_SUMMARY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'export_ora2_summary'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GENERATE_ANONYMOUS_IDS_FOR_COURSE\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_ANONYMOUS_IDS_FOR_COURSE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GENERATE_ANONYMOUS_IDS_FOR_COURSE" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GENERATE_ANONYMOUS_IDS_FOR_COURSE" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GENERATE_ANONYMOUS_IDS_FOR_COURSE" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_ANONYMOUS_IDS_FOR_COURSE" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GENERATE_ANONYMOUS_IDS_FOR_COURSE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'generate_anonymous_ids_for_course'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GENERATE_CERTIFICATES_ALL_STUDENT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_ALL_STUDENT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GENERATE_CERTIFICATES_ALL_STUDENT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GENERATE_CERTIFICATES_ALL_STUDENT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GENERATE_CERTIFICATES_ALL_STUDENT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_ALL_STUDENT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GENERATE_CERTIFICATES_ALL_STUDENT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'generate_certificates_all_student'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GENERATE_CERTIFICATES_CERTAIN_STUDENT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_CERTAIN_STUDENT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GENERATE_CERTIFICATES_CERTAIN_STUDENT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GENERATE_CERTIFICATES_CERTAIN_STUDENT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GENERATE_CERTIFICATES_CERTAIN_STUDENT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_CERTAIN_STUDENT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GENERATE_CERTIFICATES_CERTAIN_STUDENT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'generate_certificates_certain_student'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GENERATE_CERTIFICATES_STUDENT_SET\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_STUDENT_SET',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GENERATE_CERTIFICATES_STUDENT_SET" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GENERATE_CERTIFICATES_STUDENT_SET" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GENERATE_CERTIFICATES_STUDENT_SET" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GENERATE_CERTIFICATES_STUDENT_SET" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GENERATE_CERTIFICATES_STUDENT_SET</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'generate_certificates_student_set'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GRADE_COURSE\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GRADE_COURSE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GRADE_COURSE" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GRADE_COURSE" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GRADE_COURSE" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GRADE_COURSE" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GRADE_COURSE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'grade_course'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GRADE_PROBLEMS\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.GRADE_PROBLEMS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.GRADE_PROBLEMS" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes GRADE_PROBLEMS" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.GRADE_PROBLEMS" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.GRADE_PROBLEMS" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">GRADE_PROBLEMS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'grade_problems'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'MAY_ENROLL_INFO_CSV\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.MAY_ENROLL_INFO_CSV',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.MAY_ENROLL_INFO_CSV" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes MAY_ENROLL_INFO_CSV" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.MAY_ENROLL_INFO_CSV" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.MAY_ENROLL_INFO_CSV" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">MAY_ENROLL_INFO_CSV</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'may_enroll_info_csv'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'OVERRIDE_PROBLEM_SCORE\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.OVERRIDE_PROBLEM_SCORE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.OVERRIDE_PROBLEM_SCORE" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes OVERRIDE_PROBLEM_SCORE" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.OVERRIDE_PROBLEM_SCORE" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.OVERRIDE_PROBLEM_SCORE" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">OVERRIDE_PROBLEM_SCORE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'override_problem_score'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'PROBLEM_RESPONSES_CSV\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROBLEM_RESPONSES_CSV',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.PROBLEM_RESPONSES_CSV" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes PROBLEM_RESPONSES_CSV" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.PROBLEM_RESPONSES_CSV" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROBLEM_RESPONSES_CSV" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">PROBLEM_RESPONSES_CSV</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'problem_responses_csv'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'PROCTORED_EXAM_RESULTS_REPORT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROCTORED_EXAM_RESULTS_REPORT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.PROCTORED_EXAM_RESULTS_REPORT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes PROCTORED_EXAM_RESULTS_REPORT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.PROCTORED_EXAM_RESULTS_REPORT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROCTORED_EXAM_RESULTS_REPORT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">PROCTORED_EXAM_RESULTS_REPORT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'proctored_exam_results_report'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'PROFILE_INFO_CSV\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROFILE_INFO_CSV',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.PROFILE_INFO_CSV" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes PROFILE_INFO_CSV" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.PROFILE_INFO_CSV" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.PROFILE_INFO_CSV" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">PROFILE_INFO_CSV</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'profile_info_csv'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'REGENERATE_CERTIFICATES_ALL_STUDENT\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.REGENERATE_CERTIFICATES_ALL_STUDENT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.REGENERATE_CERTIFICATES_ALL_STUDENT" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes REGENERATE_CERTIFICATES_ALL_STUDENT" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.REGENERATE_CERTIFICATES_ALL_STUDENT" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.REGENERATE_CERTIFICATES_ALL_STUDENT" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">REGENERATE_CERTIFICATES_ALL_STUDENT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'regenerate_certificates_all_student'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RESCORE_PROBLEM\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESCORE_PROBLEM',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.RESCORE_PROBLEM" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes RESCORE_PROBLEM" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.RESCORE_PROBLEM" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESCORE_PROBLEM" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">RESCORE_PROBLEM</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'rescore_problem'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RESCORE_PROBLEM_IF_HIGHER\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESCORE_PROBLEM_IF_HIGHER',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.RESCORE_PROBLEM_IF_HIGHER" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes RESCORE_PROBLEM_IF_HIGHER" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.RESCORE_PROBLEM_IF_HIGHER" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESCORE_PROBLEM_IF_HIGHER" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">RESCORE_PROBLEM_IF_HIGHER</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'rescore_problem_if_higher'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RESET_PROBLEM_ATTEMPTS\ (lms.djangoapps.instructor_task.data.InstructorTaskTypes\ attribute)',\ 'lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESET_PROBLEM_ATTEMPTS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskTypes.RESET_PROBLEM_ATTEMPTS" _toc_parts="lms.djangoapps.instructor_task.data InstructorTaskTypes RESET_PROBLEM_ATTEMPTS" class="InstructorTaskTypes" classes="sig sig-object py" fullname="InstructorTaskTypes.RESET_PROBLEM_ATTEMPTS" ids="lms.djangoapps.instructor_task.data.InstructorTaskTypes.RESET_PROBLEM_ATTEMPTS" module="lms.djangoapps.instructor_task.data"><desc_name classes="sig-name descname" xml:space="preserve">RESET_PROBLEM_ATTEMPTS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'reset_problem_attempts'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.exceptions lms-djangoapps-instructor-task-exceptions-module" names="lms.djangoapps.instructor_task.exceptions\ module">
            <title>lms.djangoapps.instructor_task.exceptions module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.exceptions',\ 'module-lms.djangoapps.instructor_task.exceptions',\ '',\ None]"></index>
            <paragraph>Exception classes used by Instructor tasks.</paragraph>
            <index entries="['single',\ 'DuplicateTaskException',\ 'lms.djangoapps.instructor_task.exceptions.DuplicateTaskException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="DuplicateTaskException" _toc_parts="lms.djangoapps.instructor_task.exceptions DuplicateTaskException" class="" classes="sig sig-object py" fullname="DuplicateTaskException" ids="lms.djangoapps.instructor_task.exceptions.DuplicateTaskException" module="lms.djangoapps.instructor_task.exceptions"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DuplicateTaskException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception indicating that a task already exists or has already completed.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UpdateProblemModuleStateError',\ 'lms.djangoapps.instructor_task.exceptions.UpdateProblemModuleStateError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="UpdateProblemModuleStateError" _toc_parts="lms.djangoapps.instructor_task.exceptions UpdateProblemModuleStateError" class="" classes="sig sig-object py" fullname="UpdateProblemModuleStateError" ids="lms.djangoapps.instructor_task.exceptions.UpdateProblemModuleStateError" module="lms.djangoapps.instructor_task.exceptions"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UpdateProblemModuleStateError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Error signaling a fatal condition while updating problem modules.</paragraph>
                    <paragraph>Used when the current module cannot be processed and no more
                        modules should be attempted.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.models lms-djangoapps-instructor-task-models-module" names="lms.djangoapps.instructor_task.models\ module">
            <title>lms.djangoapps.instructor_task.models module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.models',\ 'module-lms.djangoapps.instructor_task.models',\ '',\ None]"></index>
            <paragraph>WE’RE USING MIGRATIONS!</paragraph>
            <paragraph>If you make changes to this model, be sure to create an appropriate migration
                file and check it in at the same time as your model changes. To do that,</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Go to the edx-platform dir</paragraph>
                </list_item>
                <list_item>
                    <paragraph>./manage.py schemamigration instructor_task –auto description_of_your_change</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Add the migration file created in edx-platform/lms/djangoapps/instructor_task/migrations/</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>ASSUMPTIONS: modules have unique IDs, even across different module_types</paragraph>
            <index entries="['single',\ 'DjangoStorageReportStore\ (class\ in\ lms.djangoapps.instructor_task.models)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DjangoStorageReportStore" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore" class="" classes="sig sig-object py" fullname="DjangoStorageReportStore" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DjangoStorageReportStore</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">storage_class</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">storage_kwargs</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.instructor_task.models.ReportStore" reftitle="lms.djangoapps.instructor_task.models.ReportStore"><literal classes="xref py py-class">ReportStore</literal></reference></paragraph>
                    <paragraph>ReportStore implementation that delegates to django’s storage api.</paragraph>
                    <index entries="['single',\ 'from_config()\ (lms.djangoapps.instructor_task.models.DjangoStorageReportStore\ class\ method)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore.from_config',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DjangoStorageReportStore.from_config()" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore from_config" class="DjangoStorageReportStore" classes="sig sig-object py" fullname="DjangoStorageReportStore.from_config" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore.from_config" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">from_config</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">config_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>By default, the default file storage specified by the <title_reference>DEFAULT_FILE_STORAGE</title_reference>
                                setting will be used. To configure the storage used, add a dict in
                                settings with the following fields:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">STORAGE_CLASS : The import path of the storage class to use. If
                not set, the DEFAULT_FILE_STORAGE setting will be used.
STORAGE_KWARGS : An optional dict of kwargs to pass to the storage
                 constructor. This can be used to specify a
                 different S3 bucket or root path, for example.</literal_block>
                            <paragraph>Reference the setting name when calling <title_reference>.from_config</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'links_for()\ (lms.djangoapps.instructor_task.models.DjangoStorageReportStore\ method)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore.links_for',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DjangoStorageReportStore.links_for()" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore links_for" class="DjangoStorageReportStore" classes="sig sig-object py" fullname="DjangoStorageReportStore.links_for" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore.links_for" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">links_for</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>For a given <title_reference>course_id</title_reference>, return a list of <title_reference>(filename, url)</title_reference> tuples.
                                Calls the <title_reference>url</title_reference> method of the underlying storage backend. Returned
                                urls can be plugged straight into an href</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'path_to()\ (lms.djangoapps.instructor_task.models.DjangoStorageReportStore\ method)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore.path_to',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DjangoStorageReportStore.path_to()" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore path_to" class="DjangoStorageReportStore" classes="sig sig-object py" fullname="DjangoStorageReportStore.path_to" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore.path_to" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">path_to</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filename</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the full path to a given file for a given course.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'store()\ (lms.djangoapps.instructor_task.models.DjangoStorageReportStore\ method)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore.store',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DjangoStorageReportStore.store()" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore store" class="DjangoStorageReportStore" classes="sig sig-object py" fullname="DjangoStorageReportStore.store" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore.store" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">store</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filename</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">buff</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Store the contents of <title_reference>buff</title_reference> in a directory determined by hashing
                                <title_reference>course_id</title_reference>, and name the file <title_reference>filename</title_reference>. <title_reference>buff</title_reference> can be any file-like
                                object, ready to be read from the beginning.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'store_rows()\ (lms.djangoapps.instructor_task.models.DjangoStorageReportStore\ method)',\ 'lms.djangoapps.instructor_task.models.DjangoStorageReportStore.store_rows',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DjangoStorageReportStore.store_rows()" _toc_parts="lms.djangoapps.instructor_task.models DjangoStorageReportStore store_rows" class="DjangoStorageReportStore" classes="sig sig-object py" fullname="DjangoStorageReportStore.store_rows" ids="lms.djangoapps.instructor_task.models.DjangoStorageReportStore.store_rows" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">store_rows</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filename</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">rows</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Given a course_id, filename, and rows (each row is an iterable of
                                strings), write the rows to the storage backend in csv format.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'InstructorTask\ (class\ in\ lms.djangoapps.instructor_task.models)',\ 'lms.djangoapps.instructor_task.models.InstructorTask',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InstructorTask" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask" class="" classes="sig sig-object py" fullname="InstructorTask" ids="lms.djangoapps.instructor_task.models.InstructorTask" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InstructorTask</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Stores information about background tasks that have been submitted to
                        perform work by an instructor (or course staff).
                        Examples include grading and rescoring.</paragraph>
                    <paragraph><title_reference>task_type</title_reference> identifies the kind of task being performed, e.g. rescoring.
                        <title_reference>course_id</title_reference> uses the course run’s unique id to identify the course.
                        <title_reference>task_key</title_reference> stores relevant input arguments encoded into key value for testing to see</paragraph>
                    <block_quote>
                        <paragraph>if the task is already running (together with task_type and course_id).</paragraph>
                    </block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>task_input</title_reference> stores input arguments as JSON-serialized dict, for reporting purposes.</term>
                            <definition>
                                <paragraph>Examples include url of problem being rescored, id of student if only one student being rescored.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph><title_reference>task_id</title_reference> stores the id used by celery for the background task.
                        <title_reference>task_state</title_reference> stores the last known state of the celery task
                        <title_reference>task_output</title_reference> stores the output of the celery task.</paragraph>
                    <block_quote>
                        <paragraph>Format is a JSON-serialized dict.  Content varies by task_type and task_state.</paragraph>
                    </block_quote>
                    <paragraph><title_reference>requester</title_reference> stores id of user who submitted the task
                        <title_reference>created</title_reference> stores date that entry was first created
                        <title_reference>updated</title_reference> stores date that entry was last modified</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'InstructorTask.DoesNotExist',\ 'lms.djangoapps.instructor_task.models.InstructorTask.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="InstructorTask.DoesNotExist" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask DoesNotExist" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.DoesNotExist" ids="lms.djangoapps.instructor_task.models.InstructorTask.DoesNotExist" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'InstructorTask.MultipleObjectsReturned',\ 'lms.djangoapps.instructor_task.models.InstructorTask.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="InstructorTask.MultipleObjectsReturned" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask MultipleObjectsReturned" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.MultipleObjectsReturned" ids="lms.djangoapps.instructor_task.models.InstructorTask.MultipleObjectsReturned" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'certificategenerationhistory_set\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.certificategenerationhistory_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.certificategenerationhistory_set" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask certificategenerationhistory_set" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.certificategenerationhistory_set" ids="lms.djangoapps.instructor_task.models.InstructorTask.certificategenerationhistory_set" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">certificategenerationhistory_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.course_id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask course_id" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.course_id" ids="lms.djangoapps.instructor_task.models.InstructorTask.course_id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (lms.djangoapps.instructor_task.models.InstructorTask\ class\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.create()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask create" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.create" ids="lms.djangoapps.instructor_task.models.InstructorTask.create" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_type</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_input</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requester</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create an instance of InstructorTask.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_output_for_failure()\ (lms.djangoapps.instructor_task.models.InstructorTask\ static\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_failure',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.create_output_for_failure()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask create_output_for_failure" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.create_output_for_failure" ids="lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_failure" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_output_for_failure</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exception</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">traceback_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Converts failed result information to output format.</paragraph>
                            <paragraph>Traceback information is truncated or not included if it would result in an output string
                                that would not fit in the database.  If the output is still too long, then the
                                exception message is also truncated.</paragraph>
                            <paragraph>Truncation is indicated by adding “…” to the end of the value.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_output_for_revoked()\ (lms.djangoapps.instructor_task.models.InstructorTask\ static\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_revoked',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.create_output_for_revoked()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask create_output_for_revoked" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.create_output_for_revoked" ids="lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_revoked" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_output_for_revoked</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Creates standard message to store in output format for revoked tasks.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_output_for_success()\ (lms.djangoapps.instructor_task.models.InstructorTask\ static\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_success',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.create_output_for_success()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask create_output_for_success" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.create_output_for_success" ids="lms.djangoapps.instructor_task.models.InstructorTask.create_output_for_success" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_output_for_success</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">returned_result</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Converts successful result to output format.</paragraph>
                            <paragraph>Raises a ValueError exception if the output is too long.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.created',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.created" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask created" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.created" ids="lms.djangoapps.instructor_task.models.InstructorTask.created" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">created</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_updated()\ (lms.djangoapps.instructor_task.models.InstructorTask\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.get_next_by_updated',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.get_next_by_updated()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask get_next_by_updated" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.get_next_by_updated" ids="lms.djangoapps.instructor_task.models.InstructorTask.get_next_by_updated" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_updated</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: updated&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_updated()\ (lms.djangoapps.instructor_task.models.InstructorTask\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.get_previous_by_updated',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.get_previous_by_updated()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask get_previous_by_updated" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.get_previous_by_updated" ids="lms.djangoapps.instructor_task.models.InstructorTask.get_previous_by_updated" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_updated</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: updated&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask id" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.id" ids="lms.djangoapps.instructor_task.models.InstructorTask.id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'instructortaskschedule\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.instructortaskschedule',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.instructortaskschedule" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask instructortaskschedule" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.instructortaskschedule" ids="lms.djangoapps.instructor_task.models.InstructorTask.instructortaskschedule" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">instructortaskschedule</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the reverse side of a one-to-one
                                relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Place.restaurant</literal> is a <literal>ReverseOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.objects" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask objects" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.objects" ids="lms.djangoapps.instructor_task.models.InstructorTask.objects" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'requester\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.requester',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.requester" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask requester" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.requester" ids="lms.djangoapps.instructor_task.models.InstructorTask.requester" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">requester</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'requester_id\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.requester_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.requester_id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask requester_id" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.requester_id" ids="lms.djangoapps.instructor_task.models.InstructorTask.requester_id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">requester_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'save_now()\ (lms.djangoapps.instructor_task.models.InstructorTask\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.save_now',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTask.save_now()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask save_now" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.save_now" ids="lms.djangoapps.instructor_task.models.InstructorTask.save_now" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">save_now</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Writes InstructorTask immediately, ensuring the transaction is committed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'subtasks\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.subtasks',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.subtasks" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask subtasks" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.subtasks" ids="lms.djangoapps.instructor_task.models.InstructorTask.subtasks" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">subtasks</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_id\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_id" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_id" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_input\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_input',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_input" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_input" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_input" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_input" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_input</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_key\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_key" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_key" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_key" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_key" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_output\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_output',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_output" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_output" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_output" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_output" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_output</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_state\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_state',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_state" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_state" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_state" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_state" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_state</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_type\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.task_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.task_type" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask task_type" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.task_type" ids="lms.djangoapps.instructor_task.models.InstructorTask.task_type" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'updated\ (lms.djangoapps.instructor_task.models.InstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTask.updated',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTask.updated" _toc_parts="lms.djangoapps.instructor_task.models InstructorTask updated" class="InstructorTask" classes="sig sig-object py" fullname="InstructorTask.updated" ids="lms.djangoapps.instructor_task.models.InstructorTask.updated" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">updated</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'InstructorTaskSchedule\ (class\ in\ lms.djangoapps.instructor_task.models)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="InstructorTaskSchedule" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule" class="" classes="sig sig-object py" fullname="InstructorTaskSchedule" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InstructorTaskSchedule</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">TimeStampedModel</literal></paragraph>
                    <paragraph>A database model to store information about _when_ to execute a scheduled background task.</paragraph>
                    <paragraph>The primary use case is to allow instructors to schedule their email messages (authored with the bulk course email
                        tool) to be sent at a later date and time.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'InstructorTaskSchedule.DoesNotExist',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="InstructorTaskSchedule.DoesNotExist" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule DoesNotExist" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.DoesNotExist" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.DoesNotExist" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'InstructorTaskSchedule.MultipleObjectsReturned',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="InstructorTaskSchedule.MultipleObjectsReturned" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule MultipleObjectsReturned" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.MultipleObjectsReturned" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.MultipleObjectsReturned" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.created',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.created" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule created" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.created" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.created" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">created</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_created()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_next_by_created()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_next_by_created" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_next_by_created" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_created" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_modified()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_next_by_modified()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_next_by_modified" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_next_by_modified" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_modified" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_task_due()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_task_due',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_next_by_task_due()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_next_by_task_due" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_next_by_task_due" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_next_by_task_due" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_task_due</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: task_due&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_created()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_previous_by_created()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_previous_by_created" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_previous_by_created" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_created" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_modified()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_previous_by_modified()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_previous_by_modified" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_previous_by_modified" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_modified" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_task_due()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_task_due',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.get_previous_by_task_due()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule get_previous_by_task_due" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.get_previous_by_task_due" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.get_previous_by_task_due" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_task_due</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: task_due&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'history\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.history',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.history" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule history" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.history" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.history" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">history</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.HistoryManagerFromHistoricalQuerySet object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule id" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.id" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'modified\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.modified',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.modified" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule modified" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.modified" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.modified" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">modified</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.objects" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule objects" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.objects" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.objects" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'save_without_historical_record()\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ method)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.save_without_historical_record',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="InstructorTaskSchedule.save_without_historical_record()" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule save_without_historical_record" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.save_without_historical_record" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.save_without_historical_record" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">save_without_historical_record</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Save model without saving a historical record</paragraph>
                            <paragraph>Make sure you know what you’re doing before you use this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.task" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule task" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.task" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a one-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Restaurant.place</literal> is a <literal>ForwardOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_args\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_args',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.task_args" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule task_args" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.task_args" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_args" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_args</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_due\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_due',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.task_due" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule task_due" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.task_due" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_due" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_due</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'task_id\ (lms.djangoapps.instructor_task.models.InstructorTaskSchedule\ attribute)',\ 'lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="InstructorTaskSchedule.task_id" _toc_parts="lms.djangoapps.instructor_task.models InstructorTaskSchedule task_id" class="InstructorTaskSchedule" classes="sig sig-object py" fullname="InstructorTaskSchedule.task_id" ids="lms.djangoapps.instructor_task.models.InstructorTaskSchedule.task_id" module="lms.djangoapps.instructor_task.models"><desc_name classes="sig-name descname" xml:space="preserve">task_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ReportStore\ (class\ in\ lms.djangoapps.instructor_task.models)',\ 'lms.djangoapps.instructor_task.models.ReportStore',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ReportStore" _toc_parts="lms.djangoapps.instructor_task.models ReportStore" class="" classes="sig sig-object py" fullname="ReportStore" ids="lms.djangoapps.instructor_task.models.ReportStore" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ReportStore</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Simple abstraction layer that can fetch and store CSV files for reports
                        download. Should probably refactor later to create a ReportFile object that
                        can simply be appended to for the sake of memory efficiency, rather than
                        passing in the whole dataset. Doing that for now just because it’s simpler.</paragraph>
                    <index entries="['single',\ 'from_config()\ (lms.djangoapps.instructor_task.models.ReportStore\ class\ method)',\ 'lms.djangoapps.instructor_task.models.ReportStore.from_config',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ReportStore.from_config()" _toc_parts="lms.djangoapps.instructor_task.models ReportStore from_config" class="ReportStore" classes="sig sig-object py" fullname="ReportStore.from_config" ids="lms.djangoapps.instructor_task.models.ReportStore.from_config" module="lms.djangoapps.instructor_task.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">from_config</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">config_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return one of the ReportStore subclasses depending on django
                                configuration. Look at subclasses for expected configuration.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.subtasks lms-djangoapps-instructor-task-subtasks-module" names="lms.djangoapps.instructor_task.subtasks\ module">
            <title>lms.djangoapps.instructor_task.subtasks module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.subtasks',\ 'module-lms.djangoapps.instructor_task.subtasks',\ '',\ None]"></index>
            <paragraph>This module contains celery task functions for handling the management of subtasks.</paragraph>
            <index entries="['single',\ 'SubtaskStatus\ (class\ in\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SubtaskStatus" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus" class="" classes="sig sig-object py" fullname="SubtaskStatus" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus" module="lms.djangoapps.instructor_task.subtasks"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SubtaskStatus</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attempted</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">succeeded</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">failed</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">skipped</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">retried_nomax</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">retried_withmax</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">state</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Create and return a dict for tracking the status of a subtask.</paragraph>
                    <paragraph>SubtaskStatus values are:</paragraph>
                    <block_quote>
                        <paragraph>‘task_id’ : id of subtask.  This is used to pass task information across retries.
                            ‘attempted’ : number of attempts – should equal succeeded plus failed
                            ‘succeeded’ : number that succeeded in processing
                            ‘skipped’ : number that were not processed.
                            ‘failed’ : number that failed during processing
                            ‘retried_nomax’ : number of times the subtask has been retried for conditions that</paragraph>
                        <block_quote>
                            <paragraph>should not have a maximum count applied</paragraph>
                        </block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>‘retried_withmax’</term>
                                <classifier>number of times the subtask has been retried for conditions that</classifier>
                                <definition>
                                    <paragraph>should have a maximum count applied</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>‘state’ : celery state of the subtask (e.g. QUEUING, PROGRESS, RETRY, FAILURE, SUCCESS)</paragraph>
                    </block_quote>
                    <paragraph>Object is not JSON-serializable, so to_dict and from_dict methods are provided so that
                        it can be passed as a serializable argument to tasks (and be reconstituted within such tasks).</paragraph>
                    <paragraph>In future, we may want to include specific error information
                        indicating the reason for failure.
                        Also, we should count up “not attempted” separately from attempted/failed.</paragraph>
                    <index entries="['single',\ 'create()\ (lms.djangoapps.instructor_task.subtasks.SubtaskStatus\ class\ method)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SubtaskStatus.create()" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus create" class="SubtaskStatus" classes="sig sig-object py" fullname="SubtaskStatus.create" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus.create" module="lms.djangoapps.instructor_task.subtasks"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Construct a SubtaskStatus object.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'from_dict()\ (lms.djangoapps.instructor_task.subtasks.SubtaskStatus\ class\ method)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus.from_dict',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SubtaskStatus.from_dict()" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus from_dict" class="SubtaskStatus" classes="sig sig-object py" fullname="SubtaskStatus.from_dict" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus.from_dict" module="lms.djangoapps.instructor_task.subtasks"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">from_dict</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">d</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Construct a SubtaskStatus object from a dict representation.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_retry_count()\ (lms.djangoapps.instructor_task.subtasks.SubtaskStatus\ method)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus.get_retry_count',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SubtaskStatus.get_retry_count()" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus get_retry_count" class="SubtaskStatus" classes="sig sig-object py" fullname="SubtaskStatus.get_retry_count" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus.get_retry_count" module="lms.djangoapps.instructor_task.subtasks"><desc_name classes="sig-name descname" xml:space="preserve">get_retry_count</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the number of retries of any kind.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'increment()\ (lms.djangoapps.instructor_task.subtasks.SubtaskStatus\ method)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus.increment',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SubtaskStatus.increment()" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus increment" class="SubtaskStatus" classes="sig sig-object py" fullname="SubtaskStatus.increment" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus.increment" module="lms.djangoapps.instructor_task.subtasks"><desc_name classes="sig-name descname" xml:space="preserve">increment</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">succeeded</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">failed</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">skipped</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">retried_nomax</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">retried_withmax</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">state</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update the result of a subtask with additional results.</paragraph>
                            <paragraph>Kwarg arguments are incremented to the existing values.
                                The exception is for <title_reference>state</title_reference>, which if specified is used to override the existing value.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'to_dict()\ (lms.djangoapps.instructor_task.subtasks.SubtaskStatus\ method)',\ 'lms.djangoapps.instructor_task.subtasks.SubtaskStatus.to_dict',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SubtaskStatus.to_dict()" _toc_parts="lms.djangoapps.instructor_task.subtasks SubtaskStatus to_dict" class="SubtaskStatus" classes="sig sig-object py" fullname="SubtaskStatus.to_dict" ids="lms.djangoapps.instructor_task.subtasks.SubtaskStatus.to_dict" module="lms.djangoapps.instructor_task.subtasks"><desc_name classes="sig-name descname" xml:space="preserve">to_dict</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Output a dict representation of a SubtaskStatus object.</paragraph>
                            <paragraph>Use for creating a JSON-serializable representation for use by tasks.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_subtask_is_valid()\ (in\ module\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.check_subtask_is_valid',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_subtask_is_valid()" _toc_parts="lms.djangoapps.instructor_task.subtasks check_subtask_is_valid" class="" classes="sig sig-object py" fullname="check_subtask_is_valid" ids="lms.djangoapps.instructor_task.subtasks.check_subtask_is_valid" module="lms.djangoapps.instructor_task.subtasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_subtask_is_valid</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">current_task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">new_subtask_status</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Confirms that the current subtask is known to the InstructorTask and hasn’t already been completed.</paragraph>
                    <paragraph>Problems can occur when the parent task has been run twice, and results in duplicate
                        subtasks being created for the same InstructorTask entry.  This maybe happens when Celery
                        loses its connection to its broker, and any current tasks get requeued.</paragraph>
                    <paragraph>If a parent task gets requeued, then the same InstructorTask may have a different set of
                        subtasks defined (to do the same thing), so the subtasks from the first queuing would not
                        be known to the InstructorTask.  We return an exception in this case.</paragraph>
                    <paragraph>If a subtask gets requeued, then the first time the subtask runs it should run fine to completion.
                        However, we want to prevent it from running again, so we check here to see what the existing
                        subtask’s status is.  If it is complete, we raise an exception.  We also take a lock on the task,
                        so that we can detect if another worker has started work but has not yet completed that work.
                        The other worker is allowed to finish, and this raises an exception.</paragraph>
                    <paragraph>Raises a DuplicateTaskException exception if it’s not a task that should be run.</paragraph>
                    <paragraph>If this succeeds, it requires that update_subtask_status() is called to release the lock on the
                        task.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'initialize_subtask_info()\ (in\ module\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.initialize_subtask_info',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="initialize_subtask_info()" _toc_parts="lms.djangoapps.instructor_task.subtasks initialize_subtask_info" class="" classes="sig sig-object py" fullname="initialize_subtask_info" ids="lms.djangoapps.instructor_task.subtasks.initialize_subtask_info" module="lms.djangoapps.instructor_task.subtasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">initialize_subtask_info</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entry</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">total_num</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">subtask_id_list</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Store initial subtask information to InstructorTask object.</paragraph>
                    <paragraph>The InstructorTask’s “task_output” field is initialized.  This is a JSON-serialized dict.
                        Counters for ‘attempted’, ‘succeeded’, ‘failed’, ‘skipped’ keys are initialized to zero,
                        as is the ‘duration_ms’ value.  A ‘start_time’ is stored for later duration calculations,
                        and the total number of “things to do” is set, so the user can be told how much needs to be
                        done overall.  The <title_reference>action_name</title_reference> is also stored, to help with constructing more readable
                        task_progress messages.</paragraph>
                    <paragraph>The InstructorTask’s “subtasks” field is also initialized.  This is also a JSON-serialized dict.
                        Keys include ‘total’, ‘succeeded’, ‘retried’, ‘failed’, which are counters for the number of
                        subtasks.  ‘Total’ is set here to the total number, while the other three are initialized to zero.
                        Once the counters for ‘succeeded’ and ‘failed’ match the ‘total’, the subtasks are done and
                        the InstructorTask’s “status” will be changed to SUCCESS.</paragraph>
                    <paragraph>The “subtasks” field also contains a ‘status’ key, that contains a dict that stores status
                        information for each subtask.  The value for each subtask (keyed by its task_id)
                        is its subtask status, as defined by SubtaskStatus.to_dict().</paragraph>
                    <paragraph>This information needs to be set up in the InstructorTask before any of the subtasks start
                        running.  If not, there is a chance that the subtasks could complete before the parent task
                        is done creating subtasks.  Doing so also simplifies the save() here, as it avoids the need
                        for locking.</paragraph>
                    <paragraph>Monitoring code should assume that if an InstructorTask has subtask information, that it should
                        rely on the status stored in the InstructorTask object, rather than status stored in the
                        corresponding AsyncResult.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'queue_subtasks_for_query()\ (in\ module\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.queue_subtasks_for_query',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="queue_subtasks_for_query()" _toc_parts="lms.djangoapps.instructor_task.subtasks queue_subtasks_for_query" class="" classes="sig sig-object py" fullname="queue_subtasks_for_query" ids="lms.djangoapps.instructor_task.subtasks.queue_subtasks_for_query" module="lms.djangoapps.instructor_task.subtasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">queue_subtasks_for_query</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entry</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">action_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">create_subtask_fcn</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">item_querysets</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">item_fields</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">items_per_task</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">total_num_items</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generates and queues subtasks to each execute a chunk of “items” generated by a queryset.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>entry</literal_strong> – the InstructorTask object for which subtasks are being queued.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>action_name</literal_strong> – a past-tense verb that can be used for constructing readable status messages.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>create_subtask_fcn</literal_strong> – a function of two arguments that constructs the desired kind of subtask object.
                                            Arguments are the list of items to be processed by this subtask, and a SubtaskStatus
                                            object reflecting initial status (and containing the subtask’s id).</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>item_querysets</literal_strong> – a list of query sets that define the “items” that should be passed to subtasks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>item_fields</literal_strong> – the fields that should be included in the dict that is returned.
                                            These are in addition to the ‘pk’ field.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>items_per_task</literal_strong> – maximum size of chunks to break each query chunk into for use by a subtask.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>total_num_items</literal_strong> – total amount of items that will be put into subtasks</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns:  the task progress as stored in the InstructorTask object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'track_memory_usage()\ (in\ module\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.track_memory_usage',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="track_memory_usage()" _toc_parts="lms.djangoapps.instructor_task.subtasks track_memory_usage" class="" classes="sig sig-object py" fullname="track_memory_usage" ids="lms.djangoapps.instructor_task.subtasks.track_memory_usage" module="lms.djangoapps.instructor_task.subtasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">track_memory_usage</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">metric</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Context manager to track how much memory (in bytes) a given process uses.
                        Metrics will look like: ‘course_email.subtask_generation.memory.rss’
                        or ‘course_email.subtask_generation.memory.vms’.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_subtask_status()\ (in\ module\ lms.djangoapps.instructor_task.subtasks)',\ 'lms.djangoapps.instructor_task.subtasks.update_subtask_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_subtask_status()" _toc_parts="lms.djangoapps.instructor_task.subtasks update_subtask_status" class="" classes="sig sig-object py" fullname="update_subtask_status" ids="lms.djangoapps.instructor_task.subtasks.update_subtask_status" module="lms.djangoapps.instructor_task.subtasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.subtasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_subtask_status</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entry_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">current_task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">new_subtask_status</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">retry_count</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update the status of the subtask in the parent InstructorTask object tracking its progress.</paragraph>
                    <paragraph>Because select_for_update is used to lock the InstructorTask object while it is being updated,
                        multiple subtasks updating at the same time may time out while waiting for the lock.
                        The actual update operation is surrounded by a try/except/else that permits the update to be
                        retried if the transaction times out.</paragraph>
                    <paragraph>The subtask lock acquired in the call to check_subtask_is_valid() is released here, only when
                        the attempting of retries has concluded.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks lms-djangoapps-instructor-task-tasks-module" names="lms.djangoapps.instructor_task.tasks\ module">
            <title>lms.djangoapps.instructor_task.tasks module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks',\ 'module-lms.djangoapps.instructor_task.tasks',\ '',\ None]"></index>
            <paragraph>This file contains tasks that are designed to perform background operations on the
                running state of a course.</paragraph>
            <paragraph>At present, these tasks all operate on StudentModule objects in one way or another,
                so they share a visitor architecture.  Each task defines an “update function” that
                takes a block, a particular StudentModule object, and xblock_instance_args.</paragraph>
            <paragraph>A task may optionally specify a “filter function” that takes a query for StudentModule
                objects, and adds additional filter clauses.</paragraph>
            <paragraph>A task also passes through “xblock_instance_args”, that are used to provide
                information to our code that instantiates xmodule instances.</paragraph>
            <paragraph>The task definition then calls the traversal function, passing in the three arguments
                above, along with the id value for an InstructorTask object.  The InstructorTask
                object contains a ‘task_input’ row which is a JSON-encoded dict containing
                a problem URL and optionally a student.  These are used to set up the initial value
                of the query for traversing StudentModule objects.</paragraph>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.tasks_base lms-djangoapps-instructor-task-tasks-base-module" names="lms.djangoapps.instructor_task.tasks_base\ module">
            <title>lms.djangoapps.instructor_task.tasks_base module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.tasks_base',\ 'module-lms.djangoapps.instructor_task.tasks_base',\ '',\ None]"></index>
            <paragraph>Base class for Instructor celery tasks.</paragraph>
            <index entries="['single',\ 'BaseInstructorTask\ (class\ in\ lms.djangoapps.instructor_task.tasks_base)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BaseInstructorTask" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask" class="" classes="sig sig-object py" fullname="BaseInstructorTask" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask" module="lms.djangoapps.instructor_task.tasks_base"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.tasks_base.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BaseInstructorTask</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Task</literal></paragraph>
                    <paragraph>Base task class for use with InstructorTask models.</paragraph>
                    <paragraph>Permits updating information about task in corresponding InstructorTask for monitoring purposes.</paragraph>
                    <paragraph>Assumes that the entry_id of the InstructorTask model is the first argument to the task.</paragraph>
                    <paragraph>The <title_reference>entry_id</title_reference> is the primary key for the InstructorTask entry representing the task.  This class
                        updates the entry on success and failure of the task it wraps.  It is setting the entry’s value
                        for task_state based on what Celery would set it to once the task returns to Celery:
                        FAILURE if an exception is encountered, and SUCCESS if it returns normally.
                        Other arguments are pass-throughs to perform_module_state_update, and documented there.</paragraph>
                    <index entries="['single',\ 'abstract\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.abstract',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.abstract" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask abstract" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.abstract" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.abstract" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">abstract</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>Deprecated attribute <literal>abstract</literal> here for compatibility.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ignore_result\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.ignore_result',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.ignore_result" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask ignore_result" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.ignore_result" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.ignore_result" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">ignore_result</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>False</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>If enabled the worker won’t store task state and return values
                                for this task.  Defaults to the <problematic ids="id2" refid="id1">:setting:`task_ignore_result`</problematic>
                                setting.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'on_failure()\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ method)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.on_failure',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BaseInstructorTask.on_failure()" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask on_failure" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.on_failure" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.on_failure" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">on_failure</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exc</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">einfo</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update InstructorTask object corresponding to this task with info about failure.</paragraph>
                            <paragraph>Fetches and updates exception and traceback information on failure.</paragraph>
                            <paragraph>If an exception is raised internal to the task, it is caught by celery and provided here.
                                The information is recorded in the InstructorTask object as a JSON-serialized dict
                                stored in the task_output column.  It contains the following keys:</paragraph>
                            <block_quote>
                                <paragraph>‘exception’:  type of exception object
                                    ‘message’: error message from exception object
                                    ‘traceback’: traceback information (truncated if necessary)</paragraph>
                            </block_quote>
                            <paragraph>Note that there is no way to record progress made within the task (e.g. attempted,
                                succeeded, etc.) when such failures occur.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'on_success()\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ method)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.on_success',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BaseInstructorTask.on_success()" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask on_success" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.on_success" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.on_success" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">on_success</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_progress</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">task_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update InstructorTask object corresponding to this task with info about success.</paragraph>
                            <paragraph>Updates task_output and task_state.  But it shouldn’t actually do anything
                                if the task is only creating subtasks to actually do the work.</paragraph>
                            <paragraph>Assumes <title_reference>task_progress</title_reference> is a dict containing the task’s result, with the following keys:</paragraph>
                            <block_quote>
                                <paragraph>‘attempted’: number of attempts made
                                    ‘succeeded’: number of attempts that “succeeded”
                                    ‘skipped’: number of attempts that “skipped”
                                    ‘failed’: number of attempts that “failed”
                                    ‘total’: number of possible subtasks to attempt
                                    ‘action_name’: user-visible verb to use in status messages.  Should be past-tense.</paragraph>
                                <block_quote>
                                    <paragraph>Pass-through of input <title_reference>action_name</title_reference>.</paragraph>
                                </block_quote>
                                <paragraph>‘duration_ms’: how long the task has (or had) been running.</paragraph>
                            </block_quote>
                            <paragraph>This is JSON-serialized and stored in the task_output column of the InstructorTask entry.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'priority\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.priority',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.priority" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask priority" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.priority" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.priority" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">priority</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>Default task priority.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'rate_limit\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.rate_limit',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.rate_limit" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask rate_limit" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.rate_limit" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.rate_limit" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">rate_limit</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph><literal classes="xref py py-const">None</literal> (no rate
                                limit), <title_reference>‘100/s’</title_reference> (hundred tasks a second), <title_reference>‘100/m’</title_reference> (hundred tasks
                                a minute),`’100/h’` (hundred tasks an hour)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>Rate limit for this task type.  Examples</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'reject_on_worker_lost\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.reject_on_worker_lost',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.reject_on_worker_lost" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask reject_on_worker_lost" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.reject_on_worker_lost" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.reject_on_worker_lost" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">reject_on_worker_lost</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>Even if <literal classes="xref py py-attr">acks_late</literal> is enabled, the worker will
                                acknowledge tasks when the worker process executing them abruptly
                                exits or is signaled (e.g., <problematic ids="id4" refid="id3">:sig:`KILL`</problematic>/<problematic ids="id6" refid="id5">:sig:`INT`</problematic>, etc).</paragraph>
                            <paragraph>Setting this to true allows the message to be re-queued instead,
                                so that the task will execute again by the same worker, or another
                                worker.</paragraph>
                            <paragraph>Warning: Enabling this can cause message loops; make sure you know
                                what you’re doing.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'request_stack\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.request_stack',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.request_stack" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask request_stack" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.request_stack" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.request_stack" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">request_stack</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;celery.utils.threads._LocalStack object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>Task request stack, the current request will be the topmost.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.serializer',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.serializer" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask serializer" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.serializer" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.serializer" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">serializer</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'json'</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>The name of a serializer that are registered with
                                <literal classes="xref py py-mod">kombu.serialization.registry</literal>.  Default is <title_reference>‘json’</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'store_errors_even_if_ignored\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.store_errors_even_if_ignored',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.store_errors_even_if_ignored" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask store_errors_even_if_ignored" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.store_errors_even_if_ignored" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.store_errors_even_if_ignored" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">store_errors_even_if_ignored</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>When enabled errors will be stored even if the task is otherwise
                                configured to ignore results.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'track_started\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.track_started',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.track_started" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask track_started" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.track_started" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.track_started" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">track_started</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>If enabled the task will report its status as ‘started’ when the task
                                is executed by a worker.  Disabled by default as the normal behavior
                                is to not report that level of granularity.  Tasks are either pending,
                                finished, or waiting to be retried.</paragraph>
                            <paragraph>Having a ‘started’ status can be useful for when there are long
                                running tasks and there’s a need to report what task is currently
                                running.</paragraph>
                            <paragraph>The application default can be overridden using the
                                <problematic ids="id8" refid="id7">:setting:`task_track_started`</problematic> setting.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'typing\ (lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask\ attribute)',\ 'lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.typing',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BaseInstructorTask.typing" _toc_parts="lms.djangoapps.instructor_task.tasks_base BaseInstructorTask typing" class="BaseInstructorTask" classes="sig sig-object py" fullname="BaseInstructorTask.typing" ids="lms.djangoapps.instructor_task.tasks_base.BaseInstructorTask.typing" module="lms.djangoapps.instructor_task.tasks_base"><desc_name classes="sig-name descname" xml:space="preserve">typing</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                            <paragraph>Enable argument checking.
                                You can set this to false if you don’t want the signature to be
                                checked when calling the task.
                                Defaults to <literal classes="xref py py-attr">app.strict_typing</literal>.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task.views lms-djangoapps-instructor-task-views-module" names="lms.djangoapps.instructor_task.views\ module">
            <title>lms.djangoapps.instructor_task.views module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task.views',\ 'module-lms.djangoapps.instructor_task.views',\ '',\ None]"></index>
            <index entries="['single',\ 'get_task_completion_info()\ (in\ module\ lms.djangoapps.instructor_task.views)',\ 'lms.djangoapps.instructor_task.views.get_task_completion_info',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_task_completion_info()" _toc_parts="lms.djangoapps.instructor_task.views get_task_completion_info" class="" classes="sig sig-object py" fullname="get_task_completion_info" ids="lms.djangoapps.instructor_task.views.get_task_completion_info" module="lms.djangoapps.instructor_task.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_task_completion_info</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instructor_task</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Construct progress message from progress information in InstructorTask entry.</paragraph>
                    <paragraph>Returns (boolean, message string) duple, where the boolean indicates
                        whether the task completed without incident.  (It is possible for a
                        task to attempt many sub-tasks, such as rescoring many students’ problem
                        responses, and while the task runs to completion, some of the students’
                        responses could not be rescored.)</paragraph>
                    <paragraph>Used for providing messages to instructor_task_status(), as well as
                        external calls for providing course task submission history information.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'instructor_task_status()\ (in\ module\ lms.djangoapps.instructor_task.views)',\ 'lms.djangoapps.instructor_task.views.instructor_task_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="instructor_task_status()" _toc_parts="lms.djangoapps.instructor_task.views instructor_task_status" class="" classes="sig sig-object py" fullname="instructor_task_status" ids="lms.djangoapps.instructor_task.views.instructor_task_status" module="lms.djangoapps.instructor_task.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_task.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">instructor_task_status</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>View method that returns the status of a course-related task or tasks.</paragraph>
                    <paragraph>Status is returned as a JSON-serialized dict, wrapped as the content of a HTTPResponse.</paragraph>
                    <paragraph>The task_id can be specified to this view in one of two ways:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>by making a request containing ‘task_id’ as a parameter with a single value
                                Returns a dict containing status information for the specified task_id</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>by making a request containing ‘task_ids’ as a parameter,
                                with a list of task_id values.
                                Returns a dict of dicts, with the task_id as key, and the corresponding
                                dict containing status information for the specified task_id</paragraph>
                            <paragraph>Task_id values that are unrecognized are skipped.</paragraph>
                        </list_item>
                    </bullet_list>
                    <definition_list>
                        <definition_list_item>
                            <term>The dict with status information for a task contains the following keys:</term>
                            <definition>
                                <definition_list>
                                    <definition_list_item>
                                        <term>‘message’: on complete tasks, status message reporting on final progress,</term>
                                        <definition>
                                            <paragraph>or providing exception message if failed.  For tasks in progress,
                                                indicates the current progress.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                    <definition_list_item>
                                        <term>‘succeeded’: on complete tasks or tasks in progress, boolean value indicates if the</term>
                                        <definition>
                                            <paragraph>task outcome was successful:  did it achieve what it set out to do.
                                                This is in contrast with a successful task_state, which indicates that the
                                                task merely completed.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                                <paragraph>‘task_id’: id assigned by LMS and used by celery.
                                    ‘task_state’: state of task as stored in celery’s result store.
                                    ‘in_progress’: boolean indicating if task is still running.
                                    ‘task_progress’: dict containing progress information.  This includes:</paragraph>
                                <block_quote>
                                    <paragraph>‘attempted’: number of attempts made
                                        ‘succeeded’: number of attempts that “succeeded”
                                        ‘total’: number of possible subtasks to attempt
                                        ‘action_name’: user-visible verb to use in status messages.  Should be past-tense.
                                        ‘duration_ms’: how long the task has (or had) been running.
                                        ‘exception’: name of exception class raised in failed tasks.
                                        ‘message’: returned for failed and revoked tasks.
                                        ‘traceback’: optional, returned if task failed and produced a traceback.</paragraph>
                                </block_quote>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_task module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_task',\ 'module-lms.djangoapps.instructor_task',\ '',\ None]"></index>
        </section>
    </section>
</document>
