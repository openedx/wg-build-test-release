<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.lib.safe_lxml.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-lib-safe-lxml-package" names="openedx.core.lib.safe_lxml\ package">
        <title>openedx.core.lib.safe_lxml package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.lib.safe_lxml.conftest openedx-core-lib-safe-lxml-conftest-module" names="openedx.core.lib.safe_lxml.conftest\ module">
            <title>openedx.core.lib.safe_lxml.conftest module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.safe_lxml.conftest',\ 'module-openedx.core.lib.safe_lxml.conftest',\ '',\ None]"></index>
            <paragraph>Code run by pytest before running any tests in the safe_lxml directory.</paragraph>
        </section>
        <section ids="module-openedx.core.lib.safe_lxml.etree openedx-core-lib-safe-lxml-etree-module" names="openedx.core.lib.safe_lxml.etree\ module">
            <title>openedx.core.lib.safe_lxml.etree module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.safe_lxml.etree',\ 'module-openedx.core.lib.safe_lxml.etree',\ '',\ None]"></index>
            <paragraph>Safer version of lxml.etree.</paragraph>
            <paragraph>It overrides some unsafe functions from lxml.etree with safer versions from defusedxml.
                It also includes a safer XMLParser.</paragraph>
            <paragraph>For processing xml always prefer this over using lxml.etree directly.</paragraph>
            <paragraph>isort:skip_file</paragraph>
            <index entries="['single',\ 'XMLParser\ (class\ in\ openedx.core.lib.safe_lxml.etree)',\ 'openedx.core.lib.safe_lxml.etree.XMLParser',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="XMLParser" _toc_parts="openedx.core.lib.safe_lxml.etree XMLParser" class="" classes="sig sig-object py" fullname="XMLParser" ids="openedx.core.lib.safe_lxml.etree.XMLParser" module="openedx.core.lib.safe_lxml.etree"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.etree.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">XMLParser</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">XMLParser</literal></paragraph>
                    <paragraph>A safer version of XMLParser which by default disables entity resolution.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.safe_lxml.xmlparser openedx-core-lib-safe-lxml-xmlparser-module" names="openedx.core.lib.safe_lxml.xmlparser\ module">
            <title>openedx.core.lib.safe_lxml.xmlparser module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.safe_lxml.xmlparser',\ 'module-openedx.core.lib.safe_lxml.xmlparser',\ '',\ None]"></index>
            <paragraph>lxml.etree protection</paragraph>
            <index entries="['single',\ 'GlobalParserTLS\ (class\ in\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="GlobalParserTLS" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS" class="" classes="sig sig-object py" fullname="GlobalParserTLS" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS" module="openedx.core.lib.safe_lxml.xmlparser"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">GlobalParserTLS</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">_local</literal></paragraph>
                    <paragraph>Thread local context for custom parser instances</paragraph>
                    <index entries="['single',\ 'createDefaultParser()\ (openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.createDefaultParser',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalParserTLS.createDefaultParser()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS createDefaultParser" class="GlobalParserTLS" classes="sig sig-object py" fullname="GlobalParserTLS.createDefaultParser" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.createDefaultParser" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">createDefaultParser</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'element_class\ (openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS\ attribute)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.element_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalParserTLS.element_class" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS element_class" class="GlobalParserTLS" classes="sig sig-object py" fullname="GlobalParserTLS.element_class" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.element_class" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">element_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement" reftitle="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement"><literal classes="xref py py-class">RestrictedElement</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'getDefaultParser()\ (openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.getDefaultParser',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalParserTLS.getDefaultParser()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS getDefaultParser" class="GlobalParserTLS" classes="sig sig-object py" fullname="GlobalParserTLS.getDefaultParser" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.getDefaultParser" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">getDefaultParser</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'parser_config\ (openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS\ attribute)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.parser_config',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalParserTLS.parser_config" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS parser_config" class="GlobalParserTLS" classes="sig sig-object py" fullname="GlobalParserTLS.parser_config" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.parser_config" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">parser_config</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'resolve_entities': False}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'setDefaultParser()\ (openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.setDefaultParser',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalParserTLS.setDefaultParser()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser GlobalParserTLS setDefaultParser" class="GlobalParserTLS" classes="sig sig-object py" fullname="GlobalParserTLS.setDefaultParser" ids="openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.setDefaultParser" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">setDefaultParser</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'RestrictedElement\ (class\ in\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RestrictedElement" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement" class="" classes="sig sig-object py" fullname="RestrictedElement" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement" module="openedx.core.lib.safe_lxml.xmlparser"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">RestrictedElement</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ElementBase</literal></paragraph>
                    <paragraph>A restricted Element class that filters out instances of some classes</paragraph>
                    <index entries="['single',\ 'blacklist\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ attribute)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.blacklist',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedElement.blacklist" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement blacklist" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.blacklist" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.blacklist" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">blacklist</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'lxml.etree._Entity'&gt;, &lt;class 'lxml.etree._ProcessingInstruction'&gt;, &lt;class 'lxml.etree._Comment'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'getchildren()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getchildren',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.getchildren()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement getchildren" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.getchildren" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getchildren" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">getchildren</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns all direct children.  The elements are returned in document
                                order.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Deprecated</field_name>
                                    <field_body>
                                        <paragraph>Note that this method has been deprecated as of
                                            ElementTree 1.3 and lxml 2.0.  New code should use
                                            <literal>list(element)</literal> or simply iterate over elements.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'getiterator()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getiterator',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.getiterator()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement getiterator" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.getiterator" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getiterator" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">getiterator</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">tags</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a sequence or iterator of all elements in the subtree in
                                document order (depth first pre-order), starting with this
                                element.</paragraph>
                            <paragraph>Can be restricted to find only elements with specific tags,
                                see <title_reference>iter</title_reference>.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Deprecated</field_name>
                                    <field_body>
                                        <paragraph>Note that this method is deprecated as of
                                            ElementTree 1.3 and lxml 2.0.  It returns an iterator in
                                            lxml, which diverges from the original ElementTree
                                            behaviour.  If you want an efficient iterator, use the
                                            <literal>element.iter()</literal> method instead.  You should only use this
                                            method in new code if you require backwards compatibility
                                            with older versions of lxml or ElementTree.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'iter()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iter',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.iter()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement iter" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.iter" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iter" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">iter</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">tags</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Iterate over all elements in the subtree in document order (depth
                                first pre-order), starting with this element.</paragraph>
                            <paragraph>Can be restricted to find only elements with specific tags:
                                pass <literal>"{ns}localname"</literal> as tag. Either or both of <literal>ns</literal> and
                                <literal>localname</literal> can be <literal>*</literal> for a wildcard; <literal>ns</literal> can be empty
                                for no namespace. <literal>"localname"</literal> is equivalent to <literal>"{}localname"</literal>
                                (i.e. no namespace) but <literal>"*"</literal> is <literal>"{*}*"</literal> (any or no namespace),
                                not <literal>"{}*"</literal>.</paragraph>
                            <paragraph>You can also pass the Element, Comment, ProcessingInstruction and
                                Entity factory functions to look only for the specific element type.</paragraph>
                            <paragraph>Passing multiple tags (or a sequence of tags) instead of a single tag
                                will let the iterator return all elements matching any of these tags,
                                in document order.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'iterchildren()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterchildren',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.iterchildren()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement iterchildren" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.iterchildren" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterchildren" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">iterchildren</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">tags</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">reversed</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Iterate over the children of this element.</paragraph>
                            <paragraph>As opposed to using normal iteration on this element, the returned
                                elements can be reversed with the ‘reversed’ keyword and restricted
                                to find only elements with specific tags, see <title_reference>iter</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'iterdescendants()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterdescendants',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.iterdescendants()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement iterdescendants" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.iterdescendants" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterdescendants" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">iterdescendants</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">tags</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Iterate over the descendants of this element in document order.</paragraph>
                            <paragraph>As opposed to <literal>el.iter()</literal>, this iterator does not yield the element
                                itself.  The returned elements can be restricted to find only elements
                                with specific tags, see <title_reference>iter</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'itersiblings()\ (openedx.core.lib.safe_lxml.xmlparser.RestrictedElement\ method)',\ 'openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.itersiblings',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedElement.itersiblings()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser RestrictedElement itersiblings" class="RestrictedElement" classes="sig sig-object py" fullname="RestrictedElement.itersiblings" ids="openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.itersiblings" module="openedx.core.lib.safe_lxml.xmlparser"><desc_name classes="sig-name descname" xml:space="preserve">itersiblings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">self</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">tags</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preceding</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Iterate over the following or preceding siblings of this element.</paragraph>
                            <paragraph>The direction is determined by the ‘preceding’ keyword which
                                defaults to False, i.e. forward iteration over the following
                                siblings.  When True, the iterator yields the preceding
                                siblings in reverse document order, i.e. starting right before
                                the current element and going backwards.</paragraph>
                            <paragraph>Can be restricted to find only elements with specific tags,
                                see <title_reference>iter</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'XML()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.XML',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="XML()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser XML" class="" classes="sig sig-object py" fullname="XML" ids="openedx.core.lib.safe_lxml.xmlparser.XML" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">XML</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">text</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">base_url</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_dtd</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_entities</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_docinfo()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.check_docinfo',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_docinfo()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser check_docinfo" class="" classes="sig sig-object py" fullname="check_docinfo" ids="openedx.core.lib.safe_lxml.xmlparser.check_docinfo" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_docinfo</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">elementtree</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_dtd</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_entities</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check docinfo of an element tree for DTD and entity declarations
                        The check for entity declarations needs lxml 3 or newer. lxml 2.x does
                        not support dtd.iterentities().</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'fromstring()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.fromstring',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="fromstring()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser fromstring" class="" classes="sig sig-object py" fullname="fromstring" ids="openedx.core.lib.safe_lxml.xmlparser.fromstring" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">fromstring</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">text</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">base_url</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_dtd</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_entities</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'getDefaultParser()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.getDefaultParser',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="getDefaultParser()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser getDefaultParser" class="" classes="sig sig-object py" fullname="getDefaultParser" ids="openedx.core.lib.safe_lxml.xmlparser.getDefaultParser" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">getDefaultParser</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'iterparse()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.iterparse',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="iterparse()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser iterparse" class="" classes="sig sig-object py" fullname="iterparse" ids="openedx.core.lib.safe_lxml.xmlparser.iterparse" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">iterparse</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'parse()\ (in\ module\ openedx.core.lib.safe_lxml.xmlparser)',\ 'openedx.core.lib.safe_lxml.xmlparser.parse',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="parse()" _toc_parts="openedx.core.lib.safe_lxml.xmlparser parse" class="" classes="sig sig-object py" fullname="parse" ids="openedx.core.lib.safe_lxml.xmlparser.parse" module="openedx.core.lib.safe_lxml.xmlparser"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.xmlparser.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">parse</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">source</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">base_url</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_dtd</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">forbid_entities</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.safe_lxml module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.safe_lxml',\ 'module-openedx.core.lib.safe_lxml',\ '',\ None]"></index>
            <paragraph>Defuse vulnerabilities in XML packages.</paragraph>
            <index entries="['single',\ 'defuse_xml_libs()\ (in\ module\ openedx.core.lib.safe_lxml)',\ 'openedx.core.lib.safe_lxml.defuse_xml_libs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="defuse_xml_libs()" _toc_parts="openedx.core.lib.safe_lxml defuse_xml_libs" class="" classes="sig sig-object py" fullname="defuse_xml_libs" ids="openedx.core.lib.safe_lxml.defuse_xml_libs" module="openedx.core.lib.safe_lxml"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.safe_lxml.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">defuse_xml_libs</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Monkey patch and defuse all stdlib xml packages and lxml.</paragraph>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
