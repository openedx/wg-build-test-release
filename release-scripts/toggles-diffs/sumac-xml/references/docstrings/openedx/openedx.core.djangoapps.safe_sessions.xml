<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.safe_sessions.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-safe-sessions-package" names="openedx.core.djangoapps.safe_sessions\ package">
        <title>openedx.core.djangoapps.safe_sessions package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.safe_sessions.middleware openedx-core-djangoapps-safe-sessions-middleware-module" names="openedx.core.djangoapps.safe_sessions.middleware\ module">
            <title>openedx.core.djangoapps.safe_sessions.middleware module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.safe_sessions.middleware',\ 'module-openedx.core.djangoapps.safe_sessions.middleware',\ '',\ None]"></index>
            <paragraph>This module defines SafeSessionMiddleware that makes use of a
                SafeCookieData that cryptographically binds the user to the session id
                in the cookie.</paragraph>
            <paragraph>The primary goal is to avoid and detect situations where a session is
                corrupted and the client becomes logged in as the wrong user. This
                could happen via cache corruption (which we’ve seen before) or a
                request handling bug. It’s unlikely to happen again, but would be a
                critical issue, so we’ve built in some checks to make sure the user on
                the session doesn’t change over the course of the session or between
                the request and response phases.</paragraph>
            <paragraph>The secondary goal is to improve upon Django’s session handling by
                including cryptographically enforced expiration.</paragraph>
            <paragraph>The implementation is inspired in part by the proposal in the paper
                &lt;<reference refuri="http://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf">http://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf</reference>&gt;
                but deviates in a number of ways; mostly it just uses the technique
                of an intermediate key for HMAC.</paragraph>
            <paragraph>Note: The proposed protocol protects against replay attacks by
                use of channel binding—specifically, by
                incorporating the session key used in the SSL connection.  However,
                this does not suit our needs since we want the ability to reuse the
                same cookie over multiple browser sessions, and in any case the server
                will be behind a load balancer and won’t have access to the correct
                SSL session information.  So instead, we mitigate
                replay attacks by enforcing session cookie expiration
                (via TimestampSigner) and assuming SESSION_COOKIE_SECURE (see below).</paragraph>
            <paragraph>We use django’s built-in Signer class, which makes use of a built-in
                salted_hmac function that derives an intermediate key from the
                server’s SECRET_KEY, as proposed in the paper.</paragraph>
            <paragraph>Note: The paper proposes deriving an intermediate key from the
                session’s expiration time in order to protect against volume attacks.
                (Note that these hypothetical attacks would only succeed if HMAC-SHA1
                were found to be weak, and there is presently no indication of this.)
                However, since django does not always use an expiration time, we
                instead use a random key salt to prevent volume attacks.</paragraph>
            <paragraph>In fact, we actually use a specialized subclass of Signer called
                TimestampSigner. This signer binds a timestamp along with the signed
                data and verifies that the signature has not expired.  We do this
                since django’s session stores do not actually verify the expiration
                of the session cookies.  Django instead relies on the browser to honor
                session cookie expiration.</paragraph>
            <paragraph>The resulting safe cookie data that gets stored as the value in the
                session cookie is:</paragraph>
            <block_quote>
                <paragraph>version ‘|’ session_id ‘|’ key_salt ‘|’ signed_hash</paragraph>
            </block_quote>
            <paragraph>where signed_hash is a structure incorporating the following value and
                a MAC (via TimestampSigner):</paragraph>
            <block_quote>
                <paragraph>SHA256(version ‘|’ session_id ‘|’ user_id ‘|’)</paragraph>
            </block_quote>
            <paragraph>TimestampSigner uses HMAC-SHA1 to derive a key from key_salt and the
                server’s SECRET_KEY; see django.core.signing for more details on the
                structure of the output (which takes the form of colon-delimited
                Base64.)</paragraph>
            <paragraph>Note: We assume that the SESSION_COOKIE_SECURE setting is set to
                TRUE to prevent inadvertent leakage of the session cookie to a
                person-in-the-middle.  The SESSION_COOKIE_SECURE flag indicates
                to the browser that the cookie should be sent only over an
                SSL-protected channel.  Otherwise, a connection eavesdropper could copy
                the entire cookie and use it to impersonate the victim.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term>Custom Attributes:</term>
                    <definition>
                        <definition_list>
                            <definition_list_item>
                                <term>safe_sessions.user_mismatch: ‘request-response-mismatch’ | ‘request-session-mismatch’</term>
                                <definition>
                                    <paragraph>This attribute can be one of the above two values which correspond to the kind of comparison
                                        that failed when processing the response. See SafeSessionMiddleware._verify_user_and_log_mismatch</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </definition>
                </definition_list_item>
            </definition_list>
            <index entries="['single',\ 'EmailChangeMiddleware\ (class\ in\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="EmailChangeMiddleware" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware EmailChangeMiddleware" class="" classes="sig sig-object py" fullname="EmailChangeMiddleware" ids="openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">EmailChangeMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/http/middleware/#django.utils.deprecation.MiddlewareMixin"><literal classes="xref py py-class">MiddlewareMixin</literal></reference></paragraph>
                    <paragraph>Middleware responsible for performing the following
                        jobs on detecting an email change
                        1) It will update the session’s email and update the JWT cookie</paragraph>
                    <block_quote>
                        <paragraph>to match the new email.</paragraph>
                    </block_quote>
                    <enumerated_list enumtype="arabic" prefix="" start="2" suffix=")">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>It will invalidate any future session on other browsers where</term>
                                    <definition>
                                        <paragraph>the user’s email does not match its session email.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </enumerated_list>
                    <paragraph>This middleware ensures that the sessions in other browsers
                        are invalidated when a user changes their email in one browser.
                        The active session in which the email change is made will remain valid.</paragraph>
                    <paragraph>The user’s email is stored in their session and JWT cookies during login
                        and gets updated when the user changes their email.
                        This middleware checks for any mismatch between the stored email
                        and the current user’s email in each request, and if found,
                        it invalidates/flushes the session and mark cookies for deletion in request
                        which are then deleted in the process_response of SafeSessionMiddleware.</paragraph>
                    <index entries="['single',\ 'process_request()\ (openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.process_request',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmailChangeMiddleware.process_request()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware EmailChangeMiddleware process_request" class="EmailChangeMiddleware" classes="sig sig-object py" fullname="EmailChangeMiddleware.process_request" ids="openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.process_request" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_request</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Invalidate the user session if there’s a mismatch
                                between the email in the user’s session and request.user.email.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'process_response()\ (openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.process_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmailChangeMiddleware.process_response()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware EmailChangeMiddleware process_response" class="EmailChangeMiddleware" classes="sig sig-object py" fullname="EmailChangeMiddleware.process_response" ids="openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.process_response" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                                <list_item>
                                    <paragraph>Update the logged-in cookies if the email change was requested</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Store user’s email in session if not already</paragraph>
                                </list_item>
                            </enumerated_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'register_email_change()\ (openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware\ static\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.register_email_change',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmailChangeMiddleware.register_email_change()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware EmailChangeMiddleware register_email_change" class="EmailChangeMiddleware" classes="sig sig-object py" fullname="EmailChangeMiddleware.register_email_change" ids="openedx.core.djangoapps.safe_sessions.middleware.EmailChangeMiddleware.register_email_change" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">register_email_change</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">email</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Stores the fact that an email change happened.</paragraph>
                            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                                <list_item>
                                    <paragraph>Sets the email in session for later comparison.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Sets a request level variable to mark that the user email change was requested.</paragraph>
                                </list_item>
                            </enumerated_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'SafeCookieData\ (class\ in\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SafeCookieData" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData" class="" classes="sig sig-object py" fullname="SafeCookieData" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SafeCookieData</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">version</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">session_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key_salt</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">signature</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Cookie data that cryptographically binds and timestamps the user
                        to the session id.  It verifies the freshness of the cookie by
                        checking its creation date using settings.SESSION_COOKIE_AGE.</paragraph>
                    <index entries="['single',\ 'CURRENT_VERSION\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ attribute)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.CURRENT_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SafeCookieData.CURRENT_VERSION" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData CURRENT_VERSION" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.CURRENT_VERSION" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.CURRENT_VERSION" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">CURRENT_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'1'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'SEPARATOR\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ attribute)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.SEPARATOR',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SafeCookieData.SEPARATOR" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData SEPARATOR" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.SEPARATOR" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.SEPARATOR" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">SEPARATOR</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'|'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ class\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeCookieData.create()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData create" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.create" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.create" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">session_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Factory method for creating the cryptographically bound
                                safe cookie data for the session and the user.</paragraph>
                            <paragraph>Raises SafeCookieError if session_id is None.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'parse()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ class\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.parse',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeCookieData.parse()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData parse" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.parse" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.parse" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">parse</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">safe_cookie_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Factory method that parses the serialized safe cookie data,
                                verifies the version, and returns the safe cookie object.</paragraph>
                            <paragraph>Raises SafeCookieError if there are any issues parsing the
                                safe_cookie_string.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'sign()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.sign',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeCookieData.sign()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData sign" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.sign" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.sign" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">sign</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Signs the safe cookie data for this user using a timestamped signature
                                and an intermediate key derived from key_salt and server’s SECRET_KEY.
                                Value under signature is the hexadecimal string from
                                SHA256(version ‘|’ session_id ‘|’ user_id ‘|’).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verify()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.verify',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeCookieData.verify()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieData verify" class="SafeCookieData" classes="sig sig-object py" fullname="SafeCookieData.verify" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieData.verify" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">verify</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Verifies the signature of this safe cookie data.
                                Successful verification implies this cookie data is fresh
                                (not expired) and bound to the given user.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'SafeCookieError',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeCookieError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="SafeCookieError" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeCookieError" class="" classes="sig sig-object py" fullname="SafeCookieError" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeCookieError" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SafeCookieError</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_message</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>An exception class for safe cookie related errors.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'SafeSessionMiddleware\ (class\ in\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SafeSessionMiddleware" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware" class="" classes="sig sig-object py" fullname="SafeSessionMiddleware" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SafeSessionMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/middleware/#django.contrib.sessions.middleware.SessionMiddleware"><literal classes="xref py py-class">SessionMiddleware</literal></reference>, <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/http/middleware/#django.utils.deprecation.MiddlewareMixin"><literal classes="xref py py-class">MiddlewareMixin</literal></reference></paragraph>
                    <paragraph>A safer middleware implementation that uses SafeCookieData instead
                        of just the session id to lookup and verify a user’s session.</paragraph>
                    <index entries="['single',\ 'get_user_id_from_session()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware\ static\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.get_user_id_from_session',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeSessionMiddleware.get_user_id_from_session()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware get_user_id_from_session" class="SafeSessionMiddleware" classes="sig sig-object py" fullname="SafeSessionMiddleware.get_user_id_from_session" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.get_user_id_from_session" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_user_id_from_session</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the user_id stored in the session of the request.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'process_request()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.process_request',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeSessionMiddleware.process_request()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware process_request" class="SafeSessionMiddleware" classes="sig sig-object py" fullname="SafeSessionMiddleware.process_request" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.process_request" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_request</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Processing the request is a multi-step process, as follows:</paragraph>
                            <paragraph>Step 1. The safe_cookie_data is parsed and verified from the
                                session cookie.</paragraph>
                            <paragraph>Step 2. The session_id is retrieved from the safe_cookie_data
                                and stored in place of the session cookie value, to be used by
                                Django’s Session middleware.</paragraph>
                            <paragraph>Step 3. Call Django’s Session Middleware to find the session
                                corresponding to the session_id and to set the session in the
                                request.</paragraph>
                            <paragraph>Step 4. Once the session is retrieved, verify that the user
                                bound in the safe_cookie_data matches the user attached to the
                                server’s session information. Otherwise, reject the request
                                (bypass the view and return an error or redirect).</paragraph>
                            <paragraph>Step 5. If all is successful, the now verified user_id is stored
                                separately in the request object so it is available for another
                                final verification before sending the response (in
                                process_response).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'process_response()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.process_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeSessionMiddleware.process_response()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware process_response" class="SafeSessionMiddleware" classes="sig sig-object py" fullname="SafeSessionMiddleware.process_response" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.process_response" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>When creating a cookie for the response, a safe_cookie_data
                                is created and put in place of the session_id in the session
                                cookie.</paragraph>
                            <paragraph>Also, the session cookie is deleted if prior verification failed
                                or the new cookie can’t be created for some reason.</paragraph>
                            <paragraph>Processing the response is a multi-step process, as follows:</paragraph>
                            <paragraph>Step 1. Call the parent’s method to (maybe) generate the basic cookie.</paragraph>
                            <paragraph>Step 2. Verify that the user marked at the time of
                                process_request matches the user at this time when processing
                                the response.  If not, log the error.</paragraph>
                            <paragraph>Step 3. If a cookie is being sent with the response, update
                                the cookie by replacing its session_id with a safe_cookie_data
                                that binds the session and its corresponding user.</paragraph>
                            <paragraph>Step 4. Delete the cookie, if it’s marked for deletion.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set_user_id_in_session()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware\ static\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.set_user_id_in_session',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeSessionMiddleware.set_user_id_in_session()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware set_user_id_in_session" class="SafeSessionMiddleware" classes="sig sig-object py" fullname="SafeSessionMiddleware.set_user_id_in_session" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.set_user_id_in_session" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">set_user_id_in_session</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Stores the user_id in the session of the request.
                                Used by unit tests.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_with_safe_session_cookie()\ (openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware\ static\ method)',\ 'openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.update_with_safe_session_cookie',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SafeSessionMiddleware.update_with_safe_session_cookie()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware SafeSessionMiddleware update_with_safe_session_cookie" class="SafeSessionMiddleware" classes="sig sig-object py" fullname="SafeSessionMiddleware.update_with_safe_session_cookie" ids="openedx.core.djangoapps.safe_sessions.middleware.SafeSessionMiddleware.update_with_safe_session_cookie" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_with_safe_session_cookie</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cookies</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Replaces the session_id in the session cookie with a freshly
                                computed safe_cookie_data.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'mark_user_change_as_expected()\ (in\ module\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.mark_user_change_as_expected',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="mark_user_change_as_expected()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware mark_user_change_as_expected" class="" classes="sig sig-object py" fullname="mark_user_change_as_expected" ids="openedx.core.djangoapps.safe_sessions.middleware.mark_user_change_as_expected" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">mark_user_change_as_expected</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">new_user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Indicate to the safe-sessions middleware that it is expected that
                        the user is changing between the request and response phase of
                        the current request.</paragraph>
                    <paragraph>The new_user_id may be None or an LMS user ID, and may be the same
                        as the previous user ID.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'obscure_token()\ (in\ module\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.obscure_token',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="obscure_token()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware obscure_token" class="" classes="sig sig-object py" fullname="obscure_token" ids="openedx.core.djangoapps.safe_sessions.middleware.obscure_token" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">obscure_token</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Return a short string that can be used to detect other occurrences
                        of this string without revealing the original. Return None if value
                        is None.</paragraph>
                    <paragraph>Outputs are intended to be <emphasis>transient</emphasis> and should not be stored or
                        compared long-term, as they are dependent on the value of
                        settings.SECRET_KEY, which can be rotated at any time.</paragraph>
                    <paragraph>WARNING: This code must only be used for <emphasis>high-entropy inputs</emphasis>
                        that an attacker cannot enumerate, predict, or guess for other
                        parties. In particular, it must not be used for sequential IDs or
                        timestamps, since an attacker possessing the pepper could
                        precompute the hashes. A non-cryptographic de-identification
                        technique must be used in such cases, such as a lookup table.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'track_request_user_changes()\ (in\ module\ openedx.core.djangoapps.safe_sessions.middleware)',\ 'openedx.core.djangoapps.safe_sessions.middleware.track_request_user_changes',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="track_request_user_changes()" _toc_parts="openedx.core.djangoapps.safe_sessions.middleware track_request_user_changes" class="" classes="sig sig-object py" fullname="track_request_user_changes" ids="openedx.core.djangoapps.safe_sessions.middleware.track_request_user_changes" module="openedx.core.djangoapps.safe_sessions.middleware"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.safe_sessions.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">track_request_user_changes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Instrument the request object so that we store changes to the <title_reference>user</title_reference> attribute for future logging
                        if needed for debugging user mismatches. This is done by changing the <title_reference>__class__</title_reference> attribute of the request
                        object to point to a new class we created on the fly which is exactly the same as the underlying request class but
                        with an override for the <title_reference>__setattr__</title_reference> function to catch the attribute changes.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.safe_sessions module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.safe_sessions',\ 'module-openedx.core.djangoapps.safe_sessions',\ '',\ None]"></index>
        </section>
    </section>
</document>
