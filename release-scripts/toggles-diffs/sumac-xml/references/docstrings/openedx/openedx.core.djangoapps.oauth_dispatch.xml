<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.oauth_dispatch.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-oauth-dispatch-package" names="openedx.core.djangoapps.oauth_dispatch\ package">
        <title>openedx.core.djangoapps.oauth_dispatch package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters">openedx.core.djangoapps.oauth_dispatch.adapters package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.adapters.dot" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#module-openedx.core.djangoapps.oauth_dispatch.adapters.dot">openedx.core.djangoapps.oauth_dispatch.adapters.dot module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter"><literal>DOTAdapter</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.FILTER_USER_ME" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.FILTER_USER_ME"><literal>DOTAdapter.FILTER_USER_ME</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.backend" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.backend"><literal>DOTAdapter.backend</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_access_token_for_test" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_access_token_for_test"><literal>DOTAdapter.create_access_token_for_test()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_confidential_client" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_confidential_client"><literal>DOTAdapter.create_confidential_client()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_public_client" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.create_public_client"><literal>DOTAdapter.create_public_client()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_access_token" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_access_token"><literal>DOTAdapter.get_access_token()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_authorization_filters" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_authorization_filters"><literal>DOTAdapter.get_authorization_filters()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_client" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_client"><literal>DOTAdapter.get_client()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_client_for_token" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_client_for_token"><literal>DOTAdapter.get_client_for_token()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_token_scope_names" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.get_token_scope_names"><literal>DOTAdapter.get_token_scope_names()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.is_client_restricted" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter.is_client_restricted"><literal>DOTAdapter.is_client_restricted()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.adapters" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.adapters#module-openedx.core.djangoapps.oauth_dispatch.adapters">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides">openedx.core.djangoapps.oauth_dispatch.dot_overrides package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators">openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator"><literal>EdxOAuth2Validator</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.get_default_scopes" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.get_default_scopes"><literal>EdxOAuth2Validator.get_default_scopes()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.save_bearer_token" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.save_bearer_token"><literal>EdxOAuth2Validator.save_bearer_token()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.validate_scopes" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.validate_scopes"><literal>EdxOAuth2Validator.validate_scopes()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.validate_user" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator.validate_user"><literal>EdxOAuth2Validator.validate_user()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.on_access_token_presave" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.on_access_token_presave"><literal>on_access_token_presave()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides.views" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides.views">openedx.core.djangoapps.oauth_dispatch.dot_overrides.views module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView"><literal>EdxOAuth2AuthorizationView</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView.get" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView.get"><literal>EdxOAuth2AuthorizationView.get()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#module-openedx.core.djangoapps.oauth_dispatch.dot_overrides">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management">openedx.core.djangoapps.oauth_dispatch.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands">openedx.core.djangoapps.oauth_dispatch.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.management.commands.create_dot_application" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands#module-openedx.core.djangoapps.oauth_dispatch.management.commands.create_dot_application">openedx.core.djangoapps.oauth_dispatch.management.commands.create_dot_application module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.management.commands.edx_clear_expired_tokens" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands#module-openedx.core.djangoapps.oauth_dispatch.management.commands.edx_clear_expired_tokens">openedx.core.djangoapps.oauth_dispatch.management.commands.edx_clear_expired_tokens module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.management.commands.generate_jwt_signing_key" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands#module-openedx.core.djangoapps.oauth_dispatch.management.commands.generate_jwt_signing_key">openedx.core.djangoapps.oauth_dispatch.management.commands.generate_jwt_signing_key module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.management.commands" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management.commands#module-openedx.core.djangoapps.oauth_dispatch.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.oauth_dispatch.management" internal="True" refuri="openedx.core.djangoapps.oauth_dispatch.management#module-openedx.core.djangoapps.oauth_dispatch.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.api openedx-core-djangoapps-oauth-dispatch-api-module" names="openedx.core.djangoapps.oauth_dispatch.api\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.api',\ 'module-openedx.core.djangoapps.oauth_dispatch.api',\ '',\ None]"></index>
            <paragraph>OAuth related Python apis.</paragraph>
            <index entries="['single',\ 'create_dot_access_token()\ (in\ module\ openedx.core.djangoapps.oauth_dispatch.api)',\ 'openedx.core.djangoapps.oauth_dispatch.api.create_dot_access_token',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_dot_access_token()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.api create_dot_access_token" class="" classes="sig sig-object py" fullname="create_dot_access_token" ids="openedx.core.djangoapps.oauth_dispatch.api.create_dot_access_token" module="openedx.core.djangoapps.oauth_dispatch.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_dot_access_token</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">client</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">expires_in</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scopes</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create and return a new (persisted) access token, including a refresh token.
                        The token is returned in the form of a Dict:</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>{</term>
                                <definition>
                                    <paragraph>u’access_token’: u’some string’,
                                        u’refresh_token’: u’another string’,
                                        u’token_type’: u’Bearer’,
                                        u’expires_in’: 36000,
                                        u’scope’: u’profile email’,</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>},</paragraph>
                    </block_quote>
                </desc_content>
            </desc>
            <index entries="['single',\ 'destroy_oauth_tokens()\ (in\ module\ openedx.core.djangoapps.oauth_dispatch.api)',\ 'openedx.core.djangoapps.oauth_dispatch.api.destroy_oauth_tokens',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="destroy_oauth_tokens()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.api destroy_oauth_tokens" class="" classes="sig sig-object py" fullname="destroy_oauth_tokens" ids="openedx.core.djangoapps.oauth_dispatch.api.destroy_oauth_tokens" module="openedx.core.djangoapps.oauth_dispatch.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">destroy_oauth_tokens</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Destroys ALL OAuth access and refresh tokens for the given user.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.apps openedx-core-djangoapps-oauth-dispatch-apps-module" names="openedx.core.djangoapps.oauth_dispatch.apps\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.apps',\ 'module-openedx.core.djangoapps.oauth_dispatch.apps',\ '',\ None]"></index>
            <paragraph>Configure OAuthDispatch App</paragraph>
            <index entries="['single',\ 'OAuthDispatchAppConfig\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.apps)',\ 'openedx.core.djangoapps.oauth_dispatch.apps.OAuthDispatchAppConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="OAuthDispatchAppConfig" _toc_parts="openedx.core.djangoapps.oauth_dispatch.apps OAuthDispatchAppConfig" class="" classes="sig sig-object py" fullname="OAuthDispatchAppConfig" ids="openedx.core.djangoapps.oauth_dispatch.apps.OAuthDispatchAppConfig" module="openedx.core.djangoapps.oauth_dispatch.apps"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">OAuthDispatchAppConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>OAuthDispatch Configuration</paragraph>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.oauth_dispatch.apps.OAuthDispatchAppConfig\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.apps.OAuthDispatchAppConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="OAuthDispatchAppConfig.name" _toc_parts="openedx.core.djangoapps.oauth_dispatch.apps OAuthDispatchAppConfig name" class="OAuthDispatchAppConfig" classes="sig sig-object py" fullname="OAuthDispatchAppConfig.name" ids="openedx.core.djangoapps.oauth_dispatch.apps.OAuthDispatchAppConfig.name" module="openedx.core.djangoapps.oauth_dispatch.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.oauth_dispatch'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.jwt openedx-core-djangoapps-oauth-dispatch-jwt-module" names="openedx.core.djangoapps.oauth_dispatch.jwt\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.jwt module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.jwt',\ 'module-openedx.core.djangoapps.oauth_dispatch.jwt',\ '',\ None]"></index>
            <paragraph>Utilities for working with ID tokens.</paragraph>
            <index entries="['single',\ 'create_jwt_for_user()\ (in\ module\ openedx.core.djangoapps.oauth_dispatch.jwt)',\ 'openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_for_user',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_jwt_for_user()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.jwt create_jwt_for_user" class="" classes="sig sig-object py" fullname="create_jwt_for_user" ids="openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_for_user" module="openedx.core.djangoapps.oauth_dispatch.jwt"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.jwt.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_jwt_for_user</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">secret</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">aud</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">additional_claims</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scopes</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a JWT to identify the given user.</paragraph>
                    <paragraph>TODO (ARCH-204) Note the returned JWT does not have an underlying access
                        token associated with it and so cannot be invalidated nor refreshed. This
                        interface should be revisited when addressing authentication-related cleanup
                        as part of ARCH-204.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – User for which to generate the JWT.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>scopes</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Optional. Scopes that limit access to the token bearer and
                                            controls which optional claims are included in the token.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Deprecated Arguments (to be removed):</term>
                            <definition>
                                <paragraph>secret (string): Overrides configured JWT secret (signing) key.
                                    aud (string): Optional. Overrides configured JWT audience claim.
                                    additional_claims (dict): Optional. Additional claims to include in the token.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_jwt_from_token()\ (in\ module\ openedx.core.djangoapps.oauth_dispatch.jwt)',\ 'openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_from_token',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_jwt_from_token()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.jwt create_jwt_from_token" class="" classes="sig sig-object py" fullname="create_jwt_from_token" ids="openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_from_token" module="openedx.core.djangoapps.oauth_dispatch.jwt"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.jwt.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_jwt_from_token</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token_dict</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">oauth_adapter</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_asymmetric_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a JWT created from the provided access token dict.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Note: if you need the token dict, and not just the JWT, use</term>
                            <definition>
                                <paragraph>create_jwt_token_dict instead. See its docs for more details.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_jwt_token_dict()\ (in\ module\ openedx.core.djangoapps.oauth_dispatch.jwt)',\ 'openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_token_dict',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_jwt_token_dict()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.jwt create_jwt_token_dict" class="" classes="sig sig-object py" fullname="create_jwt_token_dict" ids="openedx.core.djangoapps.oauth_dispatch.jwt.create_jwt_token_dict" module="openedx.core.djangoapps.oauth_dispatch.jwt"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.jwt.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_jwt_token_dict</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token_dict</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">oauth_adapter</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_asymmetric_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a JWT access token dict based on the provided access token.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>token_dict</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – An access token structure as returned from an
                                    underlying OAuth provider. Dict includes “access_token”,
                                    “expires_in”, “token_type”, and “scope”.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Deprecated Arguments (to be removed):</term>
                            <definition>
                                <definition_list>
                                    <definition_list_item>
                                        <term>oauth_adapter (DOPAdapter|DOTAdapter): An OAuth adapter that will</term>
                                        <definition>
                                            <paragraph>provide the given token’s information.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                    <definition_list_item>
                                        <term>use_asymmetric_key (Boolean): Optional. Whether the JWT should be signed</term>
                                        <definition>
                                            <paragraph>with this app’s private key. If not provided, defaults to whether
                                                the OAuth client is restricted.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.models openedx-core-djangoapps-oauth-dispatch-models-module" names="openedx.core.djangoapps.oauth_dispatch.models\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.models',\ 'module-openedx.core.djangoapps.oauth_dispatch.models',\ '',\ None]"></index>
            <paragraph>Specialized models for oauth_dispatch djangoapp</paragraph>
            <index entries="['single',\ 'ApplicationAccess\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.models)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ApplicationAccess" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess" class="" classes="sig sig-object py" fullname="ApplicationAccess" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ApplicationAccess</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Specifies access control information for the associated Application.</paragraph>
                    <paragraph>For usage details, see:
                        - openedx/core/djangoapps/oauth_dispatch/docs/decisions/0007-include-organizations-in-tokens.rst</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CONTENT_ORG_FILTER_NAME\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.CONTENT_ORG_FILTER_NAME',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.CONTENT_ORG_FILTER_NAME" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess CONTENT_ORG_FILTER_NAME" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.CONTENT_ORG_FILTER_NAME" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.CONTENT_ORG_FILTER_NAME" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">CONTENT_ORG_FILTER_NAME</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'content_org'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ApplicationAccess.DoesNotExist',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ApplicationAccess.DoesNotExist" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess DoesNotExist" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.DoesNotExist" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.DoesNotExist" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ApplicationAccess.MultipleObjectsReturned',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ApplicationAccess.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess MultipleObjectsReturned" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.MultipleObjectsReturned" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.MultipleObjectsReturned" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.application',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.application" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess application" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.application" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.application" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a one-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Restaurant.place</literal> is a <literal>ForwardOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application_id\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.application_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.application_id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess application_id" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.application_id" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.application_id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'filters\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.filters',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.filters" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess filters" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.filters" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.filters" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">filters</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_filter_values()\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ class\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_filter_values',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationAccess.get_filter_values()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess get_filter_values" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.get_filter_values" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_filter_values" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_filter_values</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_filters()\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ class\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationAccess.get_filters()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess get_filters" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.get_filters" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_filters" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_scopes()\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ class\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_scopes',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationAccess.get_scopes()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess get_scopes" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.get_scopes" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.get_scopes" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_scopes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess id" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.id" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.objects" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess objects" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.objects" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.objects" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'scopes\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.scopes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationAccess.scopes" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationAccess scopes" class="ApplicationAccess" classes="sig sig-object py" fullname="ApplicationAccess.scopes" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationAccess.scopes" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">scopes</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ApplicationOrganization\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.models)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ApplicationOrganization" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization" class="" classes="sig sig-object py" fullname="ApplicationOrganization" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ApplicationOrganization</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>DEPRECATED: Associates a DOT Application to an Organization.</paragraph>
                    <paragraph>This model is no longer in use.</paragraph>
                    <paragraph>TODO: BOM-1270: This model and table will be removed post-Juniper
                        so Open edX instances can migrate data if necessary.</paragraph>
                    <paragraph>To migrate, use ApplicationAccess and add a <literal>filter</literal> of the form
                        <literal>content_org:&lt;ORG NAME&gt;</literal> (e.g. content_org:edx), for each record
                        in this model’s table.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'ApplicationOrganization.DoesNotExist',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ApplicationOrganization.DoesNotExist" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization DoesNotExist" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.DoesNotExist" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.DoesNotExist" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ApplicationOrganization.MultipleObjectsReturned',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ApplicationOrganization.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization MultipleObjectsReturned" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.MultipleObjectsReturned" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.MultipleObjectsReturned" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RELATION_TYPES\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.RELATION_TYPES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.RELATION_TYPES" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization RELATION_TYPES" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.RELATION_TYPES" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.RELATION_TYPES" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">RELATION_TYPES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('content_org', 'Content Provider'),)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RELATION_TYPE_CONTENT_ORG\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.RELATION_TYPE_CONTENT_ORG',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.RELATION_TYPE_CONTENT_ORG" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization RELATION_TYPE_CONTENT_ORG" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.RELATION_TYPE_CONTENT_ORG" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.RELATION_TYPE_CONTENT_ORG" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">RELATION_TYPE_CONTENT_ORG</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'content_org'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.application',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.application" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization application" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.application" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.application" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application_id\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.application_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.application_id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization application_id" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.application_id" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.application_id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_relation_type_display()\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.get_relation_type_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationOrganization.get_relation_type_display()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization get_relation_type_display" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.get_relation_type_display" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.get_relation_type_display" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">get_relation_type_display</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: relation_type&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization id" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.id" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.objects" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization objects" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.objects" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.objects" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'organization\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.organization',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.organization" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization organization" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.organization" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.organization" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">organization</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'organization_id\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.organization_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.organization_id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization organization_id" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.organization_id" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.organization_id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">organization_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'relation_type\ (openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.relation_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ApplicationOrganization.relation_type" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models ApplicationOrganization relation_type" class="ApplicationOrganization" classes="sig sig-object py" fullname="ApplicationOrganization.relation_type" ids="openedx.core.djangoapps.oauth_dispatch.models.ApplicationOrganization.relation_type" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">relation_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'RestrictedApplication\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.models)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RestrictedApplication" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication" class="" classes="sig sig-object py" fullname="RestrictedApplication" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">RestrictedApplication</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>This model lists which django-oauth-toolkit Applications are considered ‘restricted’
                        and thus have a limited ability to use various APIs.</paragraph>
                    <paragraph>A restricted Application will only get expired token/JWT payloads
                        so that they cannot be used to call into APIs.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'RestrictedApplication.DoesNotExist',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="RestrictedApplication.DoesNotExist" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication DoesNotExist" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.DoesNotExist" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.DoesNotExist" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RestrictedApplication.MultipleObjectsReturned',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="RestrictedApplication.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication MultipleObjectsReturned" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.MultipleObjectsReturned" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.MultipleObjectsReturned" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.application',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedApplication.application" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication application" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.application" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.application" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'application_id\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.application_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedApplication.application_id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication application_id" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.application_id" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.application_id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">application_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedApplication.id" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication id" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.id" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.id" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedApplication.objects" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication objects" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.objects" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.objects" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'should_expire_access_token()\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ class\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.should_expire_access_token',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedApplication.should_expire_access_token()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication should_expire_access_token" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.should_expire_access_token" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.should_expire_access_token" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">should_expire_access_token</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verify_access_token_as_expired()\ (openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication\ class\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.verify_access_token_as_expired',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedApplication.verify_access_token_as_expired()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.models RestrictedApplication verify_access_token_as_expired" class="RestrictedApplication" classes="sig sig-object py" fullname="RestrictedApplication.verify_access_token_as_expired" ids="openedx.core.djangoapps.oauth_dispatch.models.RestrictedApplication.verify_access_token_as_expired" module="openedx.core.djangoapps.oauth_dispatch.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">verify_access_token_as_expired</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_token</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>For access_tokens for RestrictedApplications, make sure that the expiry date
                                is set at the beginning of the epoch which is Jan. 1, 1970</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.scopes openedx-core-djangoapps-oauth-dispatch-scopes-module" names="openedx.core.djangoapps.oauth_dispatch.scopes\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.scopes module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.scopes',\ 'module-openedx.core.djangoapps.oauth_dispatch.scopes',\ '',\ None]"></index>
            <paragraph>Custom Django OAuth Toolkit scopes backends.</paragraph>
            <index entries="['single',\ 'ApplicationModelScopes\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.scopes)',\ 'openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ApplicationModelScopes" _toc_parts="openedx.core.djangoapps.oauth_dispatch.scopes ApplicationModelScopes" class="" classes="sig sig-object py" fullname="ApplicationModelScopes" ids="openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes" module="openedx.core.djangoapps.oauth_dispatch.scopes"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.scopes.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ApplicationModelScopes</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">SettingsScopes</literal></paragraph>
                    <paragraph>Scopes backend that determines available scopes using the ApplicationAccess model.</paragraph>
                    <index entries="['single',\ 'get_available_scopes()\ (openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes.get_available_scopes',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationModelScopes.get_available_scopes()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.scopes ApplicationModelScopes get_available_scopes" class="ApplicationModelScopes" classes="sig sig-object py" fullname="ApplicationModelScopes.get_available_scopes" ids="openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes.get_available_scopes" module="openedx.core.djangoapps.oauth_dispatch.scopes"><desc_name classes="sig-name descname" xml:space="preserve">get_available_scopes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns valid scopes configured for the given application.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'has_user_id_in_application_scopes()\ (openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes.has_user_id_in_application_scopes',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ApplicationModelScopes.has_user_id_in_application_scopes()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.scopes ApplicationModelScopes has_user_id_in_application_scopes" class="ApplicationModelScopes" classes="sig sig-object py" fullname="ApplicationModelScopes.has_user_id_in_application_scopes" ids="openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes.has_user_id_in_application_scopes" module="openedx.core.djangoapps.oauth_dispatch.scopes"><desc_name classes="sig-name descname" xml:space="preserve">has_user_id_in_application_scopes</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">application</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the user id associated with the given application.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.toggles openedx-core-djangoapps-oauth-dispatch-toggles-module" names="openedx.core.djangoapps.oauth_dispatch.toggles\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.toggles module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.toggles',\ 'module-openedx.core.djangoapps.oauth_dispatch.toggles',\ '',\ None]"></index>
            <paragraph>Toggles for Oauth Dispatch.</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.urls openedx-core-djangoapps-oauth-dispatch-urls-module" names="openedx.core.djangoapps.oauth_dispatch.urls\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.urls',\ 'module-openedx.core.djangoapps.oauth_dispatch.urls',\ '',\ None]"></index>
            <paragraph>OAuth2 wrapper urls</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch.views openedx-core-djangoapps-oauth-dispatch-views-module" names="openedx.core.djangoapps.oauth_dispatch.views\ module">
            <title>openedx.core.djangoapps.oauth_dispatch.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch.views',\ 'module-openedx.core.djangoapps.oauth_dispatch.views',\ '',\ None]"></index>
            <paragraph>Views that dispatch processing of OAuth requests to django-oauth2-provider or
                django-oauth-toolkit as appropriate.</paragraph>
            <index entries="['single',\ 'AccessTokenExchangeView\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.views)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AccessTokenExchangeView" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenExchangeView" class="" classes="sig sig-object py" fullname="AccessTokenExchangeView" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AccessTokenExchangeView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">_DispatchingView</literal></paragraph>
                    <paragraph>Exchange a third party auth token.</paragraph>
                    <index entries="['single',\ 'dispatch()\ (openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView.dispatch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeView.dispatch()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenExchangeView dispatch" class="AccessTokenExchangeView" classes="sig sig-object py" fullname="AccessTokenExchangeView.dispatch" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView.dispatch" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dispatch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Dispatch the request to the selected backend’s view.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'dot_view\ (openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView.dot_view',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeView.dot_view" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenExchangeView dot_view" class="AccessTokenExchangeView" classes="sig sig-object py" fullname="AccessTokenExchangeView.dot_view" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenExchangeView.dot_view" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dot_view</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" reftitle="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView" refuri="openedx.core.djangoapps.auth_exchange#openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView"><literal classes="xref py py-class">DOTAccessTokenExchangeView</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'AccessTokenView\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.views)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AccessTokenView" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenView" class="" classes="sig sig-object py" fullname="AccessTokenView" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AccessTokenView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">_DispatchingView</literal></paragraph>
                    <paragraph>Handle access token requests.</paragraph>
                    <index entries="['single',\ 'dispatch()\ (openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView\ method)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView.dispatch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenView.dispatch()" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenView dispatch" class="AccessTokenView" classes="sig sig-object py" fullname="AccessTokenView.dispatch" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView.dispatch" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dispatch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Dispatch the request to the selected backend’s view.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'dot_view\ (openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView.dot_view',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenView.dot_view" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AccessTokenView dot_view" class="AccessTokenView" classes="sig sig-object py" fullname="AccessTokenView.dot_view" ids="openedx.core.djangoapps.oauth_dispatch.views.AccessTokenView.dot_view" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dot_view</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <literal classes="xref py py-class">TokenView</literal></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'AuthorizationView\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.views)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AuthorizationView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AuthorizationView" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AuthorizationView" class="" classes="sig sig-object py" fullname="AuthorizationView" ids="openedx.core.djangoapps.oauth_dispatch.views.AuthorizationView" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AuthorizationView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">_DispatchingView</literal></paragraph>
                    <paragraph>Part of the authorization flow.</paragraph>
                    <index entries="['single',\ 'dot_view\ (openedx.core.djangoapps.oauth_dispatch.views.AuthorizationView\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.views.AuthorizationView.dot_view',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AuthorizationView.dot_view" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views AuthorizationView dot_view" class="AuthorizationView" classes="sig sig-object py" fullname="AuthorizationView.dot_view" ids="openedx.core.djangoapps.oauth_dispatch.views.AuthorizationView.dot_view" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dot_view</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" reftitle="openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView" refuri="openedx.core.djangoapps.oauth_dispatch.dot_overrides#openedx.core.djangoapps.oauth_dispatch.dot_overrides.views.EdxOAuth2AuthorizationView"><literal classes="xref py py-class">EdxOAuth2AuthorizationView</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'RevokeTokenView\ (class\ in\ openedx.core.djangoapps.oauth_dispatch.views)',\ 'openedx.core.djangoapps.oauth_dispatch.views.RevokeTokenView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RevokeTokenView" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views RevokeTokenView" class="" classes="sig sig-object py" fullname="RevokeTokenView" ids="openedx.core.djangoapps.oauth_dispatch.views.RevokeTokenView" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.oauth_dispatch.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">RevokeTokenView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">_DispatchingView</literal></paragraph>
                    <paragraph>Dispatch to the RevokeTokenView of django-oauth-toolkit</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Note: JWT access tokens are non-revocable, but you could still revoke</term>
                            <definition>
                                <paragraph>its associated refresh_token.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <index entries="['single',\ 'dot_view\ (openedx.core.djangoapps.oauth_dispatch.views.RevokeTokenView\ attribute)',\ 'openedx.core.djangoapps.oauth_dispatch.views.RevokeTokenView.dot_view',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RevokeTokenView.dot_view" _toc_parts="openedx.core.djangoapps.oauth_dispatch.views RevokeTokenView dot_view" class="RevokeTokenView" classes="sig sig-object py" fullname="RevokeTokenView.dot_view" ids="openedx.core.djangoapps.oauth_dispatch.views.RevokeTokenView.dot_view" module="openedx.core.djangoapps.oauth_dispatch.views"><desc_name classes="sig-name descname" xml:space="preserve">dot_view</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <literal classes="xref py py-class">RevokeTokenView</literal></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.oauth_dispatch module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.oauth_dispatch',\ 'module-openedx.core.djangoapps.oauth_dispatch',\ '',\ None]"></index>
        </section>
    </section>
</document>
