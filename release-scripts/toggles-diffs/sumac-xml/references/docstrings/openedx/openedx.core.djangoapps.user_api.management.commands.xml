<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.user_api.management.commands.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-user-api-management-commands-package" names="openedx.core.djangoapps.user_api.management.commands\ package">
        <title>openedx.core.djangoapps.user_api.management.commands package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout openedx-core-djangoapps-user-api-management-commands-bulk-user-org-email-optout-module" names="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout',\ 'module-openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout',\ '',\ None]"></index>
            <paragraph>One-off script to opt-out users for email from orgs.</paragraph>
            <paragraph>Input: A CSV file with a user_id,org pair per line. For example:</paragraph>
            <paragraph>1962921,FooX
                5506350,BarX
                5709986,FooX</paragraph>
            <paragraph>Lines formatted with a double-quoted org also work fine, such as:</paragraph>
            <paragraph>5506350,”BarX”</paragraph>
            <paragraph>Opts-out every specified user/org combo row from email by setting the ‘email-optin’ tag to ‘False’.
                If the user/org combo does not currently exist in the table, a row will be created for it which
                will be have the ‘email-optin’ tag set to ‘False’.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>One-off script to opt-out users for email from orgs.</paragraph>
                    <paragraph>Input: A CSV file with a user_id,org pair per line. For example:</paragraph>
                    <paragraph>1962921,FooX
                        5506350,BarX
                        5709986,FooX</paragraph>
                    <paragraph>Lines formatted with a double-quoted org also work fine, such as:</paragraph>
                    <paragraph>5506350,”BarX”</paragraph>
                    <paragraph>Opts-out every specified user/org combo row from email by setting the ‘email-optin’ tag to ‘False’.
                        If the user/org combo does not currently exist in the table, a row will be created for it which
                        will be have the ‘email-optin’ tag set to ‘False’.</paragraph>
                    <index entries="['single',\ 'DEFAULT_CHUNK_SIZE\ (openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.DEFAULT_CHUNK_SIZE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.DEFAULT_CHUNK_SIZE" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command DEFAULT_CHUNK_SIZE" class="Command" classes="sig sig-object py" fullname="Command.DEFAULT_CHUNK_SIZE" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.DEFAULT_CHUNK_SIZE" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_name classes="sig-name descname" xml:space="preserve">DEFAULT_CHUNK_SIZE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1000</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'DEFAULT_SLEEP_BETWEEN_OPTOUTS\ (openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.DEFAULT_SLEEP_BETWEEN_OPTOUTS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.DEFAULT_SLEEP_BETWEEN_OPTOUTS" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command DEFAULT_SLEEP_BETWEEN_OPTOUTS" class="Command" classes="sig sig-object py" fullname="Command.DEFAULT_SLEEP_BETWEEN_OPTOUTS" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.DEFAULT_SLEEP_BETWEEN_OPTOUTS" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_name classes="sig-name descname" xml:space="preserve">DEFAULT_SLEEP_BETWEEN_OPTOUTS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>0.0</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout.Command.help" module="openedx.core.djangoapps.user_api.management.commands.bulk_user_org_email_optout"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'One-off script to opt-out users for email from orgs.\n\nInput: A CSV file with a user_id,org pair per line. For example:\n\n1962921,FooX\n5506350,BarX\n5709986,FooX\n\nLines formatted with a double-quoted org also work fine, such as:\n\n5506350,"BarX"\n\nOpts-out every specified user/org combo row from email by setting the \'email-optin\' tag to \'False\'.\nIf the user/org combo does not currently exist in the table, a row will be created for it which\nwill be have the \'email-optin\' tag set to \'False\'.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request openedx-core-djangoapps-user-api-management-commands-cancel-user-retirement-request-module" names="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request',\ 'module-openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request',\ '',\ None]"></index>
            <paragraph>Use this mgmt command when a user requests retirement mistakenly, then requests
                for the retirement request to be cancelled. The command can’t cancel a retirement
                that has already commenced - only pending retirements.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request)',\ 'openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command" module="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Implementation of the cancel_user_retirement_request command.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request.Command.help" module="openedx.core.djangoapps.user_api.management.commands.cancel_user_retirement_request"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Cancels the retirement of a user who has requested retirement - but has not yet been retired.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing openedx-core-djangoapps-user-api-management-commands-create-user-gdpr-testing-module" names="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing',\ 'module-openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing',\ '',\ None]"></index>
            <paragraph>Create a user with GDPR P1 PII for manual testing.
                Enrolls the user in the DemoX course.
                Optionally takes in username, email, and course UUID arguments.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing)',\ 'openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command" module="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Create a user with GDPR P1 PII for manual testing.
                        Enrolls the user in the DemoX course.
                        Optionally takes in username, email, and course UUID arguments.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing.Command.help" module="openedx.core.djangoapps.user_api.management.commands.create_user_gdpr_testing"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Create a user with GDPR P1 PII for manual testing.\nEnrolls the user in the DemoX course.\nOptionally takes in username, email, and course UUID arguments.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.email_opt_in_list openedx-core-djangoapps-user-api-management-commands-email-opt-in-list-module" names="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.email_opt_in_list module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.email_opt_in_list',\ 'module-openedx.core.djangoapps.user_api.management.commands.email_opt_in_list',\ '',\ None]"></index>
            <paragraph>Generate a list indicating whether users have opted in or out of receiving email from an org.</paragraph>
            <paragraph>Email opt-in is stored as an org-level preference.
                When reports are generated, we need to handle:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=")">
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Org aliases: some organizations might have multiple course key “org” values.</term>
                            <definition>
                                <paragraph>We choose the most recently set preference among all org aliases.
                                    Since this information isn’t stored anywhere in edx-platform,
                                    the caller needs to pass in the list of orgs and aliases.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>No preference set: Some users may not have an opt-in preference set</term>
                            <definition>
                                <paragraph>if they enrolled before the preference was introduced.
                                    These users are opted in by default.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Restricting to a subset of courses in an org: Some orgs have courses</term>
                            <definition>
                                <paragraph>that we don’t want to include in the results (e.g. EdX-created test courses).
                                    Allow the caller to explicitly specify the list of courses in the org.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </enumerated_list>
            <paragraph>The command will always use the read replica database if one is configured.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.email_opt_in_list)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Generate a list of email opt-in values for user enrollments.</paragraph>
                    <index entries="['single',\ 'DEFAULT_DATETIME_STR\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.DEFAULT_DATETIME_STR',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.DEFAULT_DATETIME_STR" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command DEFAULT_DATETIME_STR" class="Command" classes="sig sig-object py" fullname="Command.DEFAULT_DATETIME_STR" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.DEFAULT_DATETIME_STR" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">DEFAULT_DATETIME_STR</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'2014-12-01 00:00:00'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'OUTPUT_FIELD_NAMES\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.OUTPUT_FIELD_NAMES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.OUTPUT_FIELD_NAMES" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command OUTPUT_FIELD_NAMES" class="Command" classes="sig sig-object py" fullname="Command.OUTPUT_FIELD_NAMES" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.OUTPUT_FIELD_NAMES" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">OUTPUT_FIELD_NAMES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>['user_id', 'username', 'email', 'full_name', 'course_id', 'is_opted_in_for_email', 'preference_set_datetime']</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'QUERY_INTERVAL\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.QUERY_INTERVAL',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.QUERY_INTERVAL" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command QUERY_INTERVAL" class="Command" classes="sig sig-object py" fullname="Command.QUERY_INTERVAL" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.QUERY_INTERVAL" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">QUERY_INTERVAL</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1000</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>file_path</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Path to the output file.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>*org_list</literal_strong> (<literal_emphasis>unicode</literal_emphasis>) – List of organization aliases.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Keyword Arguments</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>courses</literal_strong> (<literal_emphasis>unicode</literal_emphasis>) – Comma-separated list of course keys.  If provided,
                                            include only these courses in the results.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>CommandError</literal_strong> – </paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.Command.help" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Generate a list of email opt-in values for user enrollments.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'chunks()\ (in\ module\ openedx.core.djangoapps.user_api.management.commands.email_opt_in_list)',\ 'openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.chunks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="chunks()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list chunks" class="" classes="sig sig-object py" fullname="chunks" ids="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.chunks" module="openedx.core.djangoapps.user_api.management.commands.email_opt_in_list"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.email_opt_in_list.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">chunks</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sequence</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">chunk_size</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs openedx-core-djangoapps-user-api-management-commands-migrate-user-profile-langs-module" names="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs',\ 'module-openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs',\ '',\ None]"></index>
            <paragraph>Migrates user preferences from one language code to another in batches. Dark lang preferences are not affected.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs)',\ 'openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command" module="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Implementation of the migrate command</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs.Command.help" module="openedx.core.djangoapps.user_api.management.commands.migrate_user_profile_langs"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Migrate all user language preferences (excluding dark languages) from one language code to another.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job openedx-core-djangoapps-user-api-management-commands-populate-enterprise-learner-current-job-module" names="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job',\ 'module-openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job',\ '',\ None]"></index>
            <paragraph>Management command for populaing current job of learners in learner profile.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command" module="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Command to populate current job of learners in extended learner profile.</paragraph>
                    <paragraph>This command will fetch the current job of learners from course-discovery service
                        and populate it in the extended learner profile in edx-platform. This command is
                        supposed to be run only once in the system.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Example usage:</term>
                            <definition>
                                <paragraph>$ # Update the current job of learners.
                                    $ ./manage.py lms populate_enterprise_learner_current_job</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <index entries="['single',\ 'TOTAL_USERS_COUNT\ (openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.TOTAL_USERS_COUNT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.TOTAL_USERS_COUNT" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job Command TOTAL_USERS_COUNT" class="Command" classes="sig sig-object py" fullname="Command.TOTAL_USERS_COUNT" ids="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.TOTAL_USERS_COUNT" module="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job"><desc_name classes="sig-name descname" xml:space="preserve">TOTAL_USERS_COUNT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>0</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'TOTAL_USERS_UPDATED\ (openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.TOTAL_USERS_UPDATED',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.TOTAL_USERS_UPDATED" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job Command TOTAL_USERS_UPDATED" class="Command" classes="sig sig-object py" fullname="Command.TOTAL_USERS_UPDATED" ids="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.TOTAL_USERS_UPDATED" module="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job"><desc_name classes="sig-name descname" xml:space="preserve">TOTAL_USERS_UPDATED</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>0</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Handle the command.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>*args</literal_strong> – Variable length argument list.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>**options</literal_strong> – Arbitrary keyword arguments.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job.Command.help" module="openedx.core.djangoapps.user_api.management.commands.populate_enterprise_learner_current_job"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Populates current job of learners in extended learner profile.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.populate_retirement_states openedx-core-djangoapps-user-api-management-commands-populate-retirement-states-module" names="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.populate_retirement_states module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.populate_retirement_states',\ 'module-openedx.core.djangoapps.user_api.management.commands.populate_retirement_states',\ '',\ None]"></index>
            <paragraph>Take the list of states from settings.RETIREMENT_STATES and forces the
                RetirementState table to mirror it.</paragraph>
            <paragraph>We use a foreign keyed table for this instead of just using the settings
                directly to generate a <title_reference>choices</title_reference> tuple for the model because the states
                need to be configurable by open source partners and modifying the
                <title_reference>choices</title_reference> for a model field causes new migrations to be generated,
                with a variety of unpleasant follow-on effects for the partner when
                upgrading the model at a later date.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.populate_retirement_states)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command" module="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Implementation of the populate command</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states.Command.help" module="openedx.core.djangoapps.user_api.management.commands.populate_retirement_states"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Populates the RetirementState table with the states present in settings.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.retire_user openedx-core-djangoapps-user-api-management-commands-retire-user-module" names="openedx.core.djangoapps.user_api.management.commands.retire_user\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.retire_user module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.retire_user',\ 'module-openedx.core.djangoapps.user_api.management.commands.retire_user',\ '',\ None]"></index>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.retire_user)',\ 'openedx.core.djangoapps.user_api.management.commands.retire_user.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.retire_user Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.retire_user.Command" module="openedx.core.djangoapps.user_api.management.commands.retire_user"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.retire_user.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Manually move a user into the retirement queue, so that they can be
                        picked up by the user retirement pipeline. This should only be done in
                        the case that a user has tried and is unable to delete their account
                        via the UI.</paragraph>
                    <paragraph>Most of this code has been lifted from openedx/core/djangoapps/user_api/accounts/views</paragraph>
                    <paragraph>As this is a fairly sensitive operation, we want to make sure that human
                        error is accounted for. In order to make sure that something like a typo
                        during command invocation does not result in the retirement of a
                        different user, you must supply both the username and email address linked
                        to the user account.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.retire_user.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.retire_user.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.retire_user Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.retire_user.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.retire_user"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'append_users_lists()\ (openedx.core.djangoapps.user_api.management.commands.retire_user.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.retire_user.Command.append_users_lists',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.append_users_lists()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.retire_user Command append_users_lists" class="Command" classes="sig sig-object py" fullname="Command.append_users_lists" ids="openedx.core.djangoapps.user_api.management.commands.retire_user.Command.append_users_lists" module="openedx.core.djangoapps.user_api.management.commands.retire_user"><desc_name classes="sig-name descname" xml:space="preserve">append_users_lists</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file_handler</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_model</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Function to extract users list from CSV files.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'check_user_exist()\ (openedx.core.djangoapps.user_api.management.commands.retire_user.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.retire_user.Command.check_user_exist',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.check_user_exist()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.retire_user Command check_user_exist" class="Command" classes="sig sig-object py" fullname="Command.check_user_exist" ids="openedx.core.djangoapps.user_api.management.commands.retire_user.Command.check_user_exist" module="openedx.core.djangoapps.user_api.management.commands.retire_user"><desc_name classes="sig-name descname" xml:space="preserve">check_user_exist</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_model</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">userfile</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">useremail</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Function to check if user exists. This function will execute for userfile
                                or user_name and useremail.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>userfile</literal_strong> – file that have username and email of users to be retired</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user_name</literal_strong> – username of user to be retired</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>useremail</literal_strong> – email of user to be retired</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.retire_user.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.retire_user.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.retire_user Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.retire_user.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.retire_user"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Execute the command.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts openedx-core-djangoapps-user-api-management-commands-sync-hubspot-contacts-module" names="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts\ module">
            <title>openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts',\ 'module-openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts',\ '',\ None]"></index>
            <paragraph>Management command to sync platform users with hubspot
                ./manage.py lms sync_hubspot_contacts
                ./manage.py lms sync_hubspot_contacts –initial-sync-days=7 –batch-size=20</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts)',\ 'openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts Command" class="" classes="sig sig-object py" fullname="Command" ids="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command" module="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Command to create contacts in hubspot for those partner who has enabled hubspot integration.
                        This command is suppose to sync contact with hubspot on daily basis.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.add_arguments" module="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Definition of arguments this command accepts</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command\ method)',\ 'openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.handle" module="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Main command handler</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command\ attribute)',\ 'openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts.Command.help" module="openedx.core.djangoapps.user_api.management.commands.sync_hubspot_contacts"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Command to create contacts in hubspot for those partner who has enabled hubspot integration.\nThis command is suppose to sync contact with hubspot on daily basis.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.management.commands module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.management.commands',\ 'module-openedx.core.djangoapps.user_api.management.commands',\ '',\ None]"></index>
        </section>
    </section>
</document>
