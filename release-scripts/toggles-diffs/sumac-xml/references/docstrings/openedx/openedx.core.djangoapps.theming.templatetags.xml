<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.theming.templatetags.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-theming-templatetags-package" names="openedx.core.djangoapps.theming.templatetags\ package">
        <title>openedx.core.djangoapps.theming.templatetags package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.theming.templatetags.optional_include openedx-core-djangoapps-theming-templatetags-optional-include-module" names="openedx.core.djangoapps.theming.templatetags.optional_include\ module">
            <title>openedx.core.djangoapps.theming.templatetags.optional_include module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.theming.templatetags.optional_include',\ 'module-openedx.core.djangoapps.theming.templatetags.optional_include',\ '',\ None]"></index>
            <paragraph>The functions in this module are based on the contents of
                <reference refuri="https://github.com/django/django/blob/1.8.5/django/template/loader_tags.py">https://github.com/django/django/blob/1.8.5/django/template/loader_tags.py</reference> â€“
                specifically, the do_include function. It has been modified as little as
                possible, in order to match the behavior of the {% include %} template tag,
                except for making it optional.</paragraph>
            <index entries="['single',\ 'OptionalIncludeNode\ (class\ in\ openedx.core.djangoapps.theming.templatetags.optional_include)',\ 'openedx.core.djangoapps.theming.templatetags.optional_include.OptionalIncludeNode',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="OptionalIncludeNode" _toc_parts="openedx.core.djangoapps.theming.templatetags.optional_include OptionalIncludeNode" class="" classes="sig sig-object py" fullname="OptionalIncludeNode" ids="openedx.core.djangoapps.theming.templatetags.optional_include.OptionalIncludeNode" module="openedx.core.djangoapps.theming.templatetags.optional_include"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.optional_include.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">OptionalIncludeNode</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">template</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">extra_context</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">isolated_context</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">IncludeNode</literal></paragraph>
                    <index entries="['single',\ 'render()\ (openedx.core.djangoapps.theming.templatetags.optional_include.OptionalIncludeNode\ method)',\ 'openedx.core.djangoapps.theming.templatetags.optional_include.OptionalIncludeNode.render',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="OptionalIncludeNode.render()" _toc_parts="openedx.core.djangoapps.theming.templatetags.optional_include OptionalIncludeNode render" class="OptionalIncludeNode" classes="sig sig-object py" fullname="OptionalIncludeNode.render" ids="openedx.core.djangoapps.theming.templatetags.optional_include.OptionalIncludeNode.render" module="openedx.core.djangoapps.theming.templatetags.optional_include"><desc_name classes="sig-name descname" xml:space="preserve">render</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Render the specified template and context. Cache the template object
                                in render_context to avoid reparsing and loading when used in a for
                                loop.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'do_include()\ (in\ module\ openedx.core.djangoapps.theming.templatetags.optional_include)',\ 'openedx.core.djangoapps.theming.templatetags.optional_include.do_include',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="do_include()" _toc_parts="openedx.core.djangoapps.theming.templatetags.optional_include do_include" class="" classes="sig sig-object py" fullname="do_include" ids="openedx.core.djangoapps.theming.templatetags.optional_include.do_include" module="openedx.core.djangoapps.theming.templatetags.optional_include"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.optional_include.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">do_include</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Loads a template and renders it with the current context, if it exists.
                        You can pass additional context using keyword arguments.</paragraph>
                    <paragraph>Example:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">{% optional_include "foo/some_include" %}
{% optional_include "foo/some_include" with bar="BAZZ!" baz="BING!" %}</literal_block>
                    <paragraph>Use the <literal>only</literal> argument to exclude the current context when rendering
                        the included template:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">{% optional_include "foo/some_include" only %}
{% optional_include "foo/some_include" with bar="1" only %}</literal_block>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.theming.templatetags.theme_pipeline openedx-core-djangoapps-theming-templatetags-theme-pipeline-module" names="openedx.core.djangoapps.theming.templatetags.theme_pipeline\ module">
            <title>openedx.core.djangoapps.theming.templatetags.theme_pipeline module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.theming.templatetags.theme_pipeline',\ 'module-openedx.core.djangoapps.theming.templatetags.theme_pipeline',\ '',\ None]"></index>
            <paragraph>Theme aware pipeline template tags.</paragraph>
            <index entries="['single',\ 'ThemeJavascriptNode\ (class\ in\ openedx.core.djangoapps.theming.templatetags.theme_pipeline)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeJavascriptNode',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ThemeJavascriptNode" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline ThemeJavascriptNode" class="" classes="sig sig-object py" fullname="ThemeJavascriptNode" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeJavascriptNode" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.theme_pipeline.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ThemeJavascriptNode</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">JavascriptNode</literal></paragraph>
                    <paragraph>Overrides JavascriptNode from django pipeline so that js files are served based on the applied theme.</paragraph>
                    <index entries="['single',\ 'render_js()\ (openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeJavascriptNode\ method)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeJavascriptNode.render_js',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ThemeJavascriptNode.render_js()" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline ThemeJavascriptNode render_js" class="ThemeJavascriptNode" classes="sig sig-object py" fullname="ThemeJavascriptNode.render_js" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeJavascriptNode.render_js" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_name classes="sig-name descname" xml:space="preserve">render_js</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">package</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override render_js from django-pipline so that js file urls are based on the applied theme</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ThemeStylesheetNode\ (class\ in\ openedx.core.djangoapps.theming.templatetags.theme_pipeline)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeStylesheetNode',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ThemeStylesheetNode" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline ThemeStylesheetNode" class="" classes="sig sig-object py" fullname="ThemeStylesheetNode" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeStylesheetNode" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.theme_pipeline.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ThemeStylesheetNode</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">StylesheetNode</literal></paragraph>
                    <paragraph>Overrides StyleSheetNode from django pipeline so that stylesheets are served based on the applied theme.</paragraph>
                    <index entries="['single',\ 'render_css()\ (openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeStylesheetNode\ method)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeStylesheetNode.render_css',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ThemeStylesheetNode.render_css()" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline ThemeStylesheetNode render_css" class="ThemeStylesheetNode" classes="sig sig-object py" fullname="ThemeStylesheetNode.render_css" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.ThemeStylesheetNode.render_css" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_name classes="sig-name descname" xml:space="preserve">render_css</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">package</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override render_css from django-pipline so that stylesheets urls are based on the applied theme</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'javascript()\ (in\ module\ openedx.core.djangoapps.theming.templatetags.theme_pipeline)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.javascript',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="javascript()" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline javascript" class="" classes="sig sig-object py" fullname="javascript" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.javascript" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.theme_pipeline.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">javascript</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Template tag to serve javascript from django-pipeline. This definition uses the theming aware ThemeJavascriptNode.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'stylesheet()\ (in\ module\ openedx.core.djangoapps.theming.templatetags.theme_pipeline)',\ 'openedx.core.djangoapps.theming.templatetags.theme_pipeline.stylesheet',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="stylesheet()" _toc_parts="openedx.core.djangoapps.theming.templatetags.theme_pipeline stylesheet" class="" classes="sig sig-object py" fullname="stylesheet" ids="openedx.core.djangoapps.theming.templatetags.theme_pipeline.stylesheet" module="openedx.core.djangoapps.theming.templatetags.theme_pipeline"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.theming.templatetags.theme_pipeline.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">stylesheet</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Template tag to serve stylesheets from django-pipeline. This definition uses the theming aware ThemeStyleSheetNode.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.theming.templatetags module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.theming.templatetags',\ 'module-openedx.core.djangoapps.theming.templatetags',\ '',\ None]"></index>
        </section>
    </section>
</document>
