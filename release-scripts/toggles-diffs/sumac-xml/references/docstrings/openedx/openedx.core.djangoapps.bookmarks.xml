<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.bookmarks.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-bookmarks-package" names="openedx.core.djangoapps.bookmarks\ package">
        <title>openedx.core.djangoapps.bookmarks package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings">openedx.core.djangoapps.bookmarks.settings package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.bookmarks.settings.common" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#module-openedx.core.djangoapps.bookmarks.settings.common">openedx.core.djangoapps.bookmarks.settings.common module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.bookmarks.settings.common.plugin_settings" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#openedx.core.djangoapps.bookmarks.settings.common.plugin_settings"><literal>plugin_settings()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.bookmarks.settings.production" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#module-openedx.core.djangoapps.bookmarks.settings.production">openedx.core.djangoapps.bookmarks.settings.production module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.bookmarks.settings.production.plugin_settings" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#openedx.core.djangoapps.bookmarks.settings.production.plugin_settings"><literal>plugin_settings()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.bookmarks.settings" internal="True" refuri="openedx.core.djangoapps.bookmarks.settings#module-openedx.core.djangoapps.bookmarks.settings">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.api openedx-core-djangoapps-bookmarks-api-module" names="openedx.core.djangoapps.bookmarks.api\ module">
            <title>openedx.core.djangoapps.bookmarks.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.api',\ 'module-openedx.core.djangoapps.bookmarks.api',\ '',\ None]"></index>
            <paragraph>Bookmarks Python public API.</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.api_impl openedx-core-djangoapps-bookmarks-api-impl-module" names="openedx.core.djangoapps.bookmarks.api_impl\ module">
            <title>openedx.core.djangoapps.bookmarks.api_impl module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.api_impl',\ 'module-openedx.core.djangoapps.bookmarks.api_impl',\ '',\ None]"></index>
            <paragraph>Bookmarks Python API.</paragraph>
            <index entries="['single',\ 'BookmarksLimitReachedError',\ 'openedx.core.djangoapps.bookmarks.api_impl.BookmarksLimitReachedError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="BookmarksLimitReachedError" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl BookmarksLimitReachedError" class="" classes="sig sig-object py" fullname="BookmarksLimitReachedError" ids="openedx.core.djangoapps.bookmarks.api_impl.BookmarksLimitReachedError" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksLimitReachedError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>if try to create new bookmark when max limit of bookmarks already reached</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'can_create_more()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.can_create_more',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="can_create_more()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl can_create_more" class="" classes="sig sig-object py" fullname="can_create_more" ids="openedx.core.djangoapps.bookmarks.api_impl.can_create_more" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">can_create_more</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Determine if a new Bookmark can be created for the course
                        based on limit defined in django.conf.settings.MAX_BOOKMARKS_PER_COURSE</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>data</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – The data to create the object with.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Boolean</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_bookmark()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.create_bookmark',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_bookmark()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl create_bookmark" class="" classes="sig sig-object py" fullname="create_bookmark" ids="openedx.core.djangoapps.bookmarks.api_impl.create_bookmark" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_bookmark</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create a bookmark.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user of the bookmark.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – The usage_key of the bookmark.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Dict.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>ItemNotFoundError</literal_strong> – If no block exists for the usage_key.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" refid="openedx.core.djangoapps.bookmarks.api_impl.BookmarksLimitReachedError" reftitle="openedx.core.djangoapps.bookmarks.api_impl.BookmarksLimitReachedError"><literal_strong>BookmarksLimitReachedError</literal_strong></reference> – if try to create new bookmark when max limit of bookmarks already reached</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'delete_bookmark()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.delete_bookmark',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_bookmark()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl delete_bookmark" class="" classes="sig sig-object py" fullname="delete_bookmark" ids="openedx.core.djangoapps.bookmarks.api_impl.delete_bookmark" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_bookmark</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Delete a bookmark.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user of the bookmark.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – The usage_key of the bookmark.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Dict.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.content.learning_sequences.data.ObjectDoesNotExist" refuri="openedx.core.djangoapps.content.learning_sequences#openedx.core.djangoapps.content.learning_sequences.data.ObjectDoesNotExist"><literal_strong>ObjectDoesNotExist</literal_strong></reference> – If a bookmark with the parameters does not exist.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'delete_bookmarks()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.delete_bookmarks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_bookmarks()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl delete_bookmarks" class="" classes="sig sig-object py" fullname="delete_bookmarks" ids="openedx.core.djangoapps.bookmarks.api_impl.delete_bookmarks" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_bookmarks</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Delete all bookmarks for usage_key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – The usage_key of the bookmarks.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_bookmark()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.get_bookmark',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_bookmark()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl get_bookmark" class="" classes="sig sig-object py" fullname="get_bookmark" ids="openedx.core.djangoapps.bookmarks.api_impl.get_bookmark" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_bookmark</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return data for a bookmark.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user of the bookmark.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – The usage_key of the bookmark.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>fields</literal_strong> (<literal_emphasis>list</literal_emphasis>) – List of field names the data should contain (optional).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Dict.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.content.learning_sequences.data.ObjectDoesNotExist" refuri="openedx.core.djangoapps.content.learning_sequences#openedx.core.djangoapps.content.learning_sequences.data.ObjectDoesNotExist"><literal_strong>ObjectDoesNotExist</literal_strong></reference> – If a bookmark with the parameters does not exist.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_bookmarks()\ (in\ module\ openedx.core.djangoapps.bookmarks.api_impl)',\ 'openedx.core.djangoapps.bookmarks.api_impl.get_bookmarks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_bookmarks()" _toc_parts="openedx.core.djangoapps.bookmarks.api_impl get_bookmarks" class="" classes="sig sig-object py" fullname="get_bookmarks" ids="openedx.core.djangoapps.bookmarks.api_impl.get_bookmarks" module="openedx.core.djangoapps.bookmarks.api_impl"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.api_impl.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_bookmarks</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">serialized</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return data for bookmarks of a user.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user of the bookmarks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The course_key of the bookmarks (optional).</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>fields</literal_strong> (<literal_emphasis>list</literal_emphasis>) – List of field names the data should contain (optional).
                                            N/A if serialized is False.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>serialized</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether to return a queryset or a serialized list of dicts.
                                            Default is True.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>List of dicts if serialized is True else queryset.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.apps openedx-core-djangoapps-bookmarks-apps-module" names="openedx.core.djangoapps.bookmarks.apps\ module">
            <title>openedx.core.djangoapps.bookmarks.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.apps',\ 'module-openedx.core.djangoapps.bookmarks.apps',\ '',\ None]"></index>
            <paragraph>Configuration for bookmarks Django app</paragraph>
            <index entries="['single',\ 'BookmarksConfig\ (class\ in\ openedx.core.djangoapps.bookmarks.apps)',\ 'openedx.core.djangoapps.bookmarks.apps.BookmarksConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksConfig" _toc_parts="openedx.core.djangoapps.bookmarks.apps BookmarksConfig" class="" classes="sig sig-object py" fullname="BookmarksConfig" ids="openedx.core.djangoapps.bookmarks.apps.BookmarksConfig" module="openedx.core.djangoapps.bookmarks.apps"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>Configuration class for bookmarks Django app</paragraph>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.bookmarks.apps.BookmarksConfig\ attribute)',\ 'openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksConfig.name" _toc_parts="openedx.core.djangoapps.bookmarks.apps BookmarksConfig name" class="BookmarksConfig" classes="sig sig-object py" fullname="BookmarksConfig.name" ids="openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.name" module="openedx.core.djangoapps.bookmarks.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.bookmarks'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'plugin_app\ (openedx.core.djangoapps.bookmarks.apps.BookmarksConfig\ attribute)',\ 'openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.plugin_app',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksConfig.plugin_app" _toc_parts="openedx.core.djangoapps.bookmarks.apps BookmarksConfig plugin_app" class="BookmarksConfig" classes="sig sig-object py" fullname="BookmarksConfig.plugin_app" ids="openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.plugin_app" module="openedx.core.djangoapps.bookmarks.apps"><desc_name classes="sig-name descname" xml:space="preserve">plugin_app</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'settings_config': {'lms.djangoapp': {'common': {'relative_path': 'settings.common'}, 'production': {'relative_path': 'settings.production'}}}, 'url_config': {'lms.djangoapp': {'app_name': 'openedx.core.djangoapps.bookmarks', 'namespace': '', 'regex': '^api/bookmarks/', 'relative_path': 'urls'}}}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (openedx.core.djangoapps.bookmarks.apps.BookmarksConfig\ method)',\ 'openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksConfig.ready()" _toc_parts="openedx.core.djangoapps.bookmarks.apps BookmarksConfig ready" class="BookmarksConfig" classes="sig sig-object py" fullname="BookmarksConfig.ready" ids="openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.ready" module="openedx.core.djangoapps.bookmarks.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override this method in subclasses to run code when Django starts.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verbose_name\ (openedx.core.djangoapps.bookmarks.apps.BookmarksConfig\ attribute)',\ 'openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.verbose_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksConfig.verbose_name" _toc_parts="openedx.core.djangoapps.bookmarks.apps BookmarksConfig verbose_name" class="BookmarksConfig" classes="sig sig-object py" fullname="BookmarksConfig.verbose_name" ids="openedx.core.djangoapps.bookmarks.apps.BookmarksConfig.verbose_name" module="openedx.core.djangoapps.bookmarks.apps"><desc_name classes="sig-name descname" xml:space="preserve">verbose_name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Bookmarks'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.models openedx-core-djangoapps-bookmarks-models-module" names="openedx.core.djangoapps.bookmarks.models\ module">
            <title>openedx.core.djangoapps.bookmarks.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.models',\ 'module-openedx.core.djangoapps.bookmarks.models',\ '',\ None]"></index>
            <paragraph>Models for Bookmarks.</paragraph>
            <index entries="['single',\ 'Bookmark\ (class\ in\ openedx.core.djangoapps.bookmarks.models)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Bookmark" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark" class="" classes="sig sig-object py" fullname="Bookmark" ids="openedx.core.djangoapps.bookmarks.models.Bookmark" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Bookmark</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">TimeStampedModel</literal></paragraph>
                    <paragraph>Bookmarks model.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'Bookmark.DoesNotExist',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="Bookmark.DoesNotExist" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark DoesNotExist" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.DoesNotExist" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.DoesNotExist" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'Bookmark.MultipleObjectsReturned',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="Bookmark.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark MultipleObjectsReturned" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.MultipleObjectsReturned" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.MultipleObjectsReturned" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_key\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.course_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.course_key" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark course_key" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.course_key" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.course_key" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">course_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ class\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.create()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark create" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.create" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.create" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a Bookmark object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>data</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – The data to create the object with.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>A Bookmark object.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>ItemNotFoundError</literal_strong> – If no block exists for the usage_key.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.created',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.created" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark created" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.created" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">created</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'display_name\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ property)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.display_name',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="Bookmark.display_name" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark display_name" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.display_name" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.display_name" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">display_name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return the display_name from self.xblock_cache.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>String.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_created()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.get_next_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.get_next_by_created()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark get_next_by_created" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.get_next_by_created" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.get_next_by_created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_modified()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.get_next_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.get_next_by_modified()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark get_next_by_modified" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.get_next_by_modified" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.get_next_by_modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_path()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ static\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.get_path',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.get_path()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark get_path" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.get_path" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.get_path" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_path</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns data for the path to the block in the course graph.</paragraph>
                            <paragraph>Note: In case of multiple paths to the block from the course
                                root, this function returns a path arbitrarily but consistently,
                                depending on the modulestore. In the future, we may want to
                                extend it to check which of the paths, the user has access to
                                and return its data.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>block</literal_strong> (<literal_emphasis>XBlock</literal_emphasis>) – The block whose path is required.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>list of PathItems</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_created()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.get_previous_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.get_previous_by_created()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark get_previous_by_created" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.get_previous_by_created" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.get_previous_by_created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_modified()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.get_previous_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.get_previous_by_modified()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark get_previous_by_modified" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.get_previous_by_modified" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.get_previous_by_modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.id" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark id" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.id" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.id" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'modified\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.modified',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.modified" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark modified" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.modified" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">modified</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.objects" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark objects" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.objects" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.objects" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'path\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ property)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.path',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="Bookmark.path" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark path" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.path" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.path" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">path</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return the path to the bookmark’s block after checking self.xblock_cache.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>List of dicts.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'resource_id\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ property)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.resource_id',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="Bookmark.resource_id" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark resource_id" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.resource_id" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.resource_id" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">resource_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>{username,usage_id}.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>Return the resource id</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'updated_path()\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ static\ method)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.updated_path',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Bookmark.updated_path()" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark updated_path" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.updated_path" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.updated_path" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">updated_path</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_cache</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the update-to-date path.</paragraph>
                            <paragraph>xblock_cache.paths is the list of all possible paths to a block
                                constructed by doing a DFS of the tree. However, in case of DAGS,
                                which section jump_to_id() takes the user to depends on the
                                modulestore. If xblock_cache.paths has only one item, we can
                                just use it. Otherwise, we use path_to_location() to get the path
                                jump_to_id() will take the user to.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'usage_key\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.usage_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.usage_key" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark usage_key" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.usage_key" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.usage_key" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">usage_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'user\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.user',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.user" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark user" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.user" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.user" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">user</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'user_id\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.user_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.user_id" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark user_id" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.user_id" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.user_id" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">user_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'xblock_cache\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.xblock_cache',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.xblock_cache" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark xblock_cache" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.xblock_cache" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.xblock_cache" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">xblock_cache</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'xblock_cache_id\ (openedx.core.djangoapps.bookmarks.models.Bookmark\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.Bookmark.xblock_cache_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Bookmark.xblock_cache_id" _toc_parts="openedx.core.djangoapps.bookmarks.models Bookmark xblock_cache_id" class="Bookmark" classes="sig sig-object py" fullname="Bookmark.xblock_cache_id" ids="openedx.core.djangoapps.bookmarks.models.Bookmark.xblock_cache_id" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">xblock_cache_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'XBlockCache\ (class\ in\ openedx.core.djangoapps.bookmarks.models)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="XBlockCache" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache" class="" classes="sig sig-object py" fullname="XBlockCache" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">XBlockCache</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">TimeStampedModel</literal></paragraph>
                    <paragraph>XBlockCache model to store info about xblocks.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'XBlockCache.DoesNotExist',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="XBlockCache.DoesNotExist" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache DoesNotExist" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.DoesNotExist" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.DoesNotExist" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'XBlockCache.MultipleObjectsReturned',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="XBlockCache.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache MultipleObjectsReturned" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.MultipleObjectsReturned" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.MultipleObjectsReturned" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'bookmark_set\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.bookmark_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.bookmark_set" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache bookmark_set" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.bookmark_set" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.bookmark_set" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">bookmark_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_key\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.course_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.course_key" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache course_key" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.course_key" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.course_key" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">course_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ class\ method)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XBlockCache.create()" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache create" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.create" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.create" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create an XBlockCache object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>data</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – The data to create the object with.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>An XBlockCache object.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.created',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.created" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache created" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.created" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">created</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'display_name\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.display_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.display_name" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache display_name" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.display_name" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.display_name" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">display_name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_created()\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ method)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.get_next_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XBlockCache.get_next_by_created()" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache get_next_by_created" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.get_next_by_created" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.get_next_by_created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_modified()\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ method)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.get_next_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XBlockCache.get_next_by_modified()" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache get_next_by_modified" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.get_next_by_modified" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.get_next_by_modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_created()\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ method)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.get_previous_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XBlockCache.get_previous_by_created()" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache get_previous_by_created" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.get_previous_by_created" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.get_previous_by_created" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_modified()\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ method)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.get_previous_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XBlockCache.get_previous_by_modified()" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache get_previous_by_modified" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.get_previous_by_modified" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.get_previous_by_modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.id" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache id" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.id" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.id" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'modified\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.modified',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.modified" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache modified" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.modified" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.modified" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">modified</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.objects" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache objects" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.objects" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.objects" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'paths\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ property)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.paths',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="XBlockCache.paths" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache paths" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.paths" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.paths" module="openedx.core.djangoapps.bookmarks.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">paths</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return paths.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>list of list of PathItems.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'usage_key\ (openedx.core.djangoapps.bookmarks.models.XBlockCache\ attribute)',\ 'openedx.core.djangoapps.bookmarks.models.XBlockCache.usage_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XBlockCache.usage_key" _toc_parts="openedx.core.djangoapps.bookmarks.models XBlockCache usage_key" class="XBlockCache" classes="sig sig-object py" fullname="XBlockCache.usage_key" ids="openedx.core.djangoapps.bookmarks.models.XBlockCache.usage_key" module="openedx.core.djangoapps.bookmarks.models"><desc_name classes="sig-name descname" xml:space="preserve">usage_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'parse_path_data()\ (in\ module\ openedx.core.djangoapps.bookmarks.models)',\ 'openedx.core.djangoapps.bookmarks.models.parse_path_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="parse_path_data()" _toc_parts="openedx.core.djangoapps.bookmarks.models parse_path_data" class="" classes="sig sig-object py" fullname="parse_path_data" ids="openedx.core.djangoapps.bookmarks.models.parse_path_data" module="openedx.core.djangoapps.bookmarks.models"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">parse_path_data</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">path_data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a list of PathItems constructed from parsing path_data.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'prepare_path_for_serialization()\ (in\ module\ openedx.core.djangoapps.bookmarks.models)',\ 'openedx.core.djangoapps.bookmarks.models.prepare_path_for_serialization',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="prepare_path_for_serialization()" _toc_parts="openedx.core.djangoapps.bookmarks.models prepare_path_for_serialization" class="" classes="sig sig-object py" fullname="prepare_path_for_serialization" ids="openedx.core.djangoapps.bookmarks.models.prepare_path_for_serialization" module="openedx.core.djangoapps.bookmarks.models"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">prepare_path_for_serialization</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the data from a list of PathItems ready for serialization to json.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.serializers openedx-core-djangoapps-bookmarks-serializers-module" names="openedx.core.djangoapps.bookmarks.serializers\ module">
            <title>openedx.core.djangoapps.bookmarks.serializers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.serializers',\ 'module-openedx.core.djangoapps.bookmarks.serializers',\ '',\ None]"></index>
            <paragraph>Serializers for Bookmarks.</paragraph>
            <index entries="['single',\ 'BookmarkSerializer\ (class\ in\ openedx.core.djangoapps.bookmarks.serializers)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarkSerializer" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer" class="" classes="sig sig-object py" fullname="BookmarkSerializer" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer" module="openedx.core.djangoapps.bookmarks.serializers"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarkSerializer</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ModelSerializer</literal></paragraph>
                    <paragraph>Serializer for the Bookmark model.</paragraph>
                    <index entries="['single',\ 'BookmarkSerializer.Meta\ (class\ in\ openedx.core.djangoapps.bookmarks.serializers)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="BookmarkSerializer.Meta" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer Meta" class="BookmarkSerializer" classes="sig sig-object py" fullname="BookmarkSerializer.Meta" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta" module="openedx.core.djangoapps.bookmarks.serializers"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">Meta</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <paragraph>Serializer metadata.</paragraph>
                            <index entries="['single',\ 'fields\ (openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta\ attribute)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta.fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="BookmarkSerializer.Meta.fields" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer Meta fields" class="BookmarkSerializer.Meta" classes="sig sig-object py" fullname="BookmarkSerializer.Meta.fields" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta.fields" module="openedx.core.djangoapps.bookmarks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>('id', 'course_id', 'usage_id', 'block_type', 'display_name', 'path', 'created')</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'model\ (openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta\ attribute)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta.model',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="BookmarkSerializer.Meta.model" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer Meta model" class="BookmarkSerializer.Meta" classes="sig sig-object py" fullname="BookmarkSerializer.Meta.model" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.Meta.model" module="openedx.core.djangoapps.bookmarks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">model</desc_name></desc_signature>
                                <desc_content>
                                    <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.bookmarks.models.Bookmark" reftitle="openedx.core.djangoapps.bookmarks.models.Bookmark"><literal classes="xref py py-class">Bookmark</literal></reference></paragraph>
                                </desc_content>
                            </desc>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_id()\ (openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer\ method)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.get_id',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarkSerializer.get_id()" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer get_id" class="BookmarkSerializer" classes="sig sig-object py" fullname="BookmarkSerializer.get_id" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.get_id" module="openedx.core.djangoapps.bookmarks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">get_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">bookmark</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the REST resource id: {username,usage_id}.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_path()\ (openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer\ method)',\ 'openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.get_path',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarkSerializer.get_path()" _toc_parts="openedx.core.djangoapps.bookmarks.serializers BookmarkSerializer get_path" class="BookmarkSerializer" classes="sig sig-object py" fullname="BookmarkSerializer.get_path" ids="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer.get_path" module="openedx.core.djangoapps.bookmarks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">get_path</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">bookmark</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Serialize and return the path data of the bookmark.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.services openedx-core-djangoapps-bookmarks-services-module" names="openedx.core.djangoapps.bookmarks.services\ module">
            <title>openedx.core.djangoapps.bookmarks.services module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.services',\ 'module-openedx.core.djangoapps.bookmarks.services',\ '',\ None]"></index>
            <paragraph>Bookmarks service.</paragraph>
            <index entries="['single',\ 'BookmarksService\ (class\ in\ openedx.core.djangoapps.bookmarks.services)',\ 'openedx.core.djangoapps.bookmarks.services.BookmarksService',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksService" _toc_parts="openedx.core.djangoapps.bookmarks.services BookmarksService" class="" classes="sig sig-object py" fullname="BookmarksService" ids="openedx.core.djangoapps.bookmarks.services.BookmarksService" module="openedx.core.djangoapps.bookmarks.services"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.services.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksService</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>A service that provides access to the bookmarks API.</paragraph>
                    <paragraph>When bookmarks() or is_bookmarked() is called for the
                        first time, the service fetches and caches all the bookmarks
                        of the user for the relevant course. So multiple calls to
                        get bookmark status during a request (for, example when
                        rendering courseware and getting bookmarks status for search
                        results) will not cause repeated queries to the database.</paragraph>
                    <index entries="['single',\ 'bookmarks()\ (openedx.core.djangoapps.bookmarks.services.BookmarksService\ method)',\ 'openedx.core.djangoapps.bookmarks.services.BookmarksService.bookmarks',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksService.bookmarks()" _toc_parts="openedx.core.djangoapps.bookmarks.services BookmarksService bookmarks" class="BookmarksService" classes="sig sig-object py" fullname="BookmarksService.bookmarks" ids="openedx.core.djangoapps.bookmarks.services.BookmarksService.bookmarks" module="openedx.core.djangoapps.bookmarks.services"><desc_name classes="sig-name descname" xml:space="preserve">bookmarks</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a list of bookmarks for the course for the current user.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>course_key</literal_strong> – CourseKey of the course for which to retrieve the user’s bookmarks for.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>list of dict</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_bookmarked()\ (openedx.core.djangoapps.bookmarks.services.BookmarksService\ method)',\ 'openedx.core.djangoapps.bookmarks.services.BookmarksService.is_bookmarked',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksService.is_bookmarked()" _toc_parts="openedx.core.djangoapps.bookmarks.services BookmarksService is_bookmarked" class="BookmarksService" classes="sig sig-object py" fullname="BookmarksService.is_bookmarked" ids="openedx.core.djangoapps.bookmarks.services.BookmarksService.is_bookmarked" module="openedx.core.djangoapps.bookmarks.services"><desc_name classes="sig-name descname" xml:space="preserve">is_bookmarked</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether the block has been bookmarked by the user.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>usage_key</literal_strong> – UsageKey of the block.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Bool</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set_bookmarked()\ (openedx.core.djangoapps.bookmarks.services.BookmarksService\ method)',\ 'openedx.core.djangoapps.bookmarks.services.BookmarksService.set_bookmarked',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksService.set_bookmarked()" _toc_parts="openedx.core.djangoapps.bookmarks.services BookmarksService set_bookmarked" class="BookmarksService" classes="sig sig-object py" fullname="BookmarksService.set_bookmarked" ids="openedx.core.djangoapps.bookmarks.services.BookmarksService.set_bookmarked" module="openedx.core.djangoapps.bookmarks.services"><desc_name classes="sig-name descname" xml:space="preserve">set_bookmarked</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Adds a bookmark for the block.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>usage_key</literal_strong> – UsageKey of the block.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Bool indicating whether the bookmark was added.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'unset_bookmarked()\ (openedx.core.djangoapps.bookmarks.services.BookmarksService\ method)',\ 'openedx.core.djangoapps.bookmarks.services.BookmarksService.unset_bookmarked',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksService.unset_bookmarked()" _toc_parts="openedx.core.djangoapps.bookmarks.services BookmarksService unset_bookmarked" class="BookmarksService" classes="sig sig-object py" fullname="BookmarksService.unset_bookmarked" ids="openedx.core.djangoapps.bookmarks.services.BookmarksService.unset_bookmarked" module="openedx.core.djangoapps.bookmarks.services"><desc_name classes="sig-name descname" xml:space="preserve">unset_bookmarked</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Removes the bookmark for the block.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>usage_key</literal_strong> – UsageKey of the block.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Bool indicating whether the bookmark was removed.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.signals openedx-core-djangoapps-bookmarks-signals-module" names="openedx.core.djangoapps.bookmarks.signals\ module">
            <title>openedx.core.djangoapps.bookmarks.signals module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.signals',\ 'module-openedx.core.djangoapps.bookmarks.signals',\ '',\ None]"></index>
            <paragraph>Signals for bookmarks.</paragraph>
            <index entries="['single',\ 'trigger_update_xblocks_cache_task()\ (in\ module\ openedx.core.djangoapps.bookmarks.signals)',\ 'openedx.core.djangoapps.bookmarks.signals.trigger_update_xblocks_cache_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="trigger_update_xblocks_cache_task()" _toc_parts="openedx.core.djangoapps.bookmarks.signals trigger_update_xblocks_cache_task" class="" classes="sig sig-object py" fullname="trigger_update_xblocks_cache_task" ids="openedx.core.djangoapps.bookmarks.signals.trigger_update_xblocks_cache_task" module="openedx.core.djangoapps.bookmarks.signals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.signals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">trigger_update_xblocks_cache_task</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Trigger update_xblocks_cache() when course_published signal is fired.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.tasks openedx-core-djangoapps-bookmarks-tasks-module" names="openedx.core.djangoapps.bookmarks.tasks\ module">
            <title>openedx.core.djangoapps.bookmarks.tasks module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.tasks',\ 'module-openedx.core.djangoapps.bookmarks.tasks',\ '',\ None]"></index>
            <paragraph>Tasks for bookmarks.</paragraph>
            <index entries="['single',\ 'paths_equal()\ (in\ module\ openedx.core.djangoapps.bookmarks.tasks)',\ 'openedx.core.djangoapps.bookmarks.tasks.paths_equal',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="paths_equal()" _toc_parts="openedx.core.djangoapps.bookmarks.tasks paths_equal" class="" classes="sig sig-object py" fullname="paths_equal" ids="openedx.core.djangoapps.bookmarks.tasks.paths_equal" module="openedx.core.djangoapps.bookmarks.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">paths_equal</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">paths_1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">paths_2</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if two paths are equivalent.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.urls openedx-core-djangoapps-bookmarks-urls-module" names="openedx.core.djangoapps.bookmarks.urls\ module">
            <title>openedx.core.djangoapps.bookmarks.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.urls',\ 'module-openedx.core.djangoapps.bookmarks.urls',\ '',\ None]"></index>
            <paragraph>URL routes for the bookmarks app.</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks.views openedx-core-djangoapps-bookmarks-views-module" names="openedx.core.djangoapps.bookmarks.views\ module">
            <title>openedx.core.djangoapps.bookmarks.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks.views',\ 'module-openedx.core.djangoapps.bookmarks.views',\ '',\ None]"></index>
            <paragraph>HTTP end-points for the Bookmarks API.</paragraph>
            <paragraph>For more information, see:
                <reference refuri="https://openedx.atlassian.net/wiki/display/TNL/Bookmarks+API">https://openedx.atlassian.net/wiki/display/TNL/Bookmarks+API</reference></paragraph>
            <index entries="['single',\ 'BookmarksDetailView\ (class\ in\ openedx.core.djangoapps.bookmarks.views)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksDetailView" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView" class="" classes="sig sig-object py" fullname="BookmarksDetailView" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView" module="openedx.core.djangoapps.bookmarks.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksDetailView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal>, <reference internal="True" refid="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin" reftitle="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin"><literal classes="xref py py-class">BookmarksViewMixin</literal></reference></paragraph>
                    <paragraph><strong>Use Cases</strong></paragraph>
                    <block_quote>
                        <paragraph>Get or delete a specific bookmark for a user.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example Requests</strong>:</paragraph>
                    <block_quote>
                        <paragraph>GET /api/bookmarks/v1/bookmarks/{username},{usage_id}/?fields=display_name,path</paragraph>
                        <paragraph>DELETE /api/bookmarks/v1/bookmarks/{username},{usage_id}/</paragraph>
                    </block_quote>
                    <paragraph><strong>Response for GET</strong></paragraph>
                    <block_quote>
                        <paragraph>Users can only delete their own bookmarks. If the bookmark_id does not belong
                            to a requesting user’s bookmark a Http404 is returned. Http404 will also be
                            returned if the bookmark does not exist.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>id: String. The identifier string for the bookmark: {user_id},{usage_id}.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>course_id: String. The identifier string of the bookmark’s course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>usage_id: String. The identifier string of the bookmark’s XBlock.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>display_name: (optional) String. Display name of the XBlock.</paragraph>
                            </list_item>
                            <list_item>
                                <definition_list>
                                    <definition_list_item>
                                        <term>path: (optional) List of dicts containing {“usage_id”: &lt;usage-id&gt;, display_name: &lt;display-name&gt;}</term>
                                        <definition>
                                            <paragraph>for the XBlocks from the top of the course tree till the parent of the bookmarked XBlock.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                            <list_item>
                                <paragraph>created: ISO 8601 String. The timestamp of bookmark’s creation.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Response for DELETE</strong></paragraph>
                    <block_quote>
                        <paragraph>Users can only delete their own bookmarks.</paragraph>
                        <paragraph>A successful delete returns a 204 and no content.</paragraph>
                        <paragraph>Users can only delete their own bookmarks. If the bookmark_id does not belong
                            to a requesting user’s bookmark a 404 is returned. 404 will also be returned
                            if the bookmark does not exist.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksDetailView.authentication_classes" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView authentication_classes" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.authentication_classes" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.authentication_classes" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'openedx.core.lib.api.authentication.BearerAuthentication'&gt;, &lt;class 'rest_framework.authentication.SessionAuthentication'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete()\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksDetailView.delete()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView delete" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.delete" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.delete" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>DELETE /api/bookmarks/v1/bookmarks/{username},{usage_id}</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksDetailView.get()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView get" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.get" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.get" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get a specific bookmark for a user.</paragraph>
                            <paragraph><strong>Example Requests</strong></paragraph>
                            <paragraph>GET /api/bookmarks/v1/bookmarks/{username},{usage_id}?fields=display_name,path</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_usage_key_or_error_response()\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.get_usage_key_or_error_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksDetailView.get_usage_key_or_error_response()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView get_usage_key_or_error_response" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.get_usage_key_or_error_response" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.get_usage_key_or_error_response" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get_usage_key_or_error_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create and return usage_key or error Response.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>usage_id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The id of required block.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksDetailView.permission_classes" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView permission_classes" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.permission_classes" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.permission_classes" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'edx_rest_framework_extensions.permissions.IsUserInUrl'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (openedx.core.djangoapps.bookmarks.views.BookmarksDetailView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksDetailView.serializer_class" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksDetailView serializer_class" class="BookmarksDetailView" classes="sig sig-object py" fullname="BookmarksDetailView.serializer_class" ids="openedx.core.djangoapps.bookmarks.views.BookmarksDetailView.serializer_class" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer" reftitle="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer"><literal classes="xref py py-class">BookmarkSerializer</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BookmarksListView\ (class\ in\ openedx.core.djangoapps.bookmarks.views)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksListView" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView" class="" classes="sig sig-object py" fullname="BookmarksListView" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView" module="openedx.core.djangoapps.bookmarks.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksListView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ListCreateAPIView</literal>, <reference internal="True" refid="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin" reftitle="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin"><literal classes="xref py py-class">BookmarksViewMixin</literal></reference></paragraph>
                    <paragraph>REST endpoints for lists of bookmarks.</paragraph>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksListView.authentication_classes" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView authentication_classes" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.authentication_classes" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.authentication_classes" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'openedx.core.lib.api.authentication.BearerAuthentication'&gt;, &lt;class 'rest_framework.authentication.SessionAuthentication'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksListView.get()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView get" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.get" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.get" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get a paginated list of bookmarks for a user.</paragraph>
                            <paragraph>The list can be filtered by passing parameter “course_id=&lt;course_id&gt;”
                                to only include bookmarks from a particular course.</paragraph>
                            <paragraph>The bookmarks are always sorted in descending order by creation date.</paragraph>
                            <paragraph>Each page in the list contains 10 bookmarks by default. The page
                                size can be altered by passing parameter “page_size=&lt;page_size&gt;”.</paragraph>
                            <paragraph>To include the optional fields pass the values in “fields” parameter
                                as a comma separated list. Possible values are:</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>“display_name”</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>“path”</paragraph>
                                </list_item>
                            </bullet_list>
                            <paragraph><strong>Example Requests</strong></paragraph>
                            <paragraph>GET /api/bookmarks/v1/bookmarks/?course_id={course_id1}&amp;fields=display_name,path</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_queryset()\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.get_queryset',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksListView.get_queryset()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView get_queryset" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.get_queryset" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.get_queryset" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get_queryset</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns queryset of bookmarks for GET requests.</paragraph>
                            <paragraph>The results will only include bookmarks for the request’s user.
                                If the course_id is specified in the request parameters,
                                the queryset will only include bookmarks from that course.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_serializer_context()\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.get_serializer_context',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksListView.get_serializer_context()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView get_serializer_context" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.get_serializer_context" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.get_serializer_context" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get_serializer_context</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the context for the serializer.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'paginate_queryset()\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.paginate_queryset',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksListView.paginate_queryset()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView paginate_queryset" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.paginate_queryset" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.paginate_queryset" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">paginate_queryset</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">queryset</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override GenericAPIView.paginate_queryset for the purpose of eventing</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'pagination_class\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.pagination_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksListView.pagination_class" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView pagination_class" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.pagination_class" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.pagination_class" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">pagination_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.bookmarks.views.BookmarksPagination" reftitle="openedx.core.djangoapps.bookmarks.views.BookmarksPagination"><literal classes="xref py py-class">BookmarksPagination</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksListView.permission_classes" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView permission_classes" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.permission_classes" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.permission_classes" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;,)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksListView.post()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView post" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.post" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.post" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">unused_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">unused_kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a new bookmark for a user.</paragraph>
                            <paragraph>The POST request only needs to contain one parameter “usage_id”.</paragraph>
                            <paragraph>Http400 is returned if the format of the request is not correct,
                                the usage_id is invalid or a block corresponding to the usage_id
                                could not be found.</paragraph>
                            <paragraph><strong>Example Requests</strong></paragraph>
                            <paragraph>POST /api/bookmarks/v1/bookmarks/
                                Request data: {“usage_id”: &lt;usage-id&gt;}</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (openedx.core.djangoapps.bookmarks.views.BookmarksListView\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksListView.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksListView.serializer_class" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksListView serializer_class" class="BookmarksListView" classes="sig sig-object py" fullname="BookmarksListView.serializer_class" ids="openedx.core.djangoapps.bookmarks.views.BookmarksListView.serializer_class" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer" reftitle="openedx.core.djangoapps.bookmarks.serializers.BookmarkSerializer"><literal classes="xref py py-class">BookmarkSerializer</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BookmarksPagination\ (class\ in\ openedx.core.djangoapps.bookmarks.views)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksPagination',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksPagination" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksPagination" class="" classes="sig sig-object py" fullname="BookmarksPagination" ids="openedx.core.djangoapps.bookmarks.views.BookmarksPagination" module="openedx.core.djangoapps.bookmarks.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksPagination</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">DefaultPagination</literal></paragraph>
                    <paragraph>Paginator for bookmarks API.</paragraph>
                    <index entries="['single',\ 'get_paginated_response()\ (openedx.core.djangoapps.bookmarks.views.BookmarksPagination\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksPagination.get_paginated_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksPagination.get_paginated_response()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksPagination get_paginated_response" class="BookmarksPagination" classes="sig sig-object py" fullname="BookmarksPagination.get_paginated_response" ids="openedx.core.djangoapps.bookmarks.views.BookmarksPagination.get_paginated_response" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">get_paginated_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Annotate the response with pagination information.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'max_page_size\ (openedx.core.djangoapps.bookmarks.views.BookmarksPagination\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksPagination.max_page_size',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksPagination.max_page_size" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksPagination max_page_size" class="BookmarksPagination" classes="sig sig-object py" fullname="BookmarksPagination.max_page_size" ids="openedx.core.djangoapps.bookmarks.views.BookmarksPagination.max_page_size" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">max_page_size</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>100</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'page_size\ (openedx.core.djangoapps.bookmarks.views.BookmarksPagination\ attribute)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksPagination.page_size',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BookmarksPagination.page_size" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksPagination page_size" class="BookmarksPagination" classes="sig sig-object py" fullname="BookmarksPagination.page_size" ids="openedx.core.djangoapps.bookmarks.views.BookmarksPagination.page_size" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">page_size</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>10</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BookmarksViewMixin\ (class\ in\ openedx.core.djangoapps.bookmarks.views)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BookmarksViewMixin" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksViewMixin" class="" classes="sig sig-object py" fullname="BookmarksViewMixin" ids="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin" module="openedx.core.djangoapps.bookmarks.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BookmarksViewMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Shared code for bookmarks views.</paragraph>
                    <index entries="['single',\ 'error_response()\ (openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin.error_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksViewMixin.error_response()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksViewMixin error_response" class="BookmarksViewMixin" classes="sig sig-object py" fullname="BookmarksViewMixin.error_response" ids="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin.error_response" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">error_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">developer_message</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_message</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_status</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">400</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create and return a Response.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>message</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The message to put in the developer_message
                                                    and user_message fields.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>status</literal_strong> – The status of the response. Default is HTTP_400_BAD_REQUEST.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'fields_to_return()\ (openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin\ method)',\ 'openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin.fields_to_return',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BookmarksViewMixin.fields_to_return()" _toc_parts="openedx.core.djangoapps.bookmarks.views BookmarksViewMixin fields_to_return" class="BookmarksViewMixin" classes="sig sig-object py" fullname="BookmarksViewMixin.fields_to_return" ids="openedx.core.djangoapps.bookmarks.views.BookmarksViewMixin.fields_to_return" module="openedx.core.djangoapps.bookmarks.views"><desc_name classes="sig-name descname" xml:space="preserve">fields_to_return</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">params</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns names of fields which should be included in the response.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>params</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – The request parameters.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.bookmarks module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.bookmarks',\ 'module-openedx.core.djangoapps.bookmarks',\ '',\ None]"></index>
            <paragraph># lint-amnesty, pylint: disable=django-not-configured
                # lint-amnesty, pylint: disable=django-not-configured
                Bookmarks module.</paragraph>
            <index entries="['single',\ 'PathItem\ (class\ in\ openedx.core.djangoapps.bookmarks)',\ 'openedx.core.djangoapps.bookmarks.PathItem',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="PathItem" _toc_parts="openedx.core.djangoapps.bookmarks PathItem" class="" classes="sig sig-object py" fullname="PathItem" ids="openedx.core.djangoapps.bookmarks.PathItem" module="openedx.core.djangoapps.bookmarks"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.bookmarks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PathItem</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">display_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">tuple</literal></paragraph>
                    <index entries="['single',\ 'display_name\ (openedx.core.djangoapps.bookmarks.PathItem\ attribute)',\ 'openedx.core.djangoapps.bookmarks.PathItem.display_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PathItem.display_name" _toc_parts="openedx.core.djangoapps.bookmarks PathItem display_name" class="PathItem" classes="sig sig-object py" fullname="PathItem.display_name" ids="openedx.core.djangoapps.bookmarks.PathItem.display_name" module="openedx.core.djangoapps.bookmarks"><desc_name classes="sig-name descname" xml:space="preserve">display_name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Alias for field number 1</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'usage_key\ (openedx.core.djangoapps.bookmarks.PathItem\ attribute)',\ 'openedx.core.djangoapps.bookmarks.PathItem.usage_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PathItem.usage_key" _toc_parts="openedx.core.djangoapps.bookmarks PathItem usage_key" class="PathItem" classes="sig sig-object py" fullname="PathItem.usage_key" ids="openedx.core.djangoapps.bookmarks.PathItem.usage_key" module="openedx.core.djangoapps.bookmarks"><desc_name classes="sig-name descname" xml:space="preserve">usage_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Alias for field number 0</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
