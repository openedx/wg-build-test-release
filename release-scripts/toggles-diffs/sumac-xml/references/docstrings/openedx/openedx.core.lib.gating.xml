<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.lib.gating.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-lib-gating-package" names="openedx.core.lib.gating\ package">
        <title>openedx.core.lib.gating package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.lib.gating.api openedx-core-lib-gating-api-module" names="openedx.core.lib.gating.api\ module">
            <title>openedx.core.lib.gating.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.gating.api',\ 'module-openedx.core.lib.gating.api',\ '',\ None]"></index>
            <paragraph>API for the gating djangoapp</paragraph>
            <index entries="['single',\ 'add_prerequisite()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.add_prerequisite',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_prerequisite()" _toc_parts="openedx.core.lib.gating.api add_prerequisite" class="" classes="sig sig-object py" fullname="add_prerequisite" ids="openedx.core.lib.gating.api.add_prerequisite" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_prerequisite</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prereq_content_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Creates a new Milestone and CourseContentMilestone indicating that
                        the given course content fulfills a prerequisite for gating</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>prereq_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The prerequisite content usage key</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'compute_is_prereq_met()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.compute_is_prereq_met',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="compute_is_prereq_met()" _toc_parts="openedx.core.lib.gating.api compute_is_prereq_met" class="" classes="sig sig-object py" fullname="compute_is_prereq_met" ids="openedx.core.lib.gating.api.compute_is_prereq_met" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">compute_is_prereq_met</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">recalc_on_unmet</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns true if the prequiste has been met for a given milestone.
                        Will recalculate the subsection grade if specified and prereq unmet</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>content_id</literal_strong> (<literal_emphasis>BlockUsageLocator</literal_emphasis>) – BlockUsageLocator for the content</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user_id</literal_strong> – The id of the user</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>recalc_on_unmet</literal_strong> – Recalculate the grade if prereq has not yet been met</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True|False,
                                    prereq_meta_info = { ‘url’: prereq_url|None, ‘display_name’: prereq_name|None}</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>tuple</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'find_gating_milestones()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.find_gating_milestones',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="find_gating_milestones()" _toc_parts="openedx.core.lib.gating.api find_gating_milestones" class="" classes="sig sig-object py" fullname="find_gating_milestones" ids="openedx.core.lib.gating.api.find_gating_milestones" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">find_gating_milestones</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">relationship</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Finds gating milestone dicts related to the given supplied parameters.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The content usage key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>relationship</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The relationship type (e.g. ‘requires’)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – The user dict (e.g. {‘id’: 4})</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of milestone dicts</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>list</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'gating_enabled()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.gating_enabled',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="gating_enabled()" _toc_parts="openedx.core.lib.gating.api gating_enabled" class="" classes="sig sig-object py" fullname="gating_enabled" ids="openedx.core.lib.gating.api.gating_enabled" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">gating_enabled</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Decorator that checks the enable_subsection_gating course flag to
                        see if the subsection gating feature is active for a given course.
                        If not, calls to the decorated function return the specified default value.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>default</literal_strong> (<literal_emphasis>ANY</literal_emphasis>) – The value to return if the enable_subsection_gating course flag is False</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The specified default value if the gating feature is off,
                                    otherwise the result of the decorated function</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>ANY</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_gated_content()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_gated_content',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_gated_content()" _toc_parts="openedx.core.lib.gating.api get_gated_content" class="" classes="sig sig-object py" fullname="get_gated_content" ids="openedx.core.lib.gating.api.get_gated_content" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_gated_content</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_gating_milestone()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_gating_milestone',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_gating_milestone()" _toc_parts="openedx.core.lib.gating.api get_gating_milestone" class="" classes="sig sig-object py" fullname="get_gating_milestone" ids="openedx.core.lib.gating.api.get_gating_milestone" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_gating_milestone</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">relationship</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Gets a single gating milestone dict related to the given supplied parameters.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The content usage key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>relationship</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The relationship type (e.g. ‘requires’)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The gating milestone dict or None</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>dict or None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_prerequisites()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_prerequisites',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_prerequisites()" _toc_parts="openedx.core.lib.gating.api get_prerequisites" class="" classes="sig sig-object py" fullname="get_prerequisites" ids="openedx.core.lib.gating.api.get_prerequisites" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_prerequisites</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Find all the gating milestones associated with a course and the
                        XBlock info associated with those gating milestones.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of dicts containing the milestone and associated XBlock info</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>list</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_required_content()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_required_content',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_required_content()" _toc_parts="openedx.core.lib.gating.api get_required_content" class="" classes="sig sig-object py" fullname="get_required_content" ids="openedx.core.lib.gating.api.get_required_content" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_required_content</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">gated_content_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the prerequisite content usage key, minimum score and minimum completion percentage needed for fulfillment
                        of that prerequisite for the given gated_content_key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>gated_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The gated content usage key</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The prerequisite content usage key, minimum score and minimum completion percentage,
                                    (None, None, None) if the content is not gated</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>tuple</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_subsection_completion_percentage()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_subsection_completion_percentage',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_subsection_completion_percentage()" _toc_parts="openedx.core.lib.gating.api get_subsection_completion_percentage" class="" classes="sig sig-object py" fullname="get_subsection_completion_percentage" ids="openedx.core.lib.gating.api.get_subsection_completion_percentage" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_subsection_completion_percentage</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">subsection_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Computes completion percentage for a subsection in a given course for a user
                        :param subsection_usage_key: key of subsection
                        :param user: The user whose completion percentage needs to be computed</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>User’s completion percentage for given subsection</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_subsection_grade_percentage()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.get_subsection_grade_percentage',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_subsection_grade_percentage()" _toc_parts="openedx.core.lib.gating.api get_subsection_grade_percentage" class="" classes="sig sig-object py" fullname="get_subsection_grade_percentage" ids="openedx.core.lib.gating.api.get_subsection_grade_percentage" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_subsection_grade_percentage</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">subsection_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Computes grade percentage for a subsection in a given course for a user</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>subsection_usage_key</literal_strong> – key of subsection</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – The user whose grade needs to be computed</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>User’s grade percentage for given subsection</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_gate_fulfilled()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.is_gate_fulfilled',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_gate_fulfilled()" _toc_parts="openedx.core.lib.gating.api is_gate_fulfilled" class="" classes="sig sig-object py" fullname="is_gate_fulfilled" ids="openedx.core.lib.gating.api.is_gate_fulfilled" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_gate_fulfilled</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">gating_content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Determines if a prerequisite section specified by gating_content_key
                        has any unfulfilled milestones.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseUsageLocator</literal_emphasis>) – Course locator</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>gating_content_key</literal_strong> (<literal_emphasis>BlockUsageLocator</literal_emphasis>) – The locator for the section content</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user_id</literal_strong> – The id of the user</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Returns True if section has no unfufilled milestones or is not a prerequisite.
                                    Returns False otherwise</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_prerequisite()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.is_prerequisite',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_prerequisite()" _toc_parts="openedx.core.lib.gating.api is_prerequisite" class="" classes="sig sig-object py" fullname="is_prerequisite" ids="openedx.core.lib.gating.api.is_prerequisite" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_prerequisite</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prereq_content_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns True if there is at least one CourseContentMilestone
                        which the given course content fulfills</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>prereq_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The prerequisite content usage key</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if the course content fulfills a CourseContentMilestone, otherwise False</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_prerequisite()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.remove_prerequisite',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_prerequisite()" _toc_parts="openedx.core.lib.gating.api remove_prerequisite" class="" classes="sig sig-object py" fullname="remove_prerequisite" ids="openedx.core.lib.gating.api.remove_prerequisite" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_prerequisite</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prereq_content_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Removes the Milestone and CourseContentMilestones related to the gating
                        prerequisite which the given course content fulfills</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>prereq_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The prerequisite content usage key</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_required_content()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.set_required_content',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_required_content()" _toc_parts="openedx.core.lib.gating.api set_required_content" class="" classes="sig sig-object py" fullname="set_required_content" ids="openedx.core.lib.gating.api.set_required_content" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_required_content</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">gated_content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prereq_content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">min_score</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">min_completion</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Adds a <title_reference>requires</title_reference> milestone relationship for the given gated_content_key if a prerequisite
                        prereq_content_key is provided. If prereq_content_key is None, removes the <title_reference>requires</title_reference>
                        milestone relationship.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>gated_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The gated content usage key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>prereq_content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The prerequisite content usage key</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>min_score</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>int</literal_emphasis>) – The minimum score</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>min_completion</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>int</literal_emphasis>) – The minimum completion percentage</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_milestone()\ (in\ module\ openedx.core.lib.gating.api)',\ 'openedx.core.lib.gating.api.update_milestone',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_milestone()" _toc_parts="openedx.core.lib.gating.api update_milestone" class="" classes="sig sig-object py" fullname="update_milestone" ids="openedx.core.lib.gating.api.update_milestone" module="openedx.core.lib.gating.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_milestone</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">milestone</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prereq_milestone</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">grade_percentage</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">completion_percentage</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Updates the milestone record based on evaluation of prerequisite met.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>milestone</literal_strong> – The gated milestone being evaluated</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> – Usage key of the prerequisite subsection</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>prereq_milestone</literal_strong> – The gating milestone</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – The user who has fulfilled milestone</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>grade_percentage</literal_strong> – Grade percentage of prerequisite subsection</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>completion_percentage</literal_strong> – Completion percentage of prerequisite subsection</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if prerequisite has been met, False if not</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.gating.exceptions openedx-core-lib-gating-exceptions-module" names="openedx.core.lib.gating.exceptions\ module">
            <title>openedx.core.lib.gating.exceptions module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.gating.exceptions',\ 'module-openedx.core.lib.gating.exceptions',\ '',\ None]"></index>
            <paragraph>Exceptions for the course gating feature</paragraph>
            <index entries="['single',\ 'GatingValidationError',\ 'openedx.core.lib.gating.exceptions.GatingValidationError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="GatingValidationError" _toc_parts="openedx.core.lib.gating.exceptions GatingValidationError" class="" classes="sig sig-object py" fullname="GatingValidationError" ids="openedx.core.lib.gating.exceptions.GatingValidationError" module="openedx.core.lib.gating.exceptions"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">GatingValidationError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception class for validation errors related to course gating information</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.gating.services openedx-core-lib-gating-services-module" names="openedx.core.lib.gating.services\ module">
            <title>openedx.core.lib.gating.services module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.gating.services',\ 'module-openedx.core.lib.gating.services',\ '',\ None]"></index>
            <paragraph>A wrapper class to communicate with Gating api</paragraph>
            <index entries="['single',\ 'GatingService\ (class\ in\ openedx.core.lib.gating.services)',\ 'openedx.core.lib.gating.services.GatingService',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="GatingService" _toc_parts="openedx.core.lib.gating.services GatingService" class="" classes="sig sig-object py" fullname="GatingService" ids="openedx.core.lib.gating.services.GatingService" module="openedx.core.lib.gating.services"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.gating.services.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">GatingService</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>An XBlock service to talk to the Gating api.</paragraph>
                    <index entries="['single',\ 'compute_is_prereq_met()\ (openedx.core.lib.gating.services.GatingService\ method)',\ 'openedx.core.lib.gating.services.GatingService.compute_is_prereq_met',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GatingService.compute_is_prereq_met()" _toc_parts="openedx.core.lib.gating.services GatingService compute_is_prereq_met" class="GatingService" classes="sig sig-object py" fullname="GatingService.compute_is_prereq_met" ids="openedx.core.lib.gating.services.GatingService.compute_is_prereq_met" module="openedx.core.lib.gating.services"><desc_name classes="sig-name descname" xml:space="preserve">compute_is_prereq_met</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">recalc_on_unmet</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns true if the prequiste has been met for a given milestone</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>content_id</literal_strong> (<literal_emphasis>BlockUsageLocator</literal_emphasis>) – BlockUsageLocator for the content</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user_id</literal_strong> – The id of the user</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>recalc_on_unmet</literal_strong> – Recalculate the grade if prereq has not yet been met</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>True|False,
                                            prereq_meta_info = { ‘url’: prereq_url|None, ‘display_name’: prereq_name|None}</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>tuple</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_gate_fulfilled()\ (openedx.core.lib.gating.services.GatingService\ method)',\ 'openedx.core.lib.gating.services.GatingService.is_gate_fulfilled',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GatingService.is_gate_fulfilled()" _toc_parts="openedx.core.lib.gating.services GatingService is_gate_fulfilled" class="GatingService" classes="sig sig-object py" fullname="GatingService.is_gate_fulfilled" ids="openedx.core.lib.gating.services.GatingService.is_gate_fulfilled" module="openedx.core.lib.gating.services"><desc_name classes="sig-name descname" xml:space="preserve">is_gate_fulfilled</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">gating_content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Determines if a prerequisite section specified by gating_content_key
                                has any unfulfilled milestones.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseUsageLocator</literal_emphasis>) – Course locator</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>gating_content_key</literal_strong> (<literal_emphasis>BlockUsageLocator</literal_emphasis>) – The locator for the section content</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user_id</literal_strong> – The id of the user</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Returns True if section has no unfufilled milestones or is not a prerequisite.
                                            Returns False otherwise</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'required_prereq()\ (openedx.core.lib.gating.services.GatingService\ method)',\ 'openedx.core.lib.gating.services.GatingService.required_prereq',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GatingService.required_prereq()" _toc_parts="openedx.core.lib.gating.services GatingService required_prereq" class="GatingService" classes="sig sig-object py" fullname="GatingService.required_prereq" ids="openedx.core.lib.gating.services.GatingService.required_prereq" module="openedx.core.lib.gating.services"><desc_name classes="sig-name descname" xml:space="preserve">required_prereq</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">relationship</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the prerequisite if one is required</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>CourseKey</literal_emphasis>) – The course key</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>content_key</literal_strong> (<literal_emphasis>str</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>UsageKey</literal_emphasis>) – The content usage key</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>relationship</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The relationship type (e.g. ‘requires’)</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The gating milestone dict or None</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>dict or None</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.gating module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.gating',\ 'module-openedx.core.lib.gating',\ '',\ None]"></index>
        </section>
    </section>
</document>
