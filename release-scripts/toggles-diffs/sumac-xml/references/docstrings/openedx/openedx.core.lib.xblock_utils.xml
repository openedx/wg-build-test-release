<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.lib.xblock_utils.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-lib-xblock-utils-package" names="openedx.core.lib.xblock_utils\ package">
        <title>openedx.core.lib.xblock_utils package</title>
        <section ids="module-openedx.core.lib.xblock_utils module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.xblock_utils',\ 'module-openedx.core.lib.xblock_utils',\ '',\ None]"></index>
            <paragraph>Functions that are used to modify XBlock fragments for use in the LMS and Studio</paragraph>
            <index entries="['single',\ 'add_staff_markup()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.add_staff_markup',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_staff_markup()" _toc_parts="openedx.core.lib.xblock_utils add_staff_markup" class="" classes="sig sig-object py" fullname="add_staff_markup" ids="openedx.core.lib.xblock_utils.add_staff_markup" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_staff_markup</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">disable_staff_debug_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">frag</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Updates the supplied block with a new get_html function that wraps
                        the output of the old get_html function with additional information
                        for admin users only, including a histogram of student answers, the
                        definition of the xblock, and a link to view the block in Studio
                        if it is a Studio edited, mongo stored course.</paragraph>
                    <paragraph>Does nothing if block is a SequenceBlock.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_aside_from_xblock()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.get_aside_from_xblock',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_aside_from_xblock()" _toc_parts="openedx.core.lib.xblock_utils get_aside_from_xblock" class="" classes="sig sig-object py" fullname="get_aside_from_xblock" ids="openedx.core.lib.xblock_utils.get_aside_from_xblock" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_aside_from_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">aside_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Gets an instance of an XBlock aside from the XBlock that it’s decorating. This also
                        configures the aside instance with the runtime and fields of the given XBlock.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>xblock</literal_strong> (<literal_emphasis>xblock.core.XBlock</literal_emphasis>) – The XBlock that the desired aside is decorating</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>aside_type</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The aside type</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Instance of an xblock aside</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>xblock.core.XBlockAside</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_update_items()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.get_course_update_items',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_update_items()" _toc_parts="openedx.core.lib.xblock_utils get_course_update_items" class="" classes="sig sig-object py" fullname="get_course_update_items" ids="openedx.core.lib.xblock_utils.get_course_update_items" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_update_items</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_updates</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">provided_index</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns list of course_updates data dictionaries either from new format if available or
                        from old. This function don’t modify old data to new data (in db), instead returns data
                        in common old dictionary format.
                        New Format: {“items” : [{“id”: computed_id, “date”: date, “content”: html-string}],</paragraph>
                    <block_quote>
                        <paragraph>“data”: “&lt;ol&gt;[&lt;li&gt;&lt;h2&gt;date&lt;/h2&gt;content&lt;/li&gt;]&lt;/ol&gt;”}</paragraph>
                    </block_quote>
                    <paragraph>Old Format: {“data”: “&lt;ol&gt;[&lt;li&gt;&lt;h2&gt;date&lt;/h2&gt;content&lt;/li&gt;]&lt;/ol&gt;”}</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_css_dependencies()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.get_css_dependencies',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_css_dependencies()" _toc_parts="openedx.core.lib.xblock_utils get_css_dependencies" class="" classes="sig sig-object py" fullname="get_css_dependencies" ids="openedx.core.lib.xblock_utils.get_css_dependencies" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_css_dependencies</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">group</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns list of CSS dependencies belonging to <title_reference>group</title_reference> in settings.PIPELINE[‘STYLESHEETS’].</paragraph>
                    <paragraph>Respects <title_reference>PIPELINE[‘PIPELINE_ENABLED’]</title_reference> setting.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_icon()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.get_icon',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_icon()" _toc_parts="openedx.core.lib.xblock_utils get_icon" class="" classes="sig sig-object py" fullname="get_icon" ids="openedx.core.lib.xblock_utils.get_icon" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_icon</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A function that returns the CSS class representing an icon to use for this particular
                        XBlock (in the courseware navigation bar). Mostly used for Vertical/Unit XBlocks.
                        It can be overridden by setting <title_reference>OVERRIDE_GET_UNIT_ICON</title_reference> to an alternative implementation.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_js_dependencies()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.get_js_dependencies',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_js_dependencies()" _toc_parts="openedx.core.lib.xblock_utils get_js_dependencies" class="" classes="sig sig-object py" fullname="get_js_dependencies" ids="openedx.core.lib.xblock_utils.get_js_dependencies" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_js_dependencies</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">group</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns list of JS dependencies belonging to <title_reference>group</title_reference> in settings.PIPELINE[‘JAVASCRIPT’].</paragraph>
                    <paragraph>Respects <title_reference>PIPELINE[‘PIPELINE_ENABLED’]</title_reference> setting.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'grade_histogram()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.grade_histogram',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="grade_histogram()" _toc_parts="openedx.core.lib.xblock_utils grade_histogram" class="" classes="sig sig-object py" fullname="grade_histogram" ids="openedx.core.lib.xblock_utils.grade_histogram" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">grade_histogram</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Print out a histogram of grades on a given problem in staff member debug info.</paragraph>
                    <paragraph>Warning: If a student has just looked at an xblock and not attempted
                        it, their grade is None. Since there will always be at least one such student
                        this function almost always returns [].</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'hash_resource()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.hash_resource',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="hash_resource()" _toc_parts="openedx.core.lib.xblock_utils hash_resource" class="" classes="sig sig-object py" fullname="hash_resource" ids="openedx.core.lib.xblock_utils.hash_resource" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">hash_resource</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">resource</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Hash a :class:<problematic ids="id2" refid="id1">`</problematic>web_fragments.fragment.FragmentResource
                        Those hash values are used to avoid loading the resources
                        multiple times.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_xblock_aside()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.is_xblock_aside',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_xblock_aside()" _toc_parts="openedx.core.lib.xblock_utils is_xblock_aside" class="" classes="sig sig-object py" fullname="is_xblock_aside" ids="openedx.core.lib.xblock_utils.is_xblock_aside" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_xblock_aside</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns True if the given usage key is for an XBlock aside</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>opaque_keys.edx.keys.UsageKey</literal_emphasis>) – A usage key</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether or not the usage key is an aside key type</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'request_token()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.request_token',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="request_token()" _toc_parts="openedx.core.lib.xblock_utils request_token" class="" classes="sig sig-object py" fullname="request_token" ids="openedx.core.lib.xblock_utils.request_token" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">request_token</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a unique token for the supplied request.
                        This token will be the same for all calls to <title_reference>request_token</title_reference>
                        made on the same request object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'sanitize_html_id()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.sanitize_html_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="sanitize_html_id()" _toc_parts="openedx.core.lib.xblock_utils sanitize_html_id" class="" classes="sig sig-object py" fullname="sanitize_html_id" ids="openedx.core.lib.xblock_utils.sanitize_html_id" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">sanitize_html_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">html_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Template uses element_id in js function names, so can’t allow dashes and colons.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'wrap_fragment()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.wrap_fragment',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="wrap_fragment()" _toc_parts="openedx.core.lib.xblock_utils wrap_fragment" class="" classes="sig sig-object py" fullname="wrap_fragment" ids="openedx.core.lib.xblock_utils.wrap_fragment" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">wrap_fragment</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fragment</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">new_content</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a new Fragment that has <title_reference>new_content</title_reference> and all
                        as its content, and all of the resources from fragment</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'wrap_xblock()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.wrap_xblock',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="wrap_xblock()" _toc_parts="openedx.core.lib.xblock_utils wrap_xblock" class="" classes="sig sig-object py" fullname="wrap_xblock" ids="openedx.core.lib.xblock_utils.wrap_xblock" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">wrap_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">runtime_class</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">frag</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_id_serializer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request_token</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">display_name_only</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">extra_data</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Wraps the results of rendering an XBlock view in a standard &lt;section&gt; with identifying
                        data so that the appropriate javascript module can be loaded onto it.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>runtime_class</literal_strong> – The name of the javascript runtime class to use to load this block</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>block</literal_strong> – An XBlock (that may be an XModule or XModuleDescriptor)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>view</literal_strong> – The name of the view that rendered the fragment being wrapped</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>frag</literal_strong> – The <literal classes="xref py py-class">Fragment</literal> to be wrapped</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>context</literal_strong> – The context passed to the view being rendered</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_id_serializer</literal_strong> – A function to serialize the block’s usage_id for use by the
                                            front-end Javascript Runtime.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>request_token</literal_strong> – An identifier that is unique per-request, so that only xblocks
                                            rendered as part of this request will have their javascript initialized.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>display_name_only</literal_strong> – If true, don’t render the fragment content at all.
                                            Instead, just render the <title_reference>display_name</title_reference> of <title_reference>block</title_reference></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>extra_data</literal_strong> – A dictionary with extra data values to be set on the wrapper</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'wrap_xblock_aside()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.wrap_xblock_aside',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="wrap_xblock_aside()" _toc_parts="openedx.core.lib.xblock_utils wrap_xblock_aside" class="" classes="sig sig-object py" fullname="wrap_xblock_aside" ids="openedx.core.lib.xblock_utils.wrap_xblock_aside" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">wrap_xblock_aside</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">runtime_class</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">aside</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">frag</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_id_serializer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request_token</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">extra_data</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">extra_classes</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Wraps the results of rendering an XBlockAside view in a standard &lt;section&gt; with identifying
                        data so that the appropriate javascript module can be loaded onto it.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>runtime_class</literal_strong> – The name of the javascript runtime class to use to load this block</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>aside</literal_strong> – An XBlockAside</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>view</literal_strong> – The name of the view that rendered the fragment being wrapped</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>frag</literal_strong> – The <literal classes="xref py py-class">Fragment</literal> to be wrapped</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>context</literal_strong> – The context passed to the view being rendered</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_id_serializer</literal_strong> – A function to serialize the block’s usage_id for use by the
                                            front-end Javascript Runtime.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>request_token</literal_strong> – An identifier that is unique per-request, so that only xblocks
                                            rendered as part of this request will have their javascript initialized.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>extra_data</literal_strong> – A dictionary with extra data values to be set on the wrapper</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>extra_classes</literal_strong> – A list with extra classes to be set on the wrapper element</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'xblock_local_resource_url()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.xblock_local_resource_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="xblock_local_resource_url()" _toc_parts="openedx.core.lib.xblock_utils xblock_local_resource_url" class="" classes="sig sig-object py" fullname="xblock_local_resource_url" ids="openedx.core.lib.xblock_utils.xblock_local_resource_url" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">xblock_local_resource_url</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">uri</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the URL for an XBlock’s local resource.</paragraph>
                    <paragraph>Note: when running with the full Django pipeline, the file will be accessed
                        as a static asset which will use a CDN in production.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'xblock_resource_pkg()\ (in\ module\ openedx.core.lib.xblock_utils)',\ 'openedx.core.lib.xblock_utils.xblock_resource_pkg',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="xblock_resource_pkg()" _toc_parts="openedx.core.lib.xblock_utils xblock_resource_pkg" class="" classes="sig sig-object py" fullname="xblock_resource_pkg" ids="openedx.core.lib.xblock_utils.xblock_resource_pkg" module="openedx.core.lib.xblock_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.xblock_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">xblock_resource_pkg</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the module name needed to find an XBlock’s shared static assets.</paragraph>
                    <paragraph>This method will return the full module name that is one level higher than
                        the one the block is in. For instance, problem_builder.answer.AnswerBlock
                        has a __module__ value of ‘problem_builder.answer’. This method will return
                        ‘problem_builder’ instead. However, for edx-ora2’s
                        openassessment.xblock.openassessmentblock.OpenAssessmentBlock, the value
                        returned is ‘openassessment.xblock’.</paragraph>
                    <paragraph>Built-in edx-platform XBlocks (defined under ./xmodule/) are special cases.
                        They currently use two different mechanisms to load assets:
                        1. The <title_reference>builtin_assets</title_reference> utilities, which let the blocks add JS and CSS</paragraph>
                    <block_quote>
                        <paragraph>compiled completely outside of the XBlock pipeline. Used by HtmlBlock,
                            ProblemBlock, and most other built-in blocks currently. Handling for these
                            assets does not interact with this function.</paragraph>
                    </block_quote>
                    <enumerated_list enumtype="arabic" prefix="" start="2" suffix=".">
                        <list_item>
                            <paragraph>The (preferred) standard XBlock runtime resource loading system, used by
                                LegacyLibraryContentBlock. Handling for these assets <emphasis>does</emphasis> interact with this
                                function.</paragraph>
                        </list_item>
                    </enumerated_list>
                    <paragraph>We hope to migrate to (2) eventually, tracked by:
                        <reference refuri="https://github.com/openedx/edx-platform/issues/32618">https://github.com/openedx/edx-platform/issues/32618</reference>.</paragraph>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
