<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.lib.license.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-lib-license-package" names="openedx.core.lib.license\ package">
        <title>openedx.core.lib.license package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.lib.license.mixin openedx-core-lib-license-mixin-module" names="openedx.core.lib.license.mixin\ module">
            <title>openedx.core.lib.license.mixin module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.license.mixin',\ 'module-openedx.core.lib.license.mixin',\ '',\ None]"></index>
            <paragraph>License mixin for XBlocks and XModules</paragraph>
            <index entries="['single',\ 'LicenseMixin\ (class\ in\ openedx.core.lib.license.mixin)',\ 'openedx.core.lib.license.mixin.LicenseMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="LicenseMixin" _toc_parts="openedx.core.lib.license.mixin LicenseMixin" class="" classes="sig sig-object py" fullname="LicenseMixin" ids="openedx.core.lib.license.mixin.LicenseMixin" module="openedx.core.lib.license.mixin"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.license.mixin.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">LicenseMixin</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scope_ids</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_data</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">runtime</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">XBlockMixin</literal></paragraph>
                    <paragraph>Mixin that allows an author to indicate a license on the contents of an
                        XBlock. For example, a video could be marked as Creative Commons SA-BY
                        licensed. You can even indicate the license on an entire course.</paragraph>
                    <paragraph>If this mixin is not applied to an XBlock, or if the license field is
                        blank, then the content is subject to whatever legal licensing terms that
                        apply to content by default. For example, in the United States, that content
                        is exclusively owned by the creator of the content by default. Other
                        countries may have similar laws.</paragraph>
                    <index entries="['single',\ 'add_license_to_xml()\ (openedx.core.lib.license.mixin.LicenseMixin\ method)',\ 'openedx.core.lib.license.mixin.LicenseMixin.add_license_to_xml',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="LicenseMixin.add_license_to_xml()" _toc_parts="openedx.core.lib.license.mixin LicenseMixin add_license_to_xml" class="LicenseMixin" classes="sig sig-object py" fullname="LicenseMixin.add_license_to_xml" ids="openedx.core.lib.license.mixin.LicenseMixin.add_license_to_xml" module="openedx.core.lib.license.mixin"><desc_name classes="sig-name descname" xml:space="preserve">add_license_to_xml</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">node</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>When generating XML from an XBlock, this method will add the XBlockâ€™s
                                license to the XML representation before it is serialized.
                                It is defined here so that classes that use this mixin can simply refer
                                to this method, rather than reimplementing it in their XML export
                                functions.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'license\ (openedx.core.lib.license.mixin.LicenseMixin\ attribute)',\ 'openedx.core.lib.license.mixin.LicenseMixin.license',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="LicenseMixin.license" _toc_parts="openedx.core.lib.license.mixin LicenseMixin license" class="LicenseMixin" classes="sig sig-object py" fullname="LicenseMixin.license" ids="openedx.core.lib.license.mixin.LicenseMixin.license" module="openedx.core.lib.license.mixin"><desc_name classes="sig-name descname" xml:space="preserve">license</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A field class for representing a string.</paragraph>
                            <paragraph>The value, as loaded or enforced, can either be None or a basestring instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'parse_license_from_xml()\ (openedx.core.lib.license.mixin.LicenseMixin\ class\ method)',\ 'openedx.core.lib.license.mixin.LicenseMixin.parse_license_from_xml',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="LicenseMixin.parse_license_from_xml()" _toc_parts="openedx.core.lib.license.mixin LicenseMixin parse_license_from_xml" class="LicenseMixin" classes="sig sig-object py" fullname="LicenseMixin.parse_license_from_xml" ids="openedx.core.lib.license.mixin.LicenseMixin.parse_license_from_xml" module="openedx.core.lib.license.mixin"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">parse_license_from_xml</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">definition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">node</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>When importing an XBlock from XML, this method will parse the license
                                information out of the XML and attach it to the block.
                                It is defined here so that classes that use this mixin can simply refer
                                to this method, rather than reimplementing it in their XML import
                                functions.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.license.wrapper openedx-core-lib-license-wrapper-module" names="openedx.core.lib.license.wrapper\ module">
            <title>openedx.core.lib.license.wrapper module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.license.wrapper',\ 'module-openedx.core.lib.license.wrapper',\ '',\ None]"></index>
            <paragraph>Code to wrap web fragments with a license.</paragraph>
            <index entries="['single',\ 'wrap_with_license()\ (in\ module\ openedx.core.lib.license.wrapper)',\ 'openedx.core.lib.license.wrapper.wrap_with_license',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="wrap_with_license()" _toc_parts="openedx.core.lib.license.wrapper wrap_with_license" class="" classes="sig sig-object py" fullname="wrap_with_license" ids="openedx.core.lib.license.wrapper.wrap_with_license" module="openedx.core.lib.license.wrapper"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.license.wrapper.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">wrap_with_license</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">frag</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mako_service</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>In the LMS, display the custom license underneath the XBlock.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.license module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.license',\ 'module-openedx.core.lib.license',\ '',\ None]"></index>
        </section>
    </section>
</document>
