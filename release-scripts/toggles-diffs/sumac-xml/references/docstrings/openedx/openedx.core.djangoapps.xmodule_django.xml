<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.xmodule_django.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-xmodule-django-package" names="openedx.core.djangoapps.xmodule_django\ package">
        <title>openedx.core.djangoapps.xmodule_django package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.xmodule_django.models openedx-core-djangoapps-xmodule-django-models-module" names="openedx.core.djangoapps.xmodule_django.models\ module">
            <title>openedx.core.djangoapps.xmodule_django.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.xmodule_django.models',\ 'module-openedx.core.djangoapps.xmodule_django.models',\ '',\ None]"></index>
            <paragraph>Useful django models for implementing XBlock infrastructure in django.</paragraph>
            <index entries="['single',\ 'BlockTypeKeyField\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.BlockTypeKeyField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockTypeKeyField" _toc_parts="openedx.core.djangoapps.xmodule_django.models BlockTypeKeyField" class="" classes="sig sig-object py" fullname="BlockTypeKeyField" ids="openedx.core.djangoapps.xmodule_django.models.BlockTypeKeyField" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockTypeKeyField</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BlockTypeKeyField</literal></paragraph>
                    <paragraph>A django Field that stores a BlockTypeKey object as a string.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseKeyField\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.CourseKeyField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseKeyField" _toc_parts="openedx.core.djangoapps.xmodule_django.models CourseKeyField" class="" classes="sig sig-object py" fullname="CourseKeyField" ids="openedx.core.djangoapps.xmodule_django.models.CourseKeyField" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseKeyField</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">CourseKeyField</literal></paragraph>
                    <paragraph>A django Field that stores a CourseKey object as a string.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'NoneToEmptyManager\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="NoneToEmptyManager" _toc_parts="openedx.core.djangoapps.xmodule_django.models NoneToEmptyManager" class="" classes="sig sig-object py" fullname="NoneToEmptyManager" ids="openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">NoneToEmptyManager</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Manager</literal></paragraph>
                    <paragraph>A <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/db/managers/#django.db.models.Manager"><literal classes="xref py py-class">django.db.models.Manager</literal></reference> that has a <reference internal="True" refid="openedx.core.djangoapps.xmodule_django.models.NoneToEmptyQuerySet" reftitle="openedx.core.djangoapps.xmodule_django.models.NoneToEmptyQuerySet"><literal classes="xref py py-class">NoneToEmptyQuerySet</literal></reference>
                        as its <title_reference>QuerySet</title_reference>, initialized with a set of specified <title_reference>field_names</title_reference>.</paragraph>
                    <index entries="['single',\ 'get_queryset()\ (openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager\ method)',\ 'openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager.get_queryset',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="NoneToEmptyManager.get_queryset()" _toc_parts="openedx.core.djangoapps.xmodule_django.models NoneToEmptyManager get_queryset" class="NoneToEmptyManager" classes="sig sig-object py" fullname="NoneToEmptyManager.get_queryset" ids="openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager.get_queryset" module="openedx.core.djangoapps.xmodule_django.models"><desc_name classes="sig-name descname" xml:space="preserve">get_queryset</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the result of NoneToEmptyQuerySet instead of a regular QuerySet.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'NoneToEmptyQuerySet\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.NoneToEmptyQuerySet',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="NoneToEmptyQuerySet" _toc_parts="openedx.core.djangoapps.xmodule_django.models NoneToEmptyQuerySet" class="" classes="sig sig-object py" fullname="NoneToEmptyQuerySet" ids="openedx.core.djangoapps.xmodule_django.models.NoneToEmptyQuerySet" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">NoneToEmptyQuerySet</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">query</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">using</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">hints</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/models/querysets/#django.db.models.query.QuerySet"><literal classes="xref py py-class">QuerySet</literal></reference></paragraph>
                    <paragraph>A <literal classes="xref py py-class">django.db.query.QuerySet</literal> that replaces <title_reference>None</title_reference> values passed to <title_reference>filter</title_reference> and <title_reference>exclude</title_reference>
                        with the corresponding <title_reference>Empty</title_reference> value for all fields with an <title_reference>Empty</title_reference> attribute.</paragraph>
                    <paragraph>This is to work around Django automatically converting <title_reference>exact</title_reference> queries for <title_reference>None</title_reference> into
                        <title_reference>isnull</title_reference> queries before the field has a chance to convert them to queries for it’s own
                        empty value.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'OpaqueKeyField\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.OpaqueKeyField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="OpaqueKeyField" _toc_parts="openedx.core.djangoapps.xmodule_django.models OpaqueKeyField" class="" classes="sig sig-object py" fullname="OpaqueKeyField" ids="openedx.core.djangoapps.xmodule_django.models.OpaqueKeyField" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">OpaqueKeyField</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">OpaqueKeyField</literal></paragraph>
                    <paragraph>A django field for storing OpaqueKeys.</paragraph>
                    <paragraph>The baseclass will return the value from the database as a string, rather than an instance
                        of an OpaqueKey, leaving the application to determine which key subtype to parse the string
                        as.</paragraph>
                    <paragraph>Subclasses must specify a KEY_CLASS attribute, in which case the field will use <literal classes="xref py py-meth">from_string()</literal>
                        to parse the key string, and will return an instance of KEY_CLASS.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UsageKeyField\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.UsageKeyField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="UsageKeyField" _toc_parts="openedx.core.djangoapps.xmodule_django.models UsageKeyField" class="" classes="sig sig-object py" fullname="UsageKeyField" ids="openedx.core.djangoapps.xmodule_django.models.UsageKeyField" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UsageKeyField</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">UsageKeyField</literal></paragraph>
                    <paragraph>A django Field that stores a UsageKey object as a string.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UsageKeyWithRunField\ (class\ in\ openedx.core.djangoapps.xmodule_django.models)',\ 'openedx.core.djangoapps.xmodule_django.models.UsageKeyWithRunField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="UsageKeyWithRunField" _toc_parts="openedx.core.djangoapps.xmodule_django.models UsageKeyWithRunField" class="" classes="sig sig-object py" fullname="UsageKeyWithRunField" ids="openedx.core.djangoapps.xmodule_django.models.UsageKeyWithRunField" module="openedx.core.djangoapps.xmodule_django.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.xmodule_django.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UsageKeyWithRunField</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">UsageKeyField</literal></paragraph>
                    <paragraph>Subclass of UsageKeyField that automatically fills in
                        missing <title_reference>run</title_reference> values, for old Mongo courses.</paragraph>
                    <index entries="['single',\ 'to_python()\ (openedx.core.djangoapps.xmodule_django.models.UsageKeyWithRunField\ method)',\ 'openedx.core.djangoapps.xmodule_django.models.UsageKeyWithRunField.to_python',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="UsageKeyWithRunField.to_python()" _toc_parts="openedx.core.djangoapps.xmodule_django.models UsageKeyWithRunField to_python" class="UsageKeyWithRunField" classes="sig sig-object py" fullname="UsageKeyWithRunField.to_python" ids="openedx.core.djangoapps.xmodule_django.models.UsageKeyWithRunField.to_python" module="openedx.core.djangoapps.xmodule_django.models"><desc_name classes="sig-name descname" xml:space="preserve">to_python</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Convert the input value into the expected Python data type, raising
                                django.core.exceptions.ValidationError if the data can’t be converted.
                                Return the converted value. Subclasses should override this.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.xmodule_django module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.xmodule_django',\ 'module-openedx.core.djangoapps.xmodule_django',\ '',\ None]"></index>
        </section>
    </section>
</document>
