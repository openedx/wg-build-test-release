<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.models.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-models-package" names="openedx.core.djangoapps.models\ package">
        <title>openedx.core.djangoapps.models package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.models.course_details openedx-core-djangoapps-models-course-details-module" names="openedx.core.djangoapps.models.course_details\ module">
            <title>openedx.core.djangoapps.models.course_details module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.models.course_details',\ 'module-openedx.core.djangoapps.models.course_details',\ '',\ None]"></index>
            <paragraph>CourseDetails</paragraph>
            <index entries="['single',\ 'CourseDetails\ (class\ in\ openedx.core.djangoapps.models.course_details)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseDetails" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails" class="" classes="sig sig-object py" fullname="CourseDetails" ids="openedx.core.djangoapps.models.course_details.CourseDetails" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.models.course_details.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseDetails</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">org</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">run</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>An interface for extracting course information from the modulestore.</paragraph>
                    <index entries="['single',\ 'fetch()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.fetch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.fetch()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails fetch" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.fetch" ids="openedx.core.djangoapps.models.course_details.CourseDetails.fetch" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">fetch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Fetch the course details for the given course from persistence
                                and return a CourseDetails model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'fetch_about_attribute()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.fetch_about_attribute',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.fetch_about_attribute()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails fetch_about_attribute" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.fetch_about_attribute" ids="openedx.core.djangoapps.models.course_details.CourseDetails.fetch_about_attribute" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">fetch_about_attribute</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attribute</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve an attribute from a course’s “about” info</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'fetch_video_url()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.fetch_video_url',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.fetch_video_url()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails fetch_video_url" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.fetch_video_url" ids="openedx.core.djangoapps.models.course_details.CourseDetails.fetch_video_url" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">fetch_video_url</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the course about video URL.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'fetch_youtube_video_id()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.fetch_youtube_video_id',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.fetch_youtube_video_id()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails fetch_youtube_video_id" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.fetch_youtube_video_id" ids="openedx.core.djangoapps.models.course_details.CourseDetails.fetch_youtube_video_id" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">fetch_youtube_video_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the course about video ID.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'parse_video_tag()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ static\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.parse_video_tag',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.parse_video_tag()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails parse_video_tag" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.parse_video_tag" ids="openedx.core.djangoapps.models.course_details.CourseDetails.parse_video_tag" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">parse_video_tag</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">raw_video</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Because the client really only wants the author to specify the
                                youtube key, that’s all we send to and get from the client. The
                                problem is that the db stores the html markup as well (which, of
                                course, makes any site-wide changes to how we do videos next to
                                impossible.)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'populate()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.populate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.populate()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails populate" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.populate" ids="openedx.core.djangoapps.models.course_details.CourseDetails.populate" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">populate</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a fully populated CourseDetails model given the course block</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'recompose_video_tag()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ static\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.recompose_video_tag',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.recompose_video_tag()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails recompose_video_tag" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.recompose_video_tag" ids="openedx.core.djangoapps.models.course_details.CourseDetails.recompose_video_tag" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">static<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">recompose_video_tag</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">video_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns HTML string to embed the video in an iFrame.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_about_item()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.update_about_item',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.update_about_item()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails update_about_item" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.update_about_item" ids="openedx.core.djangoapps.models.course_details.CourseDetails.update_about_item" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_about_item</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">about_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">store</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update the about item with the new data blob. If data is None,
                                then delete the about item.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_about_video()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.update_about_video',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.update_about_video()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails update_about_video" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.update_about_video" ids="openedx.core.djangoapps.models.course_details.CourseDetails.update_about_video" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_about_video</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">video_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updates the Course’s about video to the given video ID.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_from_json()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.update_from_json',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.update_from_json()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails update_from_json" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.update_from_json" ids="openedx.core.djangoapps.models.course_details.CourseDetails.update_from_json" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_from_json</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">jsondict</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Decode the json into CourseDetails and save any changed attrs to the db</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'validate_certificate_settings()\ (openedx.core.djangoapps.models.course_details.CourseDetails\ class\ method)',\ 'openedx.core.djangoapps.models.course_details.CourseDetails.validate_certificate_settings',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseDetails.validate_certificate_settings()" _toc_parts="openedx.core.djangoapps.models.course_details CourseDetails validate_certificate_settings" class="CourseDetails" classes="sig sig-object py" fullname="CourseDetails.validate_certificate_settings" ids="openedx.core.djangoapps.models.course_details.CourseDetails.validate_certificate_settings" module="openedx.core.djangoapps.models.course_details"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">validate_certificate_settings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">certificate_available_date</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">certificates_display_behavior</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Takes the stored values for certificate_available_date and certificates_display_behavior and verifies they work
                                together in tandem per ADR: lms/djangoapps/certificates/docs/decisions/005-cert-display-settings.rst</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>stored_certificate_available_date</literal_strong> (<literal_emphasis>str</literal_emphasis>) – certificate_available_date from the modulestore</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>stored_certificates_display_behavior</literal_strong> (<literal_emphasis>str</literal_emphasis>)</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>updated certificate_available_date, updated certificates_display_behavior
                                            None</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>tuple[str, str]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.models module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.models',\ 'module-openedx.core.djangoapps.models',\ '',\ None]"></index>
        </section>
    </section>
</document>
