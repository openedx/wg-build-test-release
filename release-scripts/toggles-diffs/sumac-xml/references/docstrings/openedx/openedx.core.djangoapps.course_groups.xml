<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.course_groups.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-course-groups-package" names="openedx.core.djangoapps.course_groups\ package">
        <title>openedx.core.djangoapps.course_groups package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.course_groups.management">openedx.core.djangoapps.course_groups.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="openedx.core.djangoapps.course_groups.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.course_groups.management.commands">openedx.core.djangoapps.course_groups.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.course_groups.management.commands" internal="True" refuri="openedx.core.djangoapps.course_groups.management.commands#module-openedx.core.djangoapps.course_groups.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.course_groups.management" internal="True" refuri="openedx.core.djangoapps.course_groups.management#module-openedx.core.djangoapps.course_groups.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.course_groups.signals">openedx.core.djangoapps.course_groups.signals package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.course_groups.signals#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.course_groups.signals.signals" internal="True" refuri="openedx.core.djangoapps.course_groups.signals#module-openedx.core.djangoapps.course_groups.signals.signals">openedx.core.djangoapps.course_groups.signals.signals module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.course_groups.signals" internal="True" refuri="openedx.core.djangoapps.course_groups.signals#module-openedx.core.djangoapps.course_groups.signals">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.api openedx-core-djangoapps-course-groups-api-module" names="openedx.core.djangoapps.course_groups.api\ module">
            <title>openedx.core.djangoapps.course_groups.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.api',\ 'module-openedx.core.djangoapps.course_groups.api',\ '',\ None]"></index>
            <paragraph>course_groups API</paragraph>
            <index entries="['single',\ 'remove_user_from_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.api)',\ 'openedx.core.djangoapps.course_groups.api.remove_user_from_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_user_from_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.api remove_user_from_cohort" class="" classes="sig sig-object py" fullname="remove_user_from_cohort" ids="openedx.core.djangoapps.course_groups.api.remove_user_from_cohort" module="openedx.core.djangoapps.course_groups.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_user_from_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Removes an user from a course group.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.cohorts openedx-core-djangoapps-course-groups-cohorts-module" names="openedx.core.djangoapps.course_groups.cohorts\ module">
            <title>openedx.core.djangoapps.course_groups.cohorts module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.cohorts',\ 'module-openedx.core.djangoapps.course_groups.cohorts',\ '',\ None]"></index>
            <paragraph>This file contains the logic for cohorts, as exposed internally to the
                forums, and to the cohort admin views.</paragraph>
            <index entries="['single',\ 'add_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.add_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts add_cohort" class="" classes="sig sig-object py" fullname="add_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.add_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">assignment_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Add a cohort to a course.  Raises ValueError if a cohort of the same name already
                        exists.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'add_user_to_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.add_user_to_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_user_to_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts add_user_to_cohort" class="" classes="sig sig-object py" fullname="add_user_to_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.add_user_to_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_user_to_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username_or_email_or_user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Look up the given user, and if successful, add them to the specified cohort.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>cohort</literal_strong> – CourseUserGroup</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username_or_email_or_user</literal_strong> – user or string.  Treated as email if has ‘@’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>User object (or None if the email address is preassigned),
                                    string (or None) indicating previous cohort,
                                    and whether the user is a preassigned user or not</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>User.DoesNotExist if can't find user. However</literal_strong><literal_strong>, </literal_strong><literal_strong>if a valid email is provided for the user</literal_strong><literal_strong>, </literal_strong><literal_strong>it is stored</literal_strong> – </paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>in a database so that the user can be added to the cohort if they eventually enroll in the course.</literal_strong> – </paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ValueError if user already present in this cohort.</literal_strong> – </paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ValidationError if an invalid email address is entered.</literal_strong> – </paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>User.DoesNotExist if a user could not be found.</literal_strong> – </paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'bulk_cache_cohorts()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.bulk_cache_cohorts',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="bulk_cache_cohorts()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts bulk_cache_cohorts" class="" classes="sig sig-object py" fullname="bulk_cache_cohorts" ids="openedx.core.djangoapps.course_groups.cohorts.bulk_cache_cohorts" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">bulk_cache_cohorts</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">users</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Pre-fetches and caches the cohort assignments for the
                        given users, for later fast retrieval by get_cohort.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_assignment_type()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_assignment_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_assignment_type()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_assignment_type" class="" classes="sig sig-object py" fullname="get_assignment_type" ids="openedx.core.djangoapps.course_groups.cohorts.get_assignment_type" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_assignment_type</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_group</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get assignment type for cohort.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohort" class="" classes="sig sig-object py" fullname="get_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">assign</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_cached</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the user’s cohort for the specified course.</paragraph>
                    <paragraph>The cohort for the user is cached for the duration of a request. Pass
                        use_cached=True to use the cached value instead of fetching from the
                        database.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – a Django User object.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> – CourseKey</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>assign</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – if False then we don’t assign a group to user</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>use_cached</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether to use the cached value or fetch from database.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A CourseUserGroup object if the course is cohorted and the User has a
                                    cohort, else None.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><literal_strong>ValueError if the CourseKey doesn't exist.</literal_strong> – </paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohort_by_id()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohort_by_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohort_by_id()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohort_by_id" class="" classes="sig sig-object py" fullname="get_cohort_by_id" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohort_by_id" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohort_by_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the CourseUserGroup object for the given cohort.  Raises DoesNotExist
                        it isn’t present.  Uses the course_key for extra validation.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohort_by_name()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohort_by_name',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohort_by_name()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohort_by_name" class="" classes="sig sig-object py" fullname="get_cohort_by_name" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohort_by_name" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohort_by_name</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the CourseUserGroup object for the given cohort.  Raises DoesNotExist
                        it isn’t present.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohort_id()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohort_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohort_id()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohort_id" class="" classes="sig sig-object py" fullname="get_cohort_id" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohort_id" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohort_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_cached</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course key and a user, return the id of the cohort that user is
                        assigned to in that course.  If they don’t have a cohort, return None.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohort_names()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohort_names',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohort_names()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohort_names" class="" classes="sig sig-object py" fullname="get_cohort_names" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohort_names" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohort_names</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a dict that maps cohort ids to names for the given course</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohorted_user_partition_id()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_cohorted_user_partition_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohorted_user_partition_id()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_cohorted_user_partition_id" class="" classes="sig sig-object py" fullname="get_cohorted_user_partition_id" ids="openedx.core.djangoapps.course_groups.cohorts.get_cohorted_user_partition_id" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohorted_user_partition_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the partition id to which cohorts are linked or None if there is no cohort linked
                        to a content group.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_cohort_id()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_course_cohort_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_cohort_id()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_course_cohort_id" class="" classes="sig sig-object py" fullname="get_course_cohort_id" ids="openedx.core.djangoapps.course_groups.cohorts.get_course_cohort_id" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_cohort_id</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course key, return the int id for the cohort settings.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><literal_strong>Http404 if the course doesn't exist.</literal_strong> – </paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_cohorts()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_course_cohorts',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_cohorts()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_course_cohorts" class="" classes="sig sig-object py" fullname="get_course_cohorts" ids="openedx.core.djangoapps.course_groups.cohorts.get_course_cohorts" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_cohorts</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">assignment_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get a list of all the cohorts in the given course. This will include auto cohorts,
                        regardless of whether or not the auto cohorts include any users.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course</literal_strong> – the course for which cohorts should be returned</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>assignment_type</literal_strong> – cohort assignment type</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of CourseUserGroup objects. Empty if there are no cohorts. Does
                                    not check whether the course is cohorted.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_group_info_for_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_group_info_for_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_group_info_for_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_group_info_for_cohort" class="" classes="sig sig-object py" fullname="get_group_info_for_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.get_group_info_for_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_group_info_for_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_cached</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the ids of the group and partition to which this cohort has been linked
                        as a tuple of (int, int).</paragraph>
                    <paragraph>If the cohort has not been linked to any group/partition, both values in the
                        tuple will be None.</paragraph>
                    <paragraph>The partition group info is cached for the duration of a request. Pass
                        use_cached=True to use the cached value instead of fetching from the
                        database.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_legacy_discussion_settings()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_legacy_discussion_settings',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_legacy_discussion_settings()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_legacy_discussion_settings" class="" classes="sig sig-object py" fullname="get_legacy_discussion_settings" ids="openedx.core.djangoapps.course_groups.cohorts.get_legacy_discussion_settings" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_legacy_discussion_settings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_random_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.get_random_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_random_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts get_random_cohort" class="" classes="sig sig-object py" fullname="get_random_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.get_random_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_random_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper method to get a cohort for random assignment.</paragraph>
                    <paragraph>If there are multiple cohorts of type RANDOM in the course, one of them will be randomly selected.
                        If there are no existing cohorts of type RANDOM in the course, one will be created.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_cohort_exists()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.is_cohort_exists',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_cohort_exists()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts is_cohort_exists" class="" classes="sig sig-object py" fullname="is_cohort_exists" ids="openedx.core.djangoapps.course_groups.cohorts.is_cohort_exists" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_cohort_exists</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if a cohort already exists.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_course_cohorted()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.is_course_cohorted',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_course_cohorted()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts is_course_cohorted" class="" classes="sig sig-object py" fullname="is_course_cohorted" ids="openedx.core.djangoapps.course_groups.cohorts.is_course_cohorted" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_course_cohorted</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course key, return a boolean for whether or not the course is
                        cohorted.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><literal_strong>Http404 if the course doesn't exist.</literal_strong> – </paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_last_random_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.is_last_random_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_last_random_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts is_last_random_cohort" class="" classes="sig sig-object py" fullname="is_last_random_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.is_last_random_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_last_random_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_group</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if this cohort is the only random cohort in the course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'local_random()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.local_random',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="local_random()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts local_random" class="" classes="sig sig-object py" fullname="local_random" ids="openedx.core.djangoapps.course_groups.cohorts.local_random" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">local_random</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the local random number generator.  In a function so that we don’t run
                        random.Random() at import time.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'migrate_cohort_settings()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.migrate_cohort_settings',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="migrate_cohort_settings()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts migrate_cohort_settings" class="" classes="sig sig-object py" fullname="migrate_cohort_settings" ids="openedx.core.djangoapps.course_groups.cohorts.migrate_cohort_settings" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">migrate_cohort_settings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Migrate all the cohort settings associated with this course from modulestore to mysql.
                        After that we will never touch modulestore for any cohort related settings.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_user_from_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.remove_user_from_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_user_from_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts remove_user_from_cohort" class="" classes="sig sig-object py" fullname="remove_user_from_cohort" ids="openedx.core.djangoapps.course_groups.cohorts.remove_user_from_cohort" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_user_from_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username_or_email</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Look up the given user, and if successful, remove them from the specified cohort.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>cohort</literal_strong> – CourseUserGroup</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username_or_email</literal_strong> – string.  Treated as email if has ‘@’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>User.DoesNotExist if can't find user.</literal_strong> – </paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ValueError if user not already present in this cohort.</literal_strong> – </paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_assignment_type()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.set_assignment_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_assignment_type()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts set_assignment_type" class="" classes="sig sig-object py" fullname="set_assignment_type" ids="openedx.core.djangoapps.course_groups.cohorts.set_assignment_type" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_assignment_type</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_group</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">assignment_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Set assignment type for cohort.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_course_cohorted()\ (in\ module\ openedx.core.djangoapps.course_groups.cohorts)',\ 'openedx.core.djangoapps.course_groups.cohorts.set_course_cohorted',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_course_cohorted()" _toc_parts="openedx.core.djangoapps.course_groups.cohorts set_course_cohorted" class="" classes="sig sig-object py" fullname="set_course_cohorted" ids="openedx.core.djangoapps.course_groups.cohorts.set_course_cohorted" module="openedx.core.djangoapps.course_groups.cohorts"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.cohorts.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_course_cohorted</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohorted</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course course and a boolean, sets whether or not the course is cohorted.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><literal_strong>Value error if cohorted is not a boolean</literal_strong> – </paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.models openedx-core-djangoapps-course-groups-models-module" names="openedx.core.djangoapps.course_groups.models\ module">
            <title>openedx.core.djangoapps.course_groups.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.models',\ 'module-openedx.core.djangoapps.course_groups.models',\ '',\ None]"></index>
            <paragraph>Django models related to course groups functionality.</paragraph>
            <index entries="['single',\ 'CohortAssignmentNotAllowed',\ 'openedx.core.djangoapps.course_groups.models.CohortAssignmentNotAllowed',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CohortAssignmentNotAllowed" _toc_parts="openedx.core.djangoapps.course_groups.models CohortAssignmentNotAllowed" class="" classes="sig sig-object py" fullname="CohortAssignmentNotAllowed" ids="openedx.core.djangoapps.course_groups.models.CohortAssignmentNotAllowed" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortAssignmentNotAllowed</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.course_groups.models.CohortMembershipException" reftitle="openedx.core.djangoapps.course_groups.models.CohortMembershipException"><literal classes="xref py py-class">CohortMembershipException</literal></reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortChangeNotAllowed',\ 'openedx.core.djangoapps.course_groups.models.CohortChangeNotAllowed',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CohortChangeNotAllowed" _toc_parts="openedx.core.djangoapps.course_groups.models CohortChangeNotAllowed" class="" classes="sig sig-object py" fullname="CohortChangeNotAllowed" ids="openedx.core.djangoapps.course_groups.models.CohortChangeNotAllowed" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortChangeNotAllowed</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.course_groups.models.CohortMembershipException" reftitle="openedx.core.djangoapps.course_groups.models.CohortMembershipException"><literal classes="xref py py-class">CohortMembershipException</literal></reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortMembership\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortMembership" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership" class="" classes="sig sig-object py" fullname="CohortMembership" ids="openedx.core.djangoapps.course_groups.models.CohortMembership" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortMembership</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Used internally to enforce our particular definition of uniqueness.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CohortMembership.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CohortMembership.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership DoesNotExist" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CohortMembership.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CohortMembership.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership MultipleObjectsReturned" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'assign()\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ class\ method)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.assign',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortMembership.assign()" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership assign" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.assign" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.assign" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">assign</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Assign user to cohort, switching them to this cohort if they had previously been assigned to another
                                cohort
                                Returns CohortMembership, previous_cohort (if any)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean()\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ method)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.clean',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortMembership.clean()" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership clean" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.clean" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.clean" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">clean</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Hook for doing any extra model-wide validation after clean() has been
                                called on every field by self.clean_fields. Any ValidationError raised
                                by this method will not be associated with a particular field; it will
                                have a special-case association with the field defined by NON_FIELD_ERRORS.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_fields()\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ method)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.clean_fields',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortMembership.clean_fields()" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership clean_fields" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.clean_fields" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.clean_fields" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">clean_fields</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Clean all fields and raise a ValidationError containing a dict
                                of all validation errors if any occur.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.course_id" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership course_id" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.course_id" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.course_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.course_user_group',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.course_user_group" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership course_user_group" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.course_user_group" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.course_user_group" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group_id\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.course_user_group_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.course_user_group_id" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership course_user_group_id" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.course_user_group_id" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.course_user_group_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.id" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership id" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.id" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.objects" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership objects" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.objects" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'save()\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ method)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.save',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortMembership.save()" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership save" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.save" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.save" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">save</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_insert</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_update</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">using</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">update_fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Save the current instance. Override this in a subclass if you want to
                                control the saving process.</paragraph>
                            <paragraph>The ‘force_insert’ and ‘force_update’ parameters can be used to insist
                                that the “save” must be an SQL insert or update (or equivalent for
                                non-SQL backends), respectively. Normally, they should not be set.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'user\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.user',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.user" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership user" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.user" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.user" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">user</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'user_id\ (openedx.core.djangoapps.course_groups.models.CohortMembership\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CohortMembership.user_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortMembership.user_id" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembership user_id" class="CohortMembership" classes="sig sig-object py" fullname="CohortMembership.user_id" ids="openedx.core.djangoapps.course_groups.models.CohortMembership.user_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">user_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortMembershipException',\ 'openedx.core.djangoapps.course_groups.models.CohortMembershipException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CohortMembershipException" _toc_parts="openedx.core.djangoapps.course_groups.models CohortMembershipException" class="" classes="sig sig-object py" fullname="CohortMembershipException" ids="openedx.core.djangoapps.course_groups.models.CohortMembershipException" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortMembershipException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseCohort\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseCohort" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort" class="" classes="sig sig-object py" fullname="CourseCohort" ids="openedx.core.djangoapps.course_groups.models.CourseCohort" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseCohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>This model represents cohort related info.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'ASSIGNMENT_TYPE_CHOICES\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.ASSIGNMENT_TYPE_CHOICES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.ASSIGNMENT_TYPE_CHOICES" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort ASSIGNMENT_TYPE_CHOICES" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.ASSIGNMENT_TYPE_CHOICES" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.ASSIGNMENT_TYPE_CHOICES" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">ASSIGNMENT_TYPE_CHOICES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('random', 'Random'), ('manual', 'Manual'))</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseCohort.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseCohort.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort DoesNotExist" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'MANUAL\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.MANUAL',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.MANUAL" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort MANUAL" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.MANUAL" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.MANUAL" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">MANUAL</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'manual'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseCohort.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseCohort.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort MultipleObjectsReturned" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RANDOM\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.RANDOM',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.RANDOM" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort RANDOM" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.RANDOM" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.RANDOM" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">RANDOM</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'random'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'assignment_type\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.assignment_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.assignment_type" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort assignment_type" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.assignment_type" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.assignment_type" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">assignment_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.course_user_group',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.course_user_group" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort course_user_group" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.course_user_group" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.course_user_group" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a one-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Restaurant.place</literal> is a <literal>ForwardOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group_id\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.course_user_group_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.course_user_group_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort course_user_group_id" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.course_user_group_id" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.course_user_group_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ class\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseCohort.create()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort create" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.create" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.create" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_user_group</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">assignment_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'manual'</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a complete(CourseUserGroup + CourseCohort) object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>cohort_name</literal_strong> – Name of the cohort to be created</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>course_id</literal_strong> – Course Id</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>course_user_group</literal_strong> – CourseUserGroup</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>assignment_type</literal_strong> – ‘random’ or ‘manual’</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_assignment_type_display()\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.get_assignment_type_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseCohort.get_assignment_type_display()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort get_assignment_type_display" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.get_assignment_type_display" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.get_assignment_type_display" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_assignment_type_display</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: assignment_type&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort id" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.id" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.CourseCohort\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohort.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohort.objects" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohort objects" class="CourseCohort" classes="sig sig-object py" fullname="CourseCohort.objects" ids="openedx.core.djangoapps.course_groups.models.CourseCohort.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseCohortsSettings\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseCohortsSettings" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings" class="" classes="sig sig-object py" fullname="CourseCohortsSettings" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseCohortsSettings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>This model represents cohort settings for courses.
                        The only non-deprecated fields are <title_reference>is_cohorted</title_reference> and <title_reference>course_id</title_reference>.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CourseCohortsSettings.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseCohortsSettings.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings DoesNotExist" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseCohortsSettings.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseCohortsSettings.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings MultipleObjectsReturned" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'always_cohort_inline_discussions\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.always_cohort_inline_discussions',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohortsSettings.always_cohort_inline_discussions" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings always_cohort_inline_discussions" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.always_cohort_inline_discussions" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.always_cohort_inline_discussions" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">always_cohort_inline_discussions</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cohorted_discussions\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ property)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.cohorted_discussions',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="CourseCohortsSettings.cohorted_discussions" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings cohorted_discussions" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.cohorted_discussions" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.cohorted_discussions" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">property<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">cohorted_discussions</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DEPRECATED– DO NOT USE. Instead use <title_reference>CourseDiscussionSettings.divided_discussions</title_reference>
                                via <title_reference>CourseDiscussionSettings.get</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohortsSettings.course_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings course_id" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.course_id" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.course_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohortsSettings.id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings id" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.id" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_cohorted\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.is_cohorted',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohortsSettings.is_cohorted" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings is_cohorted" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.is_cohorted" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.is_cohorted" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">is_cohorted</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.CourseCohortsSettings\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseCohortsSettings.objects" _toc_parts="openedx.core.djangoapps.course_groups.models CourseCohortsSettings objects" class="CourseCohortsSettings" classes="sig sig-object py" fullname="CourseCohortsSettings.objects" ids="openedx.core.djangoapps.course_groups.models.CourseCohortsSettings.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseUserGroup\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseUserGroup" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup" class="" classes="sig sig-object py" fullname="CourseUserGroup" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseUserGroup</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>This model represents groups of users in a course.  Groups may have different types,
                        which may be treated specially.  For example, a user can be in at most one cohort per
                        course, and cohorts are used to split up the forums by group.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'COHORT\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.COHORT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.COHORT" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup COHORT" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.COHORT" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.COHORT" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">COHORT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'cohort'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseUserGroup.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseUserGroup.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup DoesNotExist" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GROUP_TYPE_CHOICES\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.GROUP_TYPE_CHOICES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.GROUP_TYPE_CHOICES" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup GROUP_TYPE_CHOICES" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.GROUP_TYPE_CHOICES" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.GROUP_TYPE_CHOICES" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">GROUP_TYPE_CHOICES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('cohort', 'Cohort'),)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseUserGroup.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseUserGroup.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup MultipleObjectsReturned" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cohort\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohort',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.cohort" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup cohort" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.cohort" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohort" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">cohort</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the reverse side of a one-to-one
                                relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Place.restaurant</literal> is a <literal>ReverseOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cohortmembership_set\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohortmembership_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.cohortmembership_set" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup cohortmembership_set" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.cohortmembership_set" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohortmembership_set" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">cohortmembership_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cohorttarget_set\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohorttarget_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.cohorttarget_set" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup cohorttarget_set" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.cohorttarget_set" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.cohorttarget_set" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">cohorttarget_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.course_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup course_id" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.course_id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.course_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'courseusergrouppartitiongroup\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.courseusergrouppartitiongroup',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.courseusergrouppartitiongroup" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup courseusergrouppartitiongroup" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.courseusergrouppartitiongroup" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.courseusergrouppartitiongroup" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">courseusergrouppartitiongroup</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the reverse side of a one-to-one
                                relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Place.restaurant</literal> is a <literal>ReverseOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ class\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroup.create()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup create" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.create" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.create" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">group_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'cohort'</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a new course user group.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>name</literal_strong> – Name of group</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>course_id</literal_strong> – course id</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>group_type</literal_strong> – group type</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'discussiontopiclink_set\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.discussiontopiclink_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.discussiontopiclink_set" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup discussiontopiclink_set" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.discussiontopiclink_set" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.discussiontopiclink_set" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">discussiontopiclink_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_group_type_display()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.get_group_type_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroup.get_group_type_display()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup get_group_type_display" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.get_group_type_display" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.get_group_type_display" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_group_type_display</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: group_type&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'group_type\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.group_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.group_type" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup group_type" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.group_type" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.group_type" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">group_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup id" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.name" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup name" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.name" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.name" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.objects" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup objects" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.objects" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'unregisteredlearnercohortassignments_set\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.unregisteredlearnercohortassignments_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.unregisteredlearnercohortassignments_set" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup unregisteredlearnercohortassignments_set" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.unregisteredlearnercohortassignments_set" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.unregisteredlearnercohortassignments_set" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">unregisteredlearnercohortassignments_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'users\ (openedx.core.djangoapps.course_groups.models.CourseUserGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroup.users',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroup.users" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroup users" class="CourseUserGroup" classes="sig sig-object py" fullname="CourseUserGroup.users" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroup.users" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">users</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the forward and reverse sides of
                                a many-to-many relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Pizza(Model):
    toppings = ManyToManyField(Topping, related_name='pizzas')</literal_block>
                            <paragraph><literal>Pizza.toppings</literal> and <literal>Topping.pizzas</literal> are <literal>ManyToManyDescriptor</literal>
                                instances.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseUserGroupPartitionGroup\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseUserGroupPartitionGroup" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup" class="" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseUserGroupPartitionGroup</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Create User Partition Info.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CourseUserGroupPartitionGroup.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup DoesNotExist" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseUserGroupPartitionGroup.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup MultipleObjectsReturned" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.course_user_group',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.course_user_group" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup course_user_group" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.course_user_group" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.course_user_group" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a one-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Restaurant(Model):
    place = OneToOneField(Place, related_name='restaurant')</literal_block>
                            <paragraph><literal>Restaurant.place</literal> is a <literal>ForwardOneToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group_id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.course_user_group_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.course_user_group_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup course_user_group_id" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.course_user_group_id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.course_user_group_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created_at\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.created_at',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.created_at" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup created_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.created_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.created_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">created_at</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_created_at()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_next_by_created_at',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.get_next_by_created_at()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup get_next_by_created_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.get_next_by_created_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_next_by_created_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_created_at</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: created_at&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_updated_at()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_next_by_updated_at',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.get_next_by_updated_at()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup get_next_by_updated_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.get_next_by_updated_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_next_by_updated_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_updated_at</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: updated_at&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_created_at()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_previous_by_created_at',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.get_previous_by_created_at()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup get_previous_by_created_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.get_previous_by_created_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_previous_by_created_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_created_at</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: created_at&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_updated_at()\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ method)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_previous_by_updated_at',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.get_previous_by_updated_at()" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup get_previous_by_updated_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.get_previous_by_updated_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.get_previous_by_updated_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_updated_at</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: updated_at&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'group_id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.group_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.group_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup group_id" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.group_id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.group_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">group_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup id" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.objects" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup objects" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.objects" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'partition_id\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.partition_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.partition_id" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup partition_id" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.partition_id" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.partition_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">partition_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'updated_at\ (openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.updated_at',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseUserGroupPartitionGroup.updated_at" _toc_parts="openedx.core.djangoapps.course_groups.models CourseUserGroupPartitionGroup updated_at" class="CourseUserGroupPartitionGroup" classes="sig sig-object py" fullname="CourseUserGroupPartitionGroup.updated_at" ids="openedx.core.djangoapps.course_groups.models.CourseUserGroupPartitionGroup.updated_at" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">updated_at</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UnregisteredLearnerCohortAssignments\ (class\ in\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="UnregisteredLearnerCohortAssignments" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments" class="" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UnregisteredLearnerCohortAssignments</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangolib.model_mixins.DeletableByUserValue" refuri="openedx.core.djangolib#openedx.core.djangolib.model_mixins.DeletableByUserValue"><literal classes="xref py py-class">DeletableByUserValue</literal></reference>, <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Tracks the assignment of an unregistered learner to a course’s cohort.</paragraph>
                    <comment xml:space="preserve">pii: The email field stores PII.</comment>
                    <comment xml:space="preserve">pii_types: email_address</comment>
                    <comment xml:space="preserve">pii_retirement: local_api</comment>
                    <index entries="['single',\ 'UnregisteredLearnerCohortAssignments.DoesNotExist',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.DoesNotExist" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments DoesNotExist" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.DoesNotExist" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.DoesNotExist" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'UnregisteredLearnerCohortAssignments.MultipleObjectsReturned',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments MultipleObjectsReturned" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.MultipleObjectsReturned" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.MultipleObjectsReturned" module="openedx.core.djangoapps.course_groups.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.course_id" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments course_id" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.course_id" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_user_group',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.course_user_group" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments course_user_group" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.course_user_group" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_user_group" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_user_group_id\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_user_group_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.course_user_group_id" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments course_user_group_id" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.course_user_group_id" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.course_user_group_id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">course_user_group_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'email\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.email',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.email" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments email" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.email" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.email" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">email</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.id" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments id" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.id" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.id" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments\ attribute)',\ 'openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UnregisteredLearnerCohortAssignments.objects" _toc_parts="openedx.core.djangoapps.course_groups.models UnregisteredLearnerCohortAssignments objects" class="UnregisteredLearnerCohortAssignments" classes="sig sig-object py" fullname="UnregisteredLearnerCohortAssignments.objects" ids="openedx.core.djangoapps.course_groups.models.UnregisteredLearnerCohortAssignments.objects" module="openedx.core.djangoapps.course_groups.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_user_from_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.models)',\ 'openedx.core.djangoapps.course_groups.models.remove_user_from_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_user_from_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.models remove_user_from_cohort" class="" classes="sig sig-object py" fullname="remove_user_from_cohort" ids="openedx.core.djangoapps.course_groups.models.remove_user_from_cohort" module="openedx.core.djangoapps.course_groups.models"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_user_from_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Ensures that when a CohortMemebrship is deleted, the underlying CourseUserGroup
                        has its users list updated to reflect the change as well.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.partition_scheme openedx-core-djangoapps-course-groups-partition-scheme-module" names="openedx.core.djangoapps.course_groups.partition_scheme\ module">
            <title>openedx.core.djangoapps.course_groups.partition_scheme module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.partition_scheme',\ 'module-openedx.core.djangoapps.course_groups.partition_scheme',\ '',\ None]"></index>
            <paragraph>Provides a UserPartition driver for cohorts.</paragraph>
            <index entries="['single',\ 'CohortPartitionScheme\ (class\ in\ openedx.core.djangoapps.course_groups.partition_scheme)',\ 'openedx.core.djangoapps.course_groups.partition_scheme.CohortPartitionScheme',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortPartitionScheme" _toc_parts="openedx.core.djangoapps.course_groups.partition_scheme CohortPartitionScheme" class="" classes="sig sig-object py" fullname="CohortPartitionScheme" ids="openedx.core.djangoapps.course_groups.partition_scheme.CohortPartitionScheme" module="openedx.core.djangoapps.course_groups.partition_scheme"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.partition_scheme.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortPartitionScheme</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>This scheme uses lms cohorts (CourseUserGroups) and cohort-partition
                        mappings (CourseUserGroupPartitionGroup) to map lms users into Partition
                        Groups.</paragraph>
                    <index entries="['single',\ 'get_group_for_user()\ (openedx.core.djangoapps.course_groups.partition_scheme.CohortPartitionScheme\ class\ method)',\ 'openedx.core.djangoapps.course_groups.partition_scheme.CohortPartitionScheme.get_group_for_user',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortPartitionScheme.get_group_for_user()" _toc_parts="openedx.core.djangoapps.course_groups.partition_scheme CohortPartitionScheme get_group_for_user" class="CohortPartitionScheme" classes="sig sig-object py" fullname="CohortPartitionScheme.get_group_for_user" ids="openedx.core.djangoapps.course_groups.partition_scheme.CohortPartitionScheme.get_group_for_user" module="openedx.core.djangoapps.course_groups.partition_scheme"><desc_annotation xml:space="preserve">classmethod<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_group_for_user</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_partition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_cached</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the Group from the specified user partition to which the user
                                is assigned, via their cohort membership and any mappings from cohorts
                                to partitions / groups that might exist.</paragraph>
                            <paragraph>If the user has not yet been assigned to a cohort, an assignment <emphasis>might</emphasis>
                                be created on-the-fly, as determined by the course’s cohort config.
                                Any such side-effects will be triggered inside the call to
                                cohorts.get_cohort().</paragraph>
                            <paragraph>If the user has no cohort mapping, or there is no (valid) cohort -&gt;
                                partition group mapping found, the function returns None.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cohorted_user_partition()\ (in\ module\ openedx.core.djangoapps.course_groups.partition_scheme)',\ 'openedx.core.djangoapps.course_groups.partition_scheme.get_cohorted_user_partition',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cohorted_user_partition()" _toc_parts="openedx.core.djangoapps.course_groups.partition_scheme get_cohorted_user_partition" class="" classes="sig sig-object py" fullname="get_cohorted_user_partition" ids="openedx.core.djangoapps.course_groups.partition_scheme.get_cohorted_user_partition" module="openedx.core.djangoapps.course_groups.partition_scheme"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.partition_scheme.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cohorted_user_partition</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the first user partition from the specified course which uses the CohortPartitionScheme,
                        or None if one is not found. Note that it is currently recommended that each course have only
                        one cohorted user partition.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.permissions openedx-core-djangoapps-course-groups-permissions-module" names="openedx.core.djangoapps.course_groups.permissions\ module">
            <title>openedx.core.djangoapps.course_groups.permissions module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.permissions',\ 'module-openedx.core.djangoapps.course_groups.permissions',\ '',\ None]"></index>
            <paragraph>Permissions for cohorts API</paragraph>
            <index entries="['single',\ 'IsStaffOrAdmin\ (class\ in\ openedx.core.djangoapps.course_groups.permissions)',\ 'openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="IsStaffOrAdmin" _toc_parts="openedx.core.djangoapps.course_groups.permissions IsStaffOrAdmin" class="" classes="sig sig-object py" fullname="IsStaffOrAdmin" ids="openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin" module="openedx.core.djangoapps.course_groups.permissions"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.permissions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">IsStaffOrAdmin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BasePermission</literal></paragraph>
                    <paragraph>Permission that checks if the user is staff or an admin.</paragraph>
                    <index entries="['single',\ 'has_permission()\ (openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin\ method)',\ 'openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin.has_permission',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IsStaffOrAdmin.has_permission()" _toc_parts="openedx.core.djangoapps.course_groups.permissions IsStaffOrAdmin has_permission" class="IsStaffOrAdmin" classes="sig sig-object py" fullname="IsStaffOrAdmin.has_permission" ids="openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin.has_permission" module="openedx.core.djangoapps.course_groups.permissions"><desc_name classes="sig-name descname" xml:space="preserve">has_permission</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">view</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns true if the user is admin or staff and request method is GET.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.serializers openedx-core-djangoapps-course-groups-serializers-module" names="openedx.core.djangoapps.course_groups.serializers\ module">
            <title>openedx.core.djangoapps.course_groups.serializers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.serializers',\ 'module-openedx.core.djangoapps.course_groups.serializers',\ '',\ None]"></index>
            <paragraph>Cohorts API serializers.</paragraph>
            <index entries="['single',\ 'CohortUsersAPISerializer\ (class\ in\ openedx.core.djangoapps.course_groups.serializers)',\ 'openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortUsersAPISerializer" _toc_parts="openedx.core.djangoapps.course_groups.serializers CohortUsersAPISerializer" class="" classes="sig sig-object py" fullname="CohortUsersAPISerializer" ids="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer" module="openedx.core.djangoapps.course_groups.serializers"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortUsersAPISerializer</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ModelSerializer</literal></paragraph>
                    <paragraph>Serializer for cohort users.</paragraph>
                    <index entries="['single',\ 'CohortUsersAPISerializer.Meta\ (class\ in\ openedx.core.djangoapps.course_groups.serializers)',\ 'openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="CohortUsersAPISerializer.Meta" _toc_parts="openedx.core.djangoapps.course_groups.serializers CohortUsersAPISerializer Meta" class="CohortUsersAPISerializer" classes="sig sig-object py" fullname="CohortUsersAPISerializer.Meta" ids="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta" module="openedx.core.djangoapps.course_groups.serializers"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">Meta</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <index entries="['single',\ 'fields\ (openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta\ attribute)',\ 'openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta.fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="CohortUsersAPISerializer.Meta.fields" _toc_parts="openedx.core.djangoapps.course_groups.serializers CohortUsersAPISerializer Meta fields" class="CohortUsersAPISerializer.Meta" classes="sig sig-object py" fullname="CohortUsersAPISerializer.Meta.fields" ids="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta.fields" module="openedx.core.djangoapps.course_groups.serializers"><desc_name classes="sig-name descname" xml:space="preserve">fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>('username', 'email', 'name')</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'model\ (openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta\ attribute)',\ 'openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta.model',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="CohortUsersAPISerializer.Meta.model" _toc_parts="openedx.core.djangoapps.course_groups.serializers CohortUsersAPISerializer Meta model" class="CohortUsersAPISerializer.Meta" classes="sig sig-object py" fullname="CohortUsersAPISerializer.Meta.model" ids="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.Meta.model" module="openedx.core.djangoapps.course_groups.serializers"><desc_name classes="sig-name descname" xml:space="preserve">model</desc_name></desc_signature>
                                <desc_content>
                                    <paragraph>alias of <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User"><literal classes="xref py py-class">User</literal></reference></paragraph>
                                </desc_content>
                            </desc>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_full_name()\ (openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer\ method)',\ 'openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.get_full_name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortUsersAPISerializer.get_full_name()" _toc_parts="openedx.core.djangoapps.course_groups.serializers CohortUsersAPISerializer get_full_name" class="CohortUsersAPISerializer" classes="sig sig-object py" fullname="CohortUsersAPISerializer.get_full_name" ids="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer.get_full_name" module="openedx.core.djangoapps.course_groups.serializers"><desc_name classes="sig-name descname" xml:space="preserve">get_full_name</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return the full name of the user.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.urls openedx-core-djangoapps-course-groups-urls-module" names="openedx.core.djangoapps.course_groups.urls\ module">
            <title>openedx.core.djangoapps.course_groups.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.urls',\ 'module-openedx.core.djangoapps.course_groups.urls',\ '',\ None]"></index>
            <paragraph>Cohort API URLs</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups.views openedx-core-djangoapps-course-groups-views-module" names="openedx.core.djangoapps.course_groups.views\ module">
            <title>openedx.core.djangoapps.course_groups.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups.views',\ 'module-openedx.core.djangoapps.course_groups.views',\ '',\ None]"></index>
            <paragraph>Views related to course groups functionality.</paragraph>
            <index entries="['single',\ 'APIPermissions\ (class\ in\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.APIPermissions',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="APIPermissions" _toc_parts="openedx.core.djangoapps.course_groups.views APIPermissions" class="" classes="sig sig-object py" fullname="APIPermissions" ids="openedx.core.djangoapps.course_groups.views.APIPermissions" module="openedx.core.djangoapps.course_groups.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">APIPermissions</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">GenericAPIView</literal></paragraph>
                    <paragraph>Helper class defining the authentication and permission class for the subclass views.</paragraph>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.course_groups.views.APIPermissions\ attribute)',\ 'openedx.core.djangoapps.course_groups.views.APIPermissions.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="APIPermissions.authentication_classes" _toc_parts="openedx.core.djangoapps.course_groups.views APIPermissions authentication_classes" class="APIPermissions" classes="sig sig-object py" fullname="APIPermissions.authentication_classes" ids="openedx.core.djangoapps.course_groups.views.APIPermissions.authentication_classes" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.course_groups.views.APIPermissions\ attribute)',\ 'openedx.core.djangoapps.course_groups.views.APIPermissions.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="APIPermissions.permission_classes" _toc_parts="openedx.core.djangoapps.course_groups.views APIPermissions permission_classes" class="APIPermissions" classes="sig sig-object py" fullname="APIPermissions.permission_classes" ids="openedx.core.djangoapps.course_groups.views.APIPermissions.permission_classes" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'openedx.core.djangoapps.course_groups.permissions.IsStaffOrAdmin'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (openedx.core.djangoapps.course_groups.views.APIPermissions\ attribute)',\ 'openedx.core.djangoapps.course_groups.views.APIPermissions.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="APIPermissions.serializer_class" _toc_parts="openedx.core.djangoapps.course_groups.views APIPermissions serializer_class" class="APIPermissions" classes="sig sig-object py" fullname="APIPermissions.serializer_class" ids="openedx.core.djangoapps.course_groups.views.APIPermissions.serializer_class" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <literal classes="xref py py-class">Serializer</literal></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortHandler\ (class\ in\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.CohortHandler',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortHandler" _toc_parts="openedx.core.djangoapps.course_groups.views CohortHandler" class="" classes="sig sig-object py" fullname="CohortHandler" ids="openedx.core.djangoapps.course_groups.views.CohortHandler" module="openedx.core.djangoapps.course_groups.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortHandler</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal classes="xref py py-class">DeveloperErrorViewMixin</literal></reference>, <reference internal="True" refid="openedx.core.djangoapps.course_groups.views.APIPermissions" reftitle="openedx.core.djangoapps.course_groups.views.APIPermissions"><literal classes="xref py py-class">APIPermissions</literal></reference></paragraph>
                    <paragraph><strong>Use Cases</strong></paragraph>
                    <block_quote>
                        <paragraph>Get the current cohorts in a course.
                            Create a new cohort in a course.
                            Modify a cohort in a course.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example Requests</strong>:</paragraph>
                    <block_quote>
                        <paragraph>GET /api/cohorts/v1/courses/{course_id}/cohorts
                            POST /api/cohorts/v1/courses/{course_id}/cohorts
                            GET /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}
                            PATCH /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values</strong></paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>cohorts: List of cohorts.</paragraph>
                            </list_item>
                            <list_item>
                                <definition_list>
                                    <definition_list_item>
                                        <term>cohort: A cohort representation:</term>
                                        <definition>
                                            <bullet_list bullet="*">
                                                <list_item>
                                                    <paragraph>name: The string identifier for a cohort.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>id: The integer identifier for a cohort.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>user_count: The number of students in the cohort.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>assignment_type: The string representing the assignment type.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>user_partition_id: The integer identified of the UserPartition.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>group_id: The integer identified of the specific group in the partition.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.course_groups.views.CohortHandler\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortHandler.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortHandler.get()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortHandler get" class="CohortHandler" classes="sig sig-object py" fullname="CohortHandler.get" ids="openedx.core.djangoapps.course_groups.views.CohortHandler.get" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Endpoint to get either one or all cohorts.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'patch()\ (openedx.core.djangoapps.course_groups.views.CohortHandler\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortHandler.patch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortHandler.patch()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortHandler patch" class="CohortHandler" classes="sig sig-object py" fullname="CohortHandler.patch" ids="openedx.core.djangoapps.course_groups.views.CohortHandler.patch" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">patch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Endpoint to update a cohort name and/or assignment type.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (openedx.core.djangoapps.course_groups.views.CohortHandler\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortHandler.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortHandler.post()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortHandler post" class="CohortHandler" classes="sig sig-object py" fullname="CohortHandler.post" ids="openedx.core.djangoapps.course_groups.views.CohortHandler.post" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Endpoint to create a new cohort, must not include cohort_id.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'queryset\ (openedx.core.djangoapps.course_groups.views.CohortHandler\ attribute)',\ 'openedx.core.djangoapps.course_groups.views.CohortHandler.queryset',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortHandler.queryset" _toc_parts="openedx.core.djangoapps.course_groups.views CohortHandler queryset" class="CohortHandler" classes="sig sig-object py" fullname="CohortHandler.queryset" ids="openedx.core.djangoapps.course_groups.views.CohortHandler.queryset" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">queryset</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>[]</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortSettings\ (class\ in\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.CohortSettings',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortSettings" _toc_parts="openedx.core.djangoapps.course_groups.views CohortSettings" class="" classes="sig sig-object py" fullname="CohortSettings" ids="openedx.core.djangoapps.course_groups.views.CohortSettings" module="openedx.core.djangoapps.course_groups.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortSettings</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal classes="xref py py-class">DeveloperErrorViewMixin</literal></reference>, <reference internal="True" refid="openedx.core.djangoapps.course_groups.views.APIPermissions" reftitle="openedx.core.djangoapps.course_groups.views.APIPermissions"><literal classes="xref py py-class">APIPermissions</literal></reference></paragraph>
                    <paragraph><strong>Use Cases</strong></paragraph>
                    <block_quote>
                        <paragraph>Get the cohort setting for a course.
                            Set the cohort setting for a course.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example Requests</strong>:</paragraph>
                    <block_quote>
                        <paragraph>GET /api/cohorts/v1/settings/{course_id}
                            PUT /api/cohorts/v1/settings/{course_id}</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values</strong></paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>is_cohorted: current status of the cohort setting</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.course_groups.views.CohortSettings\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortSettings.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortSettings.get()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortSettings get" class="CohortSettings" classes="sig sig-object py" fullname="CohortSettings.get" ids="openedx.core.djangoapps.course_groups.views.CohortSettings.get" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Endpoint to fetch the course cohort settings.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'put()\ (openedx.core.djangoapps.course_groups.views.CohortSettings\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortSettings.put',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortSettings.put()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortSettings put" class="CohortSettings" classes="sig sig-object py" fullname="CohortSettings.put" ids="openedx.core.djangoapps.course_groups.views.CohortSettings.put" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">put</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Endpoint to set the course cohort settings.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CohortUsers\ (class\ in\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.CohortUsers',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CohortUsers" _toc_parts="openedx.core.djangoapps.course_groups.views CohortUsers" class="" classes="sig sig-object py" fullname="CohortUsers" ids="openedx.core.djangoapps.course_groups.views.CohortUsers" module="openedx.core.djangoapps.course_groups.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CohortUsers</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal classes="xref py py-class">DeveloperErrorViewMixin</literal></reference>, <reference internal="True" refid="openedx.core.djangoapps.course_groups.views.APIPermissions" reftitle="openedx.core.djangoapps.course_groups.views.APIPermissions"><literal classes="xref py py-class">APIPermissions</literal></reference></paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term><strong>Use Cases</strong></term>
                            <definition>
                                <paragraph>List users in a cohort
                                    Removes an user from a cohort.
                                    Add a user to a specific cohort.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph><strong>Example Requests</strong></paragraph>
                    <block_quote>
                        <paragraph>GET /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}/users
                            DELETE /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}/users/{username}
                            POST /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}/users/{username}
                            POST /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}/users</paragraph>
                    </block_quote>
                    <paragraph><strong>GET list of users in a cohort request parameters</strong></paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>course_id (required): The course id of the course the cohort belongs to.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>cohort_id (required): The cohort id of the cohort to list the users in.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>page_size: A query string parameter with the number of results to return per page.
                                    Optional. Default: 10. Maximum: 100.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>page: A query string parameter with the page number to retrieve. Optional. Default: 1.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph>** POST add a user to a cohort request parameters**</paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>course_id (required): The course id of the course the cohort belongs to.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>cohort_id (required): The cohort id of the cohort to list the users in.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>users (required): A body JSON parameter with a list of usernames/email addresses of users
                                    to be added to the cohort.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph>** DELETE remove a user from a cohort request parameters**</paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>course_id (required): The course id of the course the cohort belongs to.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>cohort_id (required): The cohort id of the cohort to list the users in.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>username (required): The username of the user to be removed from the given cohort.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>GET Response Values</strong></paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>Returns a HTTP 404 Not Found response status code when:</term>
                                <definition>
                                    <bullet_list bullet="*">
                                        <list_item>
                                            <paragraph>The course corresponding to the corresponding course id could not be found.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The requesting user does not have staff access to the course.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The cohort corresponding to the given cohort id could not be found.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>Returns a HTTP 200 OK response status code to indicate success.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>count: Number of users enrolled in the given cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>num_pages: Total number of pages of results.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>current_page: Current page number.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>start: The list index of the first item in the response.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>previous: The URL of the previous page of results or null if it is the first page.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>next: The URL of the next page of results or null if it is the last page.</paragraph>
                            </list_item>
                            <list_item>
                                <definition_list>
                                    <definition_list_item>
                                        <term>results: A list of users in the cohort.</term>
                                        <definition>
                                            <bullet_list bullet="*">
                                                <list_item>
                                                    <paragraph>username: Username of the user.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>email: Email address of the user.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph>name: Full name of the user.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>POST Response Values</strong></paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>Returns a HTTP 404 Not Found response status code when:</term>
                                <definition>
                                    <bullet_list bullet="*">
                                        <list_item>
                                            <paragraph>The course corresponding to the corresponding course id could not be found.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The requesting user does not have staff access to the course.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The cohort corresponding to the given cohort id could not be found.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>Returns a HTTP 200 OK response status code to indicate success.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>success: Boolean indicating if the operation was successful.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>added: Usernames/emails of the users that have been added to the cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>changed: Usernames/emails of the users that have been moved to the cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>present: Usernames/emails of the users already present in the cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>unknown: Usernames/emails of the users with an unknown cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>preassigned: Usernames/emails of unenrolled users that have been preassigned to the cohort.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>invalid: Invalid emails submitted.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph>Adding multiple users to a cohort, send a request to:
                        POST /api/cohorts/v1/courses/{course_id}/cohorts/{cohort_id}/users</paragraph>
                    <paragraph>With a payload such as:
                        {</paragraph>
                    <block_quote>
                        <paragraph>“users”: [username1, username2, username3…]</paragraph>
                    </block_quote>
                    <paragraph>}</paragraph>
                    <paragraph><strong>DELETE Response Values</strong></paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>Returns a HTTP 404 Not Found response status code when:</term>
                                <definition>
                                    <bullet_list bullet="*">
                                        <list_item>
                                            <paragraph>The course corresponding to the corresponding course id could not be found.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The requesting user does not have staff access to the course.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The cohort corresponding to the given cohort id could not be found.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The user corresponding to the given username could not be found.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>Returns a HTTP 204 No Content response status code to indicate success.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'delete()\ (openedx.core.djangoapps.course_groups.views.CohortUsers\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortUsers.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortUsers.delete()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortUsers delete" class="CohortUsers" classes="sig sig-object py" fullname="CohortUsers.delete" ids="openedx.core.djangoapps.course_groups.views.CohortUsers.delete" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Removes and user from a specific cohort.</paragraph>
                            <paragraph>Note: It’s better to use the post method to move users between cohorts.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.course_groups.views.CohortUsers\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortUsers.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortUsers.get()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortUsers get" class="CohortUsers" classes="sig sig-object py" fullname="CohortUsers.get" ids="openedx.core.djangoapps.course_groups.views.CohortUsers.get" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Lists the users in a specific cohort.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (openedx.core.djangoapps.course_groups.views.CohortUsers\ method)',\ 'openedx.core.djangoapps.course_groups.views.CohortUsers.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CohortUsers.post()" _toc_parts="openedx.core.djangoapps.course_groups.views CohortUsers post" class="CohortUsers" classes="sig sig-object py" fullname="CohortUsers.post" ids="openedx.core.djangoapps.course_groups.views.CohortUsers.post" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Add given users to the cohort.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (openedx.core.djangoapps.course_groups.views.CohortUsers\ attribute)',\ 'openedx.core.djangoapps.course_groups.views.CohortUsers.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CohortUsers.serializer_class" _toc_parts="openedx.core.djangoapps.course_groups.views CohortUsers serializer_class" class="CohortUsers" classes="sig sig-object py" fullname="CohortUsers.serializer_class" ids="openedx.core.djangoapps.course_groups.views.CohortUsers.serializer_class" module="openedx.core.djangoapps.course_groups.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer" reftitle="openedx.core.djangoapps.course_groups.serializers.CohortUsersAPISerializer"><literal classes="xref py py-class">CohortUsersAPISerializer</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'add_users_to_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.add_users_to_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="add_users_to_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.views add_users_to_cohort" class="" classes="sig sig-object py" fullname="add_users_to_cohort" ids="openedx.core.djangoapps.course_groups.views.add_users_to_cohort" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">add_users_to_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return json dict of:</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>{‘success’: True,</term>
                            <definition>
                                <definition_list>
                                    <definition_list_item>
                                        <term>‘added’: [{‘username’: …,</term>
                                        <definition>
                                            <paragraph>‘name’: …,
                                                ‘email’: …}, …],</paragraph>
                                        </definition>
                                    </definition_list_item>
                                    <definition_list_item>
                                        <term>‘changed’: [{‘username’: …,</term>
                                        <definition>
                                            <paragraph>‘name’: …,
                                                ‘email’: …,
                                                ‘previous_cohort’: …}, …],</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                                <paragraph>‘present’: [str1, str2, …],    # already there
                                    ‘unknown’: [str1, str2, …],
                                    ‘preassigned’: [str1, str2, …],
                                    ‘invalid’: [str1, str2, …]}</paragraph>
                                <paragraph>Raises Http404 if the cohort cannot be found for the given course.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'cohort_handler()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.cohort_handler',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="cohort_handler()" _toc_parts="openedx.core.djangoapps.course_groups.views cohort_handler" class="" classes="sig sig-object py" fullname="cohort_handler" ids="openedx.core.djangoapps.course_groups.views.cohort_handler" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">cohort_handler</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>The restful handler for cohort requests. Requires JSON.
                        GET</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>If a cohort ID is specified, returns a JSON representation of the cohort</term>
                                <definition>
                                    <paragraph>(name, id, user_count, assignment_type, user_partition_id, group_id).</paragraph>
                                </definition>
                            </definition_list_item>
                            <definition_list_item>
                                <term>If no cohort ID is specified, returns the JSON representation of all cohorts.</term>
                                <definition>
                                    <paragraph>This is returned as a dict with the list of cohort information stored under the
                                        key <title_reference>cohorts</title_reference>.</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>PUT or POST or PATCH</term>
                            <definition>
                                <paragraph>If a cohort ID is specified, updates the cohort with the specified ID. Currently the only
                                    properties that can be updated are <title_reference>name</title_reference>, <title_reference>user_partition_id</title_reference> and <title_reference>group_id</title_reference>.
                                    Returns the JSON representation of the updated cohort.
                                    If no cohort ID is specified, creates a new cohort and returns the JSON representation of the updated
                                    cohort.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_cohort_settings_handler()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.course_cohort_settings_handler',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_cohort_settings_handler()" _toc_parts="openedx.core.djangoapps.course_groups.views course_cohort_settings_handler" class="" classes="sig sig-object py" fullname="course_cohort_settings_handler" ids="openedx.core.djangoapps.course_groups.views.course_cohort_settings_handler" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_cohort_settings_handler</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>The restful handler for cohort setting requests. Requires JSON.
                        This will raise 404 if user is not staff.
                        GET</paragraph>
                    <block_quote>
                        <paragraph>Returns the JSON representation of cohort settings for the course.</paragraph>
                    </block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>PATCH</term>
                            <definition>
                                <paragraph>Updates the cohort settings for the course. Returns the JSON representation of updated settings.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'debug_cohort_mgmt()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.debug_cohort_mgmt',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="debug_cohort_mgmt()" _toc_parts="openedx.core.djangoapps.course_groups.views debug_cohort_mgmt" class="" classes="sig sig-object py" fullname="debug_cohort_mgmt" ids="openedx.core.djangoapps.course_groups.views.debug_cohort_mgmt" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">debug_cohort_mgmt</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Debugging view for dev.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'json_http_response()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.json_http_response',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="json_http_response()" _toc_parts="openedx.core.djangoapps.course_groups.views json_http_response" class="" classes="sig sig-object py" fullname="json_http_response" ids="openedx.core.djangoapps.course_groups.views.json_http_response" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">json_http_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return an HttpResponse with the data json-serialized and the right content
                        type header.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'link_cohort_to_partition_group()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.link_cohort_to_partition_group',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="link_cohort_to_partition_group()" _toc_parts="openedx.core.djangoapps.course_groups.views link_cohort_to_partition_group" class="" classes="sig sig-object py" fullname="link_cohort_to_partition_group" ids="openedx.core.djangoapps.course_groups.views.link_cohort_to_partition_group" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">link_cohort_to_partition_group</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">partition_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">group_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create cohort to partition_id/group_id link.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_user_from_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.remove_user_from_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_user_from_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.views remove_user_from_cohort" class="" classes="sig sig-object py" fullname="remove_user_from_cohort" ids="openedx.core.djangoapps.course_groups.views.remove_user_from_cohort" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_user_from_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Expects ‘username’: username in POST data.</paragraph>
                    <paragraph>Return json dict of:</paragraph>
                    <paragraph>{‘success’: True} or
                        {‘success’: False,</paragraph>
                    <block_quote>
                        <paragraph>‘msg’: error_msg}</paragraph>
                    </block_quote>
                </desc_content>
            </desc>
            <index entries="['single',\ 'split_by_comma_and_whitespace()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.split_by_comma_and_whitespace',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="split_by_comma_and_whitespace()" _toc_parts="openedx.core.djangoapps.course_groups.views split_by_comma_and_whitespace" class="" classes="sig sig-object py" fullname="split_by_comma_and_whitespace" ids="openedx.core.djangoapps.course_groups.views.split_by_comma_and_whitespace" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">split_by_comma_and_whitespace</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cstr</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Split a string both by commas and whitespace.  Returns a list.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'unlink_cohort_partition_group()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.unlink_cohort_partition_group',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="unlink_cohort_partition_group()" _toc_parts="openedx.core.djangoapps.course_groups.views unlink_cohort_partition_group" class="" classes="sig sig-object py" fullname="unlink_cohort_partition_group" ids="openedx.core.djangoapps.course_groups.views.unlink_cohort_partition_group" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">unlink_cohort_partition_group</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove any existing cohort to partition_id/group_id link.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'users_in_cohort()\ (in\ module\ openedx.core.djangoapps.course_groups.views)',\ 'openedx.core.djangoapps.course_groups.views.users_in_cohort',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="users_in_cohort()" _toc_parts="openedx.core.djangoapps.course_groups.views users_in_cohort" class="" classes="sig sig-object py" fullname="users_in_cohort" ids="openedx.core.djangoapps.course_groups.views.users_in_cohort" module="openedx.core.djangoapps.course_groups.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.course_groups.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">users_in_cohort</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cohort_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return users in the cohort.  Show up to 100 per page, and page
                        using the ‘page’ GET attribute in the call.  Format:</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph><definition_list><definition_list_item><term>{‘success’: True,</term><definition><paragraph>’page’: page,
                                                    ‘num_pages’: paginator.num_pages,
                                                    ‘users’: [{‘username’: …, ‘email’: …, ‘name’: …}]</paragraph></definition></definition_list_item></definition_list></paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>Json dump of dictionary in the following format</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>}</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.course_groups module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.course_groups',\ 'module-openedx.core.djangoapps.course_groups',\ '',\ None]"></index>
        </section>
    </section>
</document>
