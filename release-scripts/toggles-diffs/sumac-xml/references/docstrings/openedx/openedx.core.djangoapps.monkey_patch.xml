<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.monkey_patch.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-monkey-patch-package" names="openedx.core.djangoapps.monkey_patch\ package">
        <title>openedx.core.djangoapps.monkey_patch package</title>
        <section ids="module-openedx.core.djangoapps.monkey_patch module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.monkey_patch',\ 'module-openedx.core.djangoapps.monkey_patch',\ '',\ None]"></index>
            <paragraph>Monkey-patch the edX platform</paragraph>
            <paragraph>Here be dragons (and simians!)</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>USE WITH CAUTION *</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>No, but seriously, you probably never really want to make changes here.
                This module contains methods to monkey-patch [0] the edx-platform.
                Patches are to be applied as early as possible in the callstack
                (currently lms/startup.py and cms/startup.py). Consequently, changes
                made here will affect the entire platform.</paragraph>
            <paragraph>That said, if you’ve decided you really need to monkey-patch the
                platform (and you’ve convinced enough people that this is best
                solution), kindly follow these guidelines:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Reference django_18_upgrade.py for a sample implementation.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Name your module by replacing periods with underscores for the
                            module to be patched:</paragraph>
                        <block_quote>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>patching ‘django.utils.translation’
                                        becomes ‘django_utils_translation’</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>patching ‘your.module’
                                        becomes ‘your_module’</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                    </list_item>
                    <list_item>
                        <paragraph>Implement argumentless function wrappers in
                            monkey_patch.your_module for the following:</paragraph>
                        <block_quote>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>is_patched</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>patch</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>unpatch</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                    </list_item>
                    <list_item>
                        <paragraph>Add the following code where needed (typically cms/startup.py and
                            lms/startup.py):</paragraph>
                        <block_quote>
                            <paragraph><literal>`
from openedx.core.djangoapps.monkey_patch import your_module
your_module.patch()
`</literal></paragraph>
                        </block_quote>
                    </list_item>
                    <list_item>
                        <paragraph>Write tests! All code should be tested anyway, but with code that
                            patches the platform runtime, we must be extra sure there are no
                            unintended consequences.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <paragraph>[0] <reference refuri="http://en.wikipedia.org/wiki/Monkey_patch">http://en.wikipedia.org/wiki/Monkey_patch</reference></paragraph>
            <index entries="['single',\ 'is_patched()\ (in\ module\ openedx.core.djangoapps.monkey_patch)',\ 'openedx.core.djangoapps.monkey_patch.is_patched',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_patched()" _toc_parts="openedx.core.djangoapps.monkey_patch is_patched" class="" classes="sig sig-object py" fullname="is_patched" ids="openedx.core.djangoapps.monkey_patch.is_patched" module="openedx.core.djangoapps.monkey_patch"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.monkey_patch.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_patched</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attribute_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if an attribute has been monkey-patched</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'patch()\ (in\ module\ openedx.core.djangoapps.monkey_patch)',\ 'openedx.core.djangoapps.monkey_patch.patch',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="patch()" _toc_parts="openedx.core.djangoapps.monkey_patch patch" class="" classes="sig sig-object py" fullname="patch" ids="openedx.core.djangoapps.monkey_patch.patch" module="openedx.core.djangoapps.monkey_patch"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.monkey_patch.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">patch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attribute_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attribute_replacement</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Monkey-patch an attribute</paragraph>
                    <paragraph>A backup of the original attribute is preserved in the patched
                        attribute (see: __BACKUP_ATTRIBUTE_NAME).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'unpatch()\ (in\ module\ openedx.core.djangoapps.monkey_patch)',\ 'openedx.core.djangoapps.monkey_patch.unpatch',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="unpatch()" _toc_parts="openedx.core.djangoapps.monkey_patch unpatch" class="" classes="sig sig-object py" fullname="unpatch" ids="openedx.core.djangoapps.monkey_patch.unpatch" module="openedx.core.djangoapps.monkey_patch"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.monkey_patch.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">unpatch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">module</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">attribute_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Un-monkey-patch an attribute</paragraph>
                    <paragraph>Restore a backup of the original attribute from the patched
                        attribute, iff it exists (see: __BACKUP_ATTRIBUTE_NAME).</paragraph>
                    <paragraph>Return boolean whether or not the attribute could be unpatched</paragraph>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
