<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.user_api.preferences.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-user-api-preferences-package" names="openedx.core.djangoapps.user_api.preferences\ package">
        <title>openedx.core.djangoapps.user_api.preferences package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.preferences.api openedx-core-djangoapps-user-api-preferences-api-module" names="openedx.core.djangoapps.user_api.preferences.api\ module">
            <title>openedx.core.djangoapps.user_api.preferences.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.preferences.api',\ 'module-openedx.core.djangoapps.user_api.preferences.api',\ '',\ None]"></index>
            <paragraph>API for managing user preferences.</paragraph>
            <index entries="['single',\ 'create_user_preference_serializer()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.create_user_preference_serializer',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_user_preference_serializer()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api create_user_preference_serializer" class="" classes="sig sig-object py" fullname="create_user_preference_serializer" ids="openedx.core.djangoapps.user_api.preferences.api.create_user_preference_serializer" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_user_preference_serializer</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Creates a serializer for the specified user preference.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user whose preference is being serialized.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_value</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The value to be stored. Non-string values will be converted to strings.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A serializer that can be used to save the user preference.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'delete_user_preference()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.delete_user_preference',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_user_preference()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api delete_user_preference" class="" classes="sig sig-object py" fullname="delete_user_preference" ids="openedx.core.djangoapps.user_api.preferences.api.delete_user_preference" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_user_preference</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Deletes a user preference on behalf of a requesting user.</paragraph>
                    <note>
                        <paragraph>It is up to the caller of this method to enforce the contract that this method is only called
                            with the user who made the request.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting to delete the preference. Only the user with username
                                            ‘username’ has permissions to delete their own preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Optional username specifying which account should be updated. If not specified,
                                            <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if the preference was deleted, False if the user did not have a preference with the supplied key.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to change the account
                                                associated with <title_reference>username</title_reference></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceUpdateError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceUpdateError"><literal_strong>PreferenceUpdateError</literal_strong></reference> – the operation failed when performing the update.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_country_time_zones()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.get_country_time_zones',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_country_time_zones()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api get_country_time_zones" class="" classes="sig sig-object py" fullname="get_country_time_zones" ids="openedx.core.djangoapps.user_api.preferences.api.get_country_time_zones" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_country_time_zones</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">country_code</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a sorted list of time zones commonly used in the specified
                        country.  If country_code is None (or unrecognized), or if the country
                        has no defined time zones, return a list of all time zones.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>country_code</literal_strong> (<literal_emphasis>str</literal_emphasis>) – ISO 3166-1 Alpha-2 country code</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_user_preference()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.get_user_preference',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_user_preference()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api get_user_preference" class="" classes="sig sig-object py" fullname="get_user_preference" ids="openedx.core.djangoapps.user_api.preferences.api.get_user_preference" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_user_preference</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the value of the user preference with the specified key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting the user preferences. Only the user with username
                                            <title_reference>username</title_reference> or users with “is_staff” privileges can access the preferences.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Optional username for which to look up the preferences. If not specified,
                                            <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The value for the user preference which is always a string, or None if a preference
                                    has not been specified.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_user_preferences()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.get_user_preferences',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_user_preferences()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api get_user_preferences" class="" classes="sig sig-object py" fullname="get_user_preferences" ids="openedx.core.djangoapps.user_api.preferences.api.get_user_preferences" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_user_preferences</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns all user preferences as a JSON response.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting the user preferences. Only the user with username
                                            <title_reference>username</title_reference> or users with “is_staff” privileges can access the preferences.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Optional username for which to look up the preferences. If not specified,
                                            <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A dict containing account fields.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'has_user_preference()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.has_user_preference',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="has_user_preference()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api has_user_preference" class="" classes="sig sig-object py" fullname="has_user_preference" ids="openedx.core.djangoapps.user_api.preferences.api.has_user_preference" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">has_user_preference</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns True if the user has preference with the specified key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting the user preference check. Only the user with username
                                            <title_reference>username</title_reference> or users with “is_staff” privileges can access the preferences.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Optional username for which to look up the preferences. If not specified,
                                            <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Returns True if the user has preference with the specified key and False otherwise.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>(bool)</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_user_preference()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.set_user_preference',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_user_preference()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api set_user_preference" class="" classes="sig sig-object py" fullname="set_user_preference" ids="openedx.core.djangoapps.user_api.preferences.api.set_user_preference" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_user_preference</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update a user preference for the given username.</paragraph>
                    <note>
                        <paragraph>It is up to the caller of this method to enforce the contract that this method is only called
                            with the user who made the request.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting to modify account information. Only the user with username
                                            ‘username’ has permissions to modify account information.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_value</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The value to be stored. Non-string values are converted to strings.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Optional username specifying which account should be updated. If not specified,
                                            <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to change the account
                                                associated with <title_reference>username</title_reference></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceValidationError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceValidationError"><literal_strong>PreferenceValidationError</literal_strong></reference> – the update was not attempted because validation errors were found</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceUpdateError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceUpdateError"><literal_strong>PreferenceUpdateError</literal_strong></reference> – the operation failed when performing the update.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_email_opt_in()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.update_email_opt_in',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_email_opt_in()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api update_email_opt_in" class="" classes="sig sig-object py" fullname="update_email_opt_in" ids="openedx.core.djangoapps.user_api.preferences.api.update_email_opt_in" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_email_opt_in</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">org</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">opt_in</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Updates a user’s preference for receiving org-wide emails.</paragraph>
                    <paragraph>Sets a User Org Tag defining the choice to opt in or opt out of organization-wide
                        emails.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user to set a preference for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>org</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The org is used to determine the organization this setting is related to.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>opt_in</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – True if the user is choosing to receive emails for this organization.
                                            If the user requires parental consent then email-optin is set to False regardless.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user profile exists for the specified user.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_user_preferences()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.update_user_preferences',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_user_preferences()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api update_user_preferences" class="" classes="sig sig-object py" fullname="update_user_preferences" ids="openedx.core.djangoapps.user_api.preferences.api.update_user_preferences" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_user_preferences</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">update</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update the user preferences for the given user.</paragraph>
                    <note>
                        <paragraph>It is up to the caller of this method to enforce the contract that this method is only called
                            with the user who made the request.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>requesting_user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – The user requesting to modify account information. Only the user with username
                                            ‘username’ has permissions to modify account information.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>update</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – <paragraph>The updated account field values.
                                                Some notes:</paragraph><block_quote><paragraph>Values are expected to be strings. Non-string values will be converted to strings.
                                                    Null values for a preference will be treated as a request to delete the key in question.</paragraph></block_quote></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<literal_emphasis>str/User</literal_emphasis>) – Optional, either username string or user object specifying which account should be updated.
                                            If not specified, <title_reference>requesting_user.username</title_reference> is assumed.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotFound" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotFound"><literal_strong>UserNotFound</literal_strong></reference> – no user with username <title_reference>username</title_reference> exists (or <title_reference>requesting_user.username</title_reference> if
                                                <title_reference>username</title_reference> is not specified)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserNotAuthorized" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserNotAuthorized"><literal_strong>UserNotAuthorized</literal_strong></reference> – the requesting_user does not have access to change the account
                                                associated with <title_reference>username</title_reference></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceValidationError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceValidationError"><literal_strong>PreferenceValidationError</literal_strong></reference> – the update was not attempted because validation errors were found</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceUpdateError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceUpdateError"><literal_strong>PreferenceUpdateError</literal_strong></reference> – the operation failed when performing the update.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.UserAPIInternalError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.UserAPIInternalError"><literal_strong>UserAPIInternalError</literal_strong></reference> – the operation failed due to an unexpected error.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'validate_user_preference_serializer()\ (in\ module\ openedx.core.djangoapps.user_api.preferences.api)',\ 'openedx.core.djangoapps.user_api.preferences.api.validate_user_preference_serializer',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="validate_user_preference_serializer()" _toc_parts="openedx.core.djangoapps.user_api.preferences.api validate_user_preference_serializer" class="" classes="sig sig-object py" fullname="validate_user_preference_serializer" ids="openedx.core.djangoapps.user_api.preferences.api.validate_user_preference_serializer" module="openedx.core.djangoapps.user_api.preferences.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">validate_user_preference_serializer</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">serializer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Validates a user preference serializer.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>serializer</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.user_api.serializers.UserPreferenceSerializer" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.serializers.UserPreferenceSerializer"><literal_emphasis>UserPreferenceSerializer</literal_emphasis></reference>) – The serializer to be validated.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The key for the user preference.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>preference_value</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The value to be stored. Non-string values will be converted to strings.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.user_api.errors.PreferenceValidationError" refuri="openedx.core.djangoapps.user_api#openedx.core.djangoapps.user_api.errors.PreferenceValidationError"><literal_strong>PreferenceValidationError</literal_strong></reference> – the supplied key and/or value for a user preference are invalid.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.preferences.views openedx-core-djangoapps-user-api-preferences-views-module" names="openedx.core.djangoapps.user_api.preferences.views\ module">
            <title>openedx.core.djangoapps.user_api.preferences.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.preferences.views',\ 'module-openedx.core.djangoapps.user_api.preferences.views',\ '',\ None]"></index>
            <paragraph>An API for retrieving user preference information.</paragraph>
            <paragraph>For additional information and historical context, see:
                <reference refuri="https://openedx.atlassian.net/wiki/display/TNL/User+API">https://openedx.atlassian.net/wiki/display/TNL/User+API</reference></paragraph>
            <index entries="['single',\ 'PreferencesDetailView\ (class\ in\ openedx.core.djangoapps.user_api.preferences.views)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="PreferencesDetailView" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView" class="" classes="sig sig-object py" fullname="PreferencesDetailView" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView" module="openedx.core.djangoapps.user_api.preferences.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PreferencesDetailView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal></paragraph>
                    <paragraph><strong>Use Cases</strong></paragraph>
                    <block_quote>
                        <paragraph>Get, create, update, or delete a specific user preference.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example Requests</strong></paragraph>
                    <block_quote>
                        <paragraph>GET /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                        <paragraph>PUT /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                        <paragraph>DELETE /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values for GET</strong></paragraph>
                    <block_quote>
                        <paragraph>If the specified username or preference does not exist, an HTTP
                            404 “Not Found” response is returned.</paragraph>
                        <paragraph>If a user without “is_staff” access requests preferences for a
                            different user, a 404 error is returned.</paragraph>
                        <paragraph>If the user makes the request for her own account, or makes a
                            request for another account and has “is_staff” access, an HTTP 200
                            “OK” response is returned that contains a JSON string.</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values for PUT</strong></paragraph>
                    <block_quote>
                        <paragraph>Users can only modify their own preferences. If the
                            requesting user does not have the specified username and has staff
                            access, the request returns an HTTP 403 “Forbidden” response. If
                            the requesting user does not have staff access, the request
                            returns an HTTP 404 “Not Found” response to avoid revealing the
                            existence of the account.</paragraph>
                        <paragraph>If the specified preference does not exist, an HTTP 404 “Not
                            Found” response is returned.</paragraph>
                        <paragraph>If the request is successful, a 204 “No Content” status is returned
                            with no additional content.</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values for DELETE</strong></paragraph>
                    <block_quote>
                        <paragraph>Users can only delete their own preferences. If the
                            requesting user does not have the specified username and has staff
                            access, the request returns an HTTP 403 “Forbidden” response. If
                            the requesting user does not have staff access, the request
                            returns an HTTP 404 “Not Found” response to avoid revealing the
                            existence of the account.</paragraph>
                        <paragraph>If the specified preference does not exist, an HTTP 404 “Not
                            Found” response is returned.</paragraph>
                        <paragraph>If the update is successful, an HTTP 204 “No Content” response is
                            returned with no additional content.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView\ attribute)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PreferencesDetailView.authentication_classes" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView authentication_classes" class="PreferencesDetailView" classes="sig sig-object py" fullname="PreferencesDetailView.authentication_classes" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.authentication_classes" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete()\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView\ method)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PreferencesDetailView.delete()" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView delete" class="PreferencesDetailView" classes="sig sig-object py" fullname="PreferencesDetailView.delete" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.delete" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>DELETE /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView\ method)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PreferencesDetailView.get()" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView get" class="PreferencesDetailView" classes="sig sig-object py" fullname="PreferencesDetailView.get" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.get" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>GET /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView\ attribute)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PreferencesDetailView.permission_classes" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView permission_classes" class="PreferencesDetailView" classes="sig sig-object py" fullname="PreferencesDetailView.permission_classes" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.permission_classes" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'openedx.core.lib.api.permissions.IsUserInUrlOrStaff'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'put()\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView\ method)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.put',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PreferencesDetailView.put()" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesDetailView put" class="PreferencesDetailView" classes="sig sig-object py" fullname="PreferencesDetailView.put" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesDetailView.put" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">put</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">preference_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>PUT /api/user/v1/preferences/{username}/{preference_key}</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'PreferencesView\ (class\ in\ openedx.core.djangoapps.user_api.preferences.views)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="PreferencesView" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView" class="" classes="sig sig-object py" fullname="PreferencesView" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView" module="openedx.core.djangoapps.user_api.preferences.views"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.user_api.preferences.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PreferencesView</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal></paragraph>
                    <paragraph><strong>Use Cases</strong></paragraph>
                    <block_quote>
                        <paragraph>Get or update the user’s preference information. Updates are only
                            supported through merge patch. Preference values of null in a
                            patch request are treated as requests to remove the preference.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example Requests</strong></paragraph>
                    <block_quote>
                        <paragraph>GET /api/user/v1/preferences/{username}/</paragraph>
                        <paragraph>PATCH /api/user/v1/preferences/{username}/ with content_type “application/merge-patch+json”</paragraph>
                    </block_quote>
                    <paragraph><strong>Response Values for GET</strong></paragraph>
                    <block_quote>
                        <paragraph>If no user exists with the specified username, an HTTP 404 “Not
                            Found” response is returned.</paragraph>
                        <paragraph>If a user without “is_staff” access requests preferences for a
                            different user, an HTTP 404 “Not Found” message is returned.</paragraph>
                        <paragraph>If the user makes the request for her own account, or makes a
                            request for another account and has “is_staff” access, an HTTP 200
                            “OK” response is returned. The response contains a JSON dictionary
                            with a key/value pair (of type String) for each preference.</paragraph>
                        <paragraph>The list of preferences depends on your implementation. By default,
                            the list includes the following preferences.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>account_privacy: The user’s setting for sharing her personal
                                    profile. Possible values are “all_users” or “private”.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>pref-lan: The user’s preferred language, as set in account
                                    settings.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Response Values for PATCH</strong></paragraph>
                    <block_quote>
                        <paragraph>Users can only modify their own preferences. If the
                            requesting user does not have the specified username and has staff
                            access, the request returns an HTTP 403 “Forbidden” response. If
                            the requesting user does not have staff access, the request
                            returns an HTTP 404 “Not Found” response to avoid revealing the
                            existence of the account.</paragraph>
                        <paragraph>If no user exists with the specified username, an HTTP 404 “Not
                            Found” response is returned.</paragraph>
                        <paragraph>If “application/merge-patch+json” is not the specified content
                            type, a 415 “Unsupported Media Type” response is returned.</paragraph>
                        <paragraph>If validation errors prevent the update, this method returns a 400
                            “Bad Request” response that includes a “field_errors” field that
                            lists all error messages.</paragraph>
                        <paragraph>If a failure at the time of the update prevents the update, a 400
                            “Bad Request” error is returned. The JSON collection contains
                            specific errors.</paragraph>
                        <paragraph>If the update is successful, an HTTP 204 “No Content” response is
                            returned with no additional content.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesView\ attribute)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PreferencesView.authentication_classes" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView authentication_classes" class="PreferencesView" classes="sig sig-object py" fullname="PreferencesView.authentication_classes" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView.authentication_classes" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesView\ method)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PreferencesView.get()" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView get" class="PreferencesView" classes="sig sig-object py" fullname="PreferencesView.get" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView.get" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>GET /api/user/v1/preferences/{username}/</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'parser_classes\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesView\ attribute)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView.parser_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PreferencesView.parser_classes" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView parser_classes" class="PreferencesView" classes="sig sig-object py" fullname="PreferencesView.parser_classes" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView.parser_classes" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">parser_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'openedx.core.lib.api.parsers.MergePatchParser'&gt;,)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'patch()\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesView\ method)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView.patch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PreferencesView.patch()" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView patch" class="PreferencesView" classes="sig sig-object py" fullname="PreferencesView.patch" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView.patch" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">patch</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>PATCH /api/user/v1/preferences/{username}/</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.user_api.preferences.views.PreferencesView\ attribute)',\ 'openedx.core.djangoapps.user_api.preferences.views.PreferencesView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PreferencesView.permission_classes" _toc_parts="openedx.core.djangoapps.user_api.preferences.views PreferencesView permission_classes" class="PreferencesView" classes="sig sig-object py" fullname="PreferencesView.permission_classes" ids="openedx.core.djangoapps.user_api.preferences.views.PreferencesView.permission_classes" module="openedx.core.djangoapps.user_api.preferences.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'openedx.core.lib.api.permissions.IsUserInUrlOrStaff'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.user_api.preferences module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.user_api.preferences',\ 'module-openedx.core.djangoapps.user_api.preferences',\ '',\ None]"></index>
        </section>
    </section>
</document>
