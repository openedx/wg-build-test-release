<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.cors_csrf.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-cors-csrf-package" names="openedx.core.djangoapps.cors_csrf\ package">
        <title>openedx.core.djangoapps.cors_csrf package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.authentication openedx-core-djangoapps-cors-csrf-authentication-module" names="openedx.core.djangoapps.cors_csrf.authentication\ module">
            <title>openedx.core.djangoapps.cors_csrf.authentication module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.authentication',\ 'module-openedx.core.djangoapps.cors_csrf.authentication',\ '',\ None]"></index>
            <paragraph>Django Rest Framework Authentication classes for cross-domain end-points.</paragraph>
            <index entries="['single',\ 'SessionAuthenticationCrossDomainCsrf\ (class\ in\ openedx.core.djangoapps.cors_csrf.authentication)',\ 'openedx.core.djangoapps.cors_csrf.authentication.SessionAuthenticationCrossDomainCsrf',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SessionAuthenticationCrossDomainCsrf" _toc_parts="openedx.core.djangoapps.cors_csrf.authentication SessionAuthenticationCrossDomainCsrf" class="" classes="sig sig-object py" fullname="SessionAuthenticationCrossDomainCsrf" ids="openedx.core.djangoapps.cors_csrf.authentication.SessionAuthenticationCrossDomainCsrf" module="openedx.core.djangoapps.cors_csrf.authentication"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.authentication.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SessionAuthenticationCrossDomainCsrf</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">SessionAuthentication</literal></paragraph>
                    <paragraph>Session authentication that skips the referer check over secure connections.</paragraph>
                    <paragraph>Django Rest Framework’s <title_reference>SessionAuthentication</title_reference> class calls Django’s
                        CSRF middleware implementation directly, which bypasses the middleware
                        stack.</paragraph>
                    <paragraph>This version of <title_reference>SessionAuthentication</title_reference> performs the same workaround
                        as <title_reference>CorsCSRFMiddleware</title_reference> to skip the referer check for whitelisted
                        domains over a secure connection.  See <title_reference>cors_csrf.middleware</title_reference> for
                        more information.</paragraph>
                    <paragraph>Since this subclass overrides only the <title_reference>enforce_csrf()</title_reference> method,
                        it can be mixed in with other <title_reference>SessionAuthentication</title_reference> subclasses.</paragraph>
                    <index entries="['single',\ 'enforce_csrf()\ (openedx.core.djangoapps.cors_csrf.authentication.SessionAuthenticationCrossDomainCsrf\ method)',\ 'openedx.core.djangoapps.cors_csrf.authentication.SessionAuthenticationCrossDomainCsrf.enforce_csrf',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SessionAuthenticationCrossDomainCsrf.enforce_csrf()" _toc_parts="openedx.core.djangoapps.cors_csrf.authentication SessionAuthenticationCrossDomainCsrf enforce_csrf" class="SessionAuthenticationCrossDomainCsrf" classes="sig sig-object py" fullname="SessionAuthenticationCrossDomainCsrf.enforce_csrf" ids="openedx.core.djangoapps.cors_csrf.authentication.SessionAuthenticationCrossDomainCsrf.enforce_csrf" module="openedx.core.djangoapps.cors_csrf.authentication"><desc_name classes="sig-name descname" xml:space="preserve">enforce_csrf</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Skip the referer check if the cross-domain request is allowed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.decorators openedx-core-djangoapps-cors-csrf-decorators-module" names="openedx.core.djangoapps.cors_csrf.decorators\ module">
            <title>openedx.core.djangoapps.cors_csrf.decorators module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.decorators',\ 'module-openedx.core.djangoapps.cors_csrf.decorators',\ '',\ None]"></index>
            <paragraph>Decorators for cross-domain CSRF.</paragraph>
            <index entries="['single',\ 'ensure_csrf_cookie_cross_domain()\ (in\ module\ openedx.core.djangoapps.cors_csrf.decorators)',\ 'openedx.core.djangoapps.cors_csrf.decorators.ensure_csrf_cookie_cross_domain',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ensure_csrf_cookie_cross_domain()" _toc_parts="openedx.core.djangoapps.cors_csrf.decorators ensure_csrf_cookie_cross_domain" class="" classes="sig sig-object py" fullname="ensure_csrf_cookie_cross_domain" ids="openedx.core.djangoapps.cors_csrf.decorators.ensure_csrf_cookie_cross_domain" module="openedx.core.djangoapps.cors_csrf.decorators"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.decorators.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ensure_csrf_cookie_cross_domain</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">func</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>View decorator for sending a cross-domain CSRF cookie.</paragraph>
                    <paragraph>This works like Django’s <title_reference>@ensure_csrf_cookie</title_reference>, but
                        will also set an additional CSRF cookie for use
                        cross-domain.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>func</literal_strong> (<literal_emphasis>function</literal_emphasis>) – The view function to decorate.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.helpers openedx-core-djangoapps-cors-csrf-helpers-module" names="openedx.core.djangoapps.cors_csrf.helpers\ module">
            <title>openedx.core.djangoapps.cors_csrf.helpers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.helpers',\ 'module-openedx.core.djangoapps.cors_csrf.helpers',\ '',\ None]"></index>
            <paragraph>Helper methods for CORS and CSRF checks.</paragraph>
            <index entries="['single',\ 'is_cross_domain_request_allowed()\ (in\ module\ openedx.core.djangoapps.cors_csrf.helpers)',\ 'openedx.core.djangoapps.cors_csrf.helpers.is_cross_domain_request_allowed',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_cross_domain_request_allowed()" _toc_parts="openedx.core.djangoapps.cors_csrf.helpers is_cross_domain_request_allowed" class="" classes="sig sig-object py" fullname="is_cross_domain_request_allowed" ids="openedx.core.djangoapps.cors_csrf.helpers.is_cross_domain_request_allowed" module="openedx.core.djangoapps.cors_csrf.helpers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.helpers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_cross_domain_request_allowed</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check whether we should allow the cross-domain request.</paragraph>
                    <paragraph>We allow a cross-domain request only if:</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=")">
                        <list_item>
                            <paragraph>The request is made securely and the referer has “<reference refuri="https://">https://</reference>” as the protocol.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The referer domain has been whitelisted.</paragraph>
                        </list_item>
                    </enumerated_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>HttpRequest</literal_emphasis>)</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'skip_cross_domain_referer_check()\ (in\ module\ openedx.core.djangoapps.cors_csrf.helpers)',\ 'openedx.core.djangoapps.cors_csrf.helpers.skip_cross_domain_referer_check',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="skip_cross_domain_referer_check()" _toc_parts="openedx.core.djangoapps.cors_csrf.helpers skip_cross_domain_referer_check" class="" classes="sig sig-object py" fullname="skip_cross_domain_referer_check" ids="openedx.core.djangoapps.cors_csrf.helpers.skip_cross_domain_referer_check" module="openedx.core.djangoapps.cors_csrf.helpers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.helpers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">skip_cross_domain_referer_check</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Skip the cross-domain CSRF referer check.</paragraph>
                    <paragraph>Django’s CSRF middleware performs the referer check
                        only when the request is made over a secure connection.
                        To skip the check, we patch <title_reference>request.is_secure()</title_reference> to
                        False.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.middleware openedx-core-djangoapps-cors-csrf-middleware-module" names="openedx.core.djangoapps.cors_csrf.middleware\ module">
            <title>openedx.core.djangoapps.cors_csrf.middleware module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.middleware',\ 'module-openedx.core.djangoapps.cors_csrf.middleware',\ '',\ None]"></index>
            <paragraph>Middleware for handling CSRF checks with CORS requests</paragraph>
            <section ids="csrf-and-referrer-domain-checks" names="csrf\ and\ referrer\ domain\ checks">
                <title>CSRF and referrer domain checks</title>
                <paragraph>When processing HTTPS requests, the default CSRF middleware checks that the referer
                    domain and protocol is the same as the request’s domain and protocol. This is meant
                    to avoid a type of attack for sites which serve their content with both HTTP and HTTPS,
                    with a man in the middle on the HTTP requests.</paragraph>
                <paragraph><reference refuri="https://github.com/django/django/blob/b91c385e324f1cb94d20e2ad146372c259d51d3b/django/middleware/csrf.py#L117">https://github.com/django/django/blob/b91c385e324f1cb94d20e2ad146372c259d51d3b/django/middleware/csrf.py#L117</reference></paragraph>
                <paragraph>This doesn’t work well with CORS requests, which aren’t vulnerable to this attack when
                    the server from which the request is coming uses HTTPS too, as it prevents the man in the
                    middle attack vector.</paragraph>
                <paragraph>We thus do the CSRF check of requests coming from an authorized CORS host separately
                    in this middleware, applying the same protections as the default CSRF middleware, but
                    without the referrer check, when both the request and the referer use HTTPS.</paragraph>
            </section>
            <section ids="csrf-cookie-domains" names="csrf\ cookie\ domains">
                <title>CSRF cookie domains</title>
                <paragraph>In addition, in order to make cross-domain AJAX calls to CSRF-protected end-points,
                    we need to send the CSRF token in the HTTP header of the request.</paragraph>
                <paragraph>The simple way to do this would be to set the CSRF_COOKIE_DOMAIN to “.edx.org”,
                    but unfortunately this can cause problems.  For example, suppose that
                    “first.edx.org” sets the cookie with domain “.edx.org”, but “second.edx.org”
                    sets a cookie with domain “second.edx.org”.  In this case, the browser
                    would have two different CSRF tokens set (one for each cookie domain),
                    which can cause non-deterministic failures depending on which cookie
                    is sent first.</paragraph>
                <paragraph>For this reason, we add a second cookie that (a) has the domain set to “.edx.org”,
                    but (b) does NOT have the same name as the CSRF_COOKIE_NAME.  Clients making
                    cross-domain requests can use this cookie instead of the subdomain-specific
                    CSRF cookie.</paragraph>
            </section>
            <index entries="['single',\ 'CorsCSRFMiddleware\ (class\ in\ openedx.core.djangoapps.cors_csrf.middleware)',\ 'openedx.core.djangoapps.cors_csrf.middleware.CorsCSRFMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CorsCSRFMiddleware" _toc_parts="openedx.core.djangoapps.cors_csrf.middleware CorsCSRFMiddleware" class="" classes="sig sig-object py" fullname="CorsCSRFMiddleware" ids="openedx.core.djangoapps.cors_csrf.middleware.CorsCSRFMiddleware" module="openedx.core.djangoapps.cors_csrf.middleware"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CorsCSRFMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/middleware/#django.middleware.csrf.CsrfViewMiddleware"><literal classes="xref py py-class">CsrfViewMiddleware</literal></reference>, <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/http/middleware/#django.utils.deprecation.MiddlewareMixin"><literal classes="xref py py-class">MiddlewareMixin</literal></reference></paragraph>
                    <paragraph>Middleware for handling CSRF checks with CORS requests</paragraph>
                    <index entries="['single',\ 'process_view()\ (openedx.core.djangoapps.cors_csrf.middleware.CorsCSRFMiddleware\ method)',\ 'openedx.core.djangoapps.cors_csrf.middleware.CorsCSRFMiddleware.process_view',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CorsCSRFMiddleware.process_view()" _toc_parts="openedx.core.djangoapps.cors_csrf.middleware CorsCSRFMiddleware process_view" class="CorsCSRFMiddleware" classes="sig sig-object py" fullname="CorsCSRFMiddleware.process_view" ids="openedx.core.djangoapps.cors_csrf.middleware.CorsCSRFMiddleware.process_view" module="openedx.core.djangoapps.cors_csrf.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_view</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">callback</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">callback_args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">callback_kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Skip the usual CSRF referer check if this is an allowed cross-domain request.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CsrfCrossDomainCookieMiddleware\ (class\ in\ openedx.core.djangoapps.cors_csrf.middleware)',\ 'openedx.core.djangoapps.cors_csrf.middleware.CsrfCrossDomainCookieMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CsrfCrossDomainCookieMiddleware" _toc_parts="openedx.core.djangoapps.cors_csrf.middleware CsrfCrossDomainCookieMiddleware" class="" classes="sig sig-object py" fullname="CsrfCrossDomainCookieMiddleware" ids="openedx.core.djangoapps.cors_csrf.middleware.CsrfCrossDomainCookieMiddleware" module="openedx.core.djangoapps.cors_csrf.middleware"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CsrfCrossDomainCookieMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/http/middleware/#django.utils.deprecation.MiddlewareMixin"><literal classes="xref py py-class">MiddlewareMixin</literal></reference></paragraph>
                    <paragraph>Set an additional “cross-domain” CSRF cookie.</paragraph>
                    <paragraph>Usage:</paragraph>
                    <block_quote>
                        <enumerated_list enumtype="arabic" prefix="" suffix=")">
                            <list_item>
                                <paragraph>Decorate a view with <title_reference>@ensure_csrf_cookie_cross_domain</title_reference>.</paragraph>
                            </list_item>
                            <list_item>
                                <definition_list>
                                    <definition_list_item>
                                        <term>Set <title_reference>CROSS_DOMAIN_CSRF_COOKIE_NAME</title_reference> and <title_reference>CROSS_DOMAIN_CSRF_COOKIE_DOMAIN</title_reference></term>
                                        <definition>
                                            <paragraph>in settings.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                            <list_item>
                                <paragraph>Add the domain to <title_reference>CORS_ORIGIN_WHITELIST</title_reference></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Enable <title_reference>FEATURES[‘ENABLE_CROSS_DOMAIN_CSRF_COOKIE’]</title_reference></paragraph>
                            </list_item>
                        </enumerated_list>
                    </block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>For testing, it is often easier to relax the security checks by setting:</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph><title_reference>CORS_ALLOW_INSECURE = True</title_reference></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><title_reference>CORS_ORIGIN_ALLOW_ALL = True</title_reference></paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <index entries="['single',\ 'process_response()\ (openedx.core.djangoapps.cors_csrf.middleware.CsrfCrossDomainCookieMiddleware\ method)',\ 'openedx.core.djangoapps.cors_csrf.middleware.CsrfCrossDomainCookieMiddleware.process_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CsrfCrossDomainCookieMiddleware.process_response()" _toc_parts="openedx.core.djangoapps.cors_csrf.middleware CsrfCrossDomainCookieMiddleware process_response" class="CsrfCrossDomainCookieMiddleware" classes="sig sig-object py" fullname="CsrfCrossDomainCookieMiddleware.process_response" ids="openedx.core.djangoapps.cors_csrf.middleware.CsrfCrossDomainCookieMiddleware.process_response" module="openedx.core.djangoapps.cors_csrf.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_response</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Set the cross-domain CSRF cookie.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.models openedx-core-djangoapps-cors-csrf-models-module" names="openedx.core.djangoapps.cors_csrf.models\ module">
            <title>openedx.core.djangoapps.cors_csrf.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.models',\ 'module-openedx.core.djangoapps.cors_csrf.models',\ '',\ None]"></index>
            <paragraph>Models for cross-domain configuration.</paragraph>
            <index entries="['single',\ 'XDomainProxyConfiguration\ (class\ in\ openedx.core.djangoapps.cors_csrf.models)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="XDomainProxyConfiguration" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration" class="" classes="sig sig-object py" fullname="XDomainProxyConfiguration" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration" module="openedx.core.djangoapps.cors_csrf.models"><desc_annotation xml:space="preserve">class<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">XDomainProxyConfiguration</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ConfigurationModel</literal></paragraph>
                    <paragraph>Cross-domain proxy configuration.</paragraph>
                    <paragraph>See <title_reference>openedx.core.djangoapps.cors_csrf.views.xdomain_proxy</title_reference> for an explanation of how this works.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'XDomainProxyConfiguration.DoesNotExist',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="XDomainProxyConfiguration.DoesNotExist" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration DoesNotExist" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.DoesNotExist" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.DoesNotExist" module="openedx.core.djangoapps.cors_csrf.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'XDomainProxyConfiguration.MultipleObjectsReturned',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="XDomainProxyConfiguration.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration MultipleObjectsReturned" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.MultipleObjectsReturned" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.MultipleObjectsReturned" module="openedx.core.djangoapps.cors_csrf.models"><desc_annotation xml:space="preserve">exception<desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'change_date\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.change_date',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.change_date" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration change_date" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.change_date" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.change_date" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">change_date</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.changed_by',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.changed_by" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration changed_by" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.changed_by" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.changed_by" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by_id\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.changed_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.changed_by_id" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration changed_by_id" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.changed_by_id" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.changed_by_id" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.enabled" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration enabled" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.enabled" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.enabled" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_change_date()\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ method)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.get_next_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XDomainProxyConfiguration.get_next_by_change_date()" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration get_next_by_change_date" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.get_next_by_change_date" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.get_next_by_change_date" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_change_date()\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ method)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.get_previous_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="XDomainProxyConfiguration.get_previous_by_change_date()" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration get_previous_by_change_date" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.get_previous_by_change_date" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.get_previous_by_change_date" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.id" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration id" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.id" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.id" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'whitelist\ (openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration\ attribute)',\ 'openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.whitelist',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="XDomainProxyConfiguration.whitelist" _toc_parts="openedx.core.djangoapps.cors_csrf.models XDomainProxyConfiguration whitelist" class="XDomainProxyConfiguration" classes="sig sig-object py" fullname="XDomainProxyConfiguration.whitelist" ids="openedx.core.djangoapps.cors_csrf.models.XDomainProxyConfiguration.whitelist" module="openedx.core.djangoapps.cors_csrf.models"><desc_name classes="sig-name descname" xml:space="preserve">whitelist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf.views openedx-core-djangoapps-cors-csrf-views-module" names="openedx.core.djangoapps.cors_csrf.views\ module">
            <title>openedx.core.djangoapps.cors_csrf.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf.views',\ 'module-openedx.core.djangoapps.cors_csrf.views',\ '',\ None]"></index>
            <paragraph>Views for enabling cross-domain requests.</paragraph>
            <index entries="['single',\ 'xdomain_proxy()\ (in\ module\ openedx.core.djangoapps.cors_csrf.views)',\ 'openedx.core.djangoapps.cors_csrf.views.xdomain_proxy',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="xdomain_proxy()" _toc_parts="openedx.core.djangoapps.cors_csrf.views xdomain_proxy" class="" classes="sig sig-object py" fullname="xdomain_proxy" ids="openedx.core.djangoapps.cors_csrf.views.xdomain_proxy" module="openedx.core.djangoapps.cors_csrf.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.cors_csrf.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">xdomain_proxy</desc_name><desc_parameterlist multi_line_parameter_list="False" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Serve the xdomain proxy page.</paragraph>
                    <paragraph>Internet Explorer 9 does not send cookie information with CORS,
                        which means we can’t make cross-domain POST requests that
                        require authentication (for example, from the course details
                        page on the marketing site to the enrollment API
                        to auto-enroll a user in an “honor” track).</paragraph>
                    <paragraph>The XDomain library [<reference refuri="https://github.com/jpillora/xdomain">https://github.com/jpillora/xdomain</reference>]
                        provides an alternative to using CORS.</paragraph>
                    <paragraph>The library works as follows:</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=")">
                        <list_item>
                            <paragraph>A static HTML file (“xdomain_proxy.html”) is served from courses.edx.org.
                                The file includes JavaScript and a domain whitelist.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The course details page (on edx.org) creates an invisible iframe
                                that loads the proxy HTML file.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>A JS shim library on the course details page intercepts
                                AJAX requests and communicates with JavaScript on the iframed page.
                                The iframed page then proxies the request to the LMS.
                                Since the iframed page is served from courses.edx.org,
                                this is a same-domain request, so all cookies for the domain
                                are sent along with the request.</paragraph>
                        </list_item>
                    </enumerated_list>
                    <paragraph>You can enable this feature and configure the domain whitelist
                        using Django admin.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.cors_csrf module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.cors_csrf',\ 'module-openedx.core.djangoapps.cors_csrf',\ '',\ None]"></index>
        </section>
    </section>
</document>
