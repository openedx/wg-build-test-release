<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docs/openedx/core/djangoapps/discussions/docs/decisions/0001-discussion-configuration-api.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="discussion-provider-configuration" names="discussion\ provider\ configuration">
        <title>Discussion provider configuration</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Proposal</paragraph>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>As part of the BD-03 initiative (Blended Development, Project 3),
                we want to enable third-party discussion providers to replace the
                default forums experience in edx-platform.</paragraph>
            <paragraph>To accomplish this, we should establish a configuration system to
                enable/disable/configure these new discussion-provider plugins;
                the existing forums experience will be included as one of these plugins.</paragraph>
            <paragraph>This ADR proposes a new configuration system that allows operators to create
                pre-populated configurations for specific discussions providers,
                which can then be used and customized by course authors/admins.</paragraph>
        </section>
        <section ids="decision" names="decision">
            <title>Decision</title>
            <paragraph>We propose to implement this as a Django database-backed model with
                historical records, <title_reference>DiscussionsConfiguration</title_reference>.</paragraph>
            <paragraph>The underlying model can be represented as:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Discussions can be disabled on a course by setting <title_reference>enabled=False</title_reference>; if
                        no record exists, the plugin is considered to be disabled by default.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><title_reference>lti_configuration</title_reference> is a collection of LTI launch configuration data
                        (URL, key, secret, etc.), but this data structure should be extracted
                        into its own model; see notes below (<title_reference>Dependent Work</title_reference>).</paragraph>
                </list_item>
                <list_item>
                    <paragraph><title_reference>plugin_configuration</title_reference> is a free-form dictionary of configuration
                        values, to be passed to pluginâ€™s renderer</paragraph>
                </list_item>
                <list_item>
                    <paragraph><title_reference>provider_type</title_reference> is the (arbitrary, but stable) id for the discussion provider.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><title_reference>history</title_reference> is tracked using Django Simple History.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="future-work" names="future\ work">
            <title>Future Work</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><title_reference>LtiConfiguration</title_reference> should be extended for feature-parity <problematic ids="id2" refid="id1">with_out_</problematic>
                        XBlock dependencies.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Discussion apps/plugins/providers, implemented as Python models, will
                        be available via some discovery mechanism (Python entry points?,
                        hard-coded list?)
                        They will be responsible for:
                        - the provider_type, referenced by <title_reference>DiscussionsConfiguration</title_reference>
                        - any relevant renderers, accessors, etc.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>No site/organization-based provider restrictions will be implemented, at this time.
                        This could be added later via an allow/deny-list.</paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
