<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docs/openedx/core/djangoapps/discussions/docs/decisions/0004-in-context-discussions-linking.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="linking-in-context-discussions-to-units" names="linking\ in-context\ discussions\ to\ units">
        <title>Linking In-Context Discussions to Units</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Proposal</paragraph>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>As part of the BD-38 initiative (Blended Development, Project 38), we are
                investigating a new way to set up discussions for a course that tries to
                simplify the way discussions are configured and ties them more closely to the
                course structure.</paragraph>
            <paragraph>The first simplification that the new system makes is to remove the
                discussions XBlock, and instead supports simply marking individual units
                as discussable, in which case a discussion UI will show up in-context.</paragraph>
            <paragraph>Currently this will only be supported for the edX Forums internal
                discussion provider, but it could be extended in the future to support
                other providers.</paragraph>
            <paragraph>In addition to providing a way to mark Units as discussable, there will
                also be a way to simply enable discussion for all units in the course.
                One further control provided here will be to toggle discussions on or
                off for graded discussions.</paragraph>
            <paragraph>Finally, it will also be possible to group discussions at a Sequence
                level instead of the Unit level.</paragraph>
        </section>
        <section ids="requirements" names="requirements">
            <title>Requirements</title>
            <paragraph>In order to enable in-context discussions with the above features we
                need a way to:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Mark a Unit as discussable</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Store configuration options for discussions</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Automatically mark/unmark units as discussable when settings change</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Associate a unit with a corresponding discussion id</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Make this discussion ID available via an API</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="consideration" names="consideration">
            <title>Consideration</title>
            <paragraph>Most of these configuration entries would be right at home in the
                <literal>DiscussionsConfiguration</literal> model in <literal>plugin_settings</literal>, however since they need
                to be available during course import-export, they should be stored in the
                course object itself.</paragraph>
            <paragraph>There is already a way to associate a discussion ID with a Discussion XBlock
                using its usage key. This same mechanism can be used to associate a Unit usage
                key with a corresponding discussion id.</paragraph>
            <paragraph>However the current mechanism has a few issues. It is stored as a JSON
                structure in the <literal>DiscussionsIdMapping</literal> model which has course id and a mapping
                of the discussion id to the xblock usage key in a single dict.</paragraph>
            <paragraph>This is OK for the existing setup because this is just a caching mechanism and
                the source of truth for this mapping is the XBlock itself, which stores the
                discussion id. On course publish this information is cached to
                <literal>DiscussionsIdMapping</literal>.</paragraph>
            <paragraph>For the new discussions system though, this mapping would be the source of
                truth for the link between discussions and units, so we should use a model
                where each such link is encoded as a row in the database.</paragraph>
        </section>
        <section ids="decision" names="decision">
            <title>Decision</title>
            <paragraph>Since the discussions settings need to be stored in the course structure we
                should create a new JSON structure in the course that matches the structure
                of <literal>plugin_settings</literal>. This can then be used to store not just the settings
                for the inbuilt discussions provider, but for any discussions provider in the
                future.</paragraph>
            <paragraph>When a course is published, we can copy over all the <literal>plugin_settings</literal> to the
                course in a JSON field called <literal>discussions_settings</literal> with the following
                structure:</paragraph>
            <literal_block force="False" highlight_args="{}" language="JSON" linenos="False" xml:space="preserve">{
    "discussions_enable_in_context": bool,
    "discussions_enable_graded_units": bool,
    "discussions_custom_visibility": bool,
    "edx-next": {
        "discussions_group_at_subsection": bool,
    }
}</literal_block>
            <paragraph>The <literal>edx-next</literal> key here represents the provider id, allowing for potentially
                multiple provider configs to coexist in case of switching providers etc.
                Settings outside this key are those that are applicable to all providers. Note
                that they may not be supported by all providers though, in which case they will
                simply be ignored.</paragraph>
            <paragraph>To store Unit-level discussions settings, we can simply add a boolean field
                to the Unit block that specifies whether it is discussable or not. To be
                consistent with the above names we can call this field <literal>discussions_enabled</literal>.</paragraph>
            <paragraph>A signal can be created using the new Hooks extension system proposed in OEP-50
                that is triggered when discussions settings change. This signal can encapsulate
                all the data needed for setting up discussions from the modulestore. It can
                traverse through all teh Units in the course that match the criterion from the
                discussions settings and provide the needed details as part of the signal data.</paragraph>
            <paragraph>A handler for the above signal, we create the discussion topics in
                <literal>cs_comments_service</literal> and add a mapping. If an existing unit with discussions
                is removed, we will disable the link but not delete the data.</paragraph>
            <paragraph>The discussion grouping at subsections will simply combine the topics from all
                the units in the subsection and provide a unified view across the subsection.
                This setting will mainly be ignored and will likely only be used by the APIs
                or potentially the frontend directly.</paragraph>
            <paragraph>The mapping between discussion ids and units is also a very simple model:</paragraph>
            <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">class DiscussionTopicLink:
    course_key: CourseKey
    usage_key: UsageKey
    title: str
    group_id: int
    discussion_provider_id: str
    external_discussion_id: str
    enabled: bool</literal_block>
            <paragraph>This structure is generic on purpose, to allow using this model for other
                providers in the future, and for switching providers without data loss.</paragraph>
        </section>
    </section>
</document>
