<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docs/cms/djangoapps/contentstore/docs/decisions/0002-restful-studio-apis-for-MFE.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="expose-existing-studio-apis-for-use-in-mfes" names="0002:\ expose\ existing\ studio\ apis\ for\ use\ in\ mfes">
        <title>0002: Expose Existing Studio APIs for use in MFEs</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Proposed</paragraph>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>New MFEs which are in development, need to use studio APIs to interact with course tabs
                and advanced course settings. Currently these endpoints donâ€™t have RESTful APIs that
                can be used by MFEs using OAuth2 or similar.</paragraph>
            <paragraph>Currently the course tabs page at <title_reference>&lt;studio_url&gt;/tabs/&lt;course_key&gt;</title_reference> has a single
                <reference name="old-style functional view" refuri="https://github.com/openedx/edx-platform/blob/49296005db7397e1a45e2864d93d39cf790a5fce/cms/djangoapps/contentstore/views/tabs.py#L27">old-style functional view</reference> that serves as both the view for the HTML page and the
                JSON-based API for post requests. It also only supports session-based auth. While
                this works well currently, for MFE consumption this is not ideal. The
                <reference name="advanced course settings" refuri="https://github.com/openedx/edx-platform/blob/49296005db7397e1a45e2864d93d39cf790a5fce/cms/djangoapps/contentstore/views/course.py#L1367">advanced course settings</reference> view is in a similar situation.</paragraph>
            <target ids="old-style-functional-view" names="old-style\ functional\ view" refuri="https://github.com/openedx/edx-platform/blob/49296005db7397e1a45e2864d93d39cf790a5fce/cms/djangoapps/contentstore/views/tabs.py#L27"></target>
            <target ids="advanced-course-settings" names="advanced\ course\ settings" refuri="https://github.com/openedx/edx-platform/blob/49296005db7397e1a45e2864d93d39cf790a5fce/cms/djangoapps/contentstore/views/course.py#L1367"></target>
            <paragraph>To avoid disrupting the existing studio views that might still be needed for the next
                few releases, we need to maintain these existing views while also enabling MFEs to
                perform operations currently only enabled by these views.</paragraph>
        </section>
        <section ids="decision" names="decision">
            <title>Decision</title>
            <paragraph>We will expose the existing studio APIs under a new versioned endpoint. These
                endpoints will support the new JWT/OAuth2 authentication mechanisms supported by
                MFEs.</paragraph>
            <paragraph>The existing views can be kept as-is, and only the authentication layer will be
                changed. These APIs can be versioned as v0 since the format of these APIs can be
                changed to better suit MFEs in future revisions, and might potentially be
                organised differently in the future.</paragraph>
            <paragraph>The first APIs to get this treatment are:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>The tabs APIs currently available at <title_reference>&lt;studio_url&gt;/tabs/&lt;course_key&gt;</title_reference>
                        will now also be exposed at <title_reference>&lt;studio_url&gt;/api/contentstore/v0/tabs/&lt;course_key&gt;</title_reference>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The advanced course settings APIs currently available at <title_reference>&lt;studio_url&gt;/settings/advanced/&lt;course_key&gt;</title_reference>
                        will now also be exposed at <title_reference>&lt;studio_url&gt;/api/contentstore/v0/advanced_settings/&lt;course_key&gt;</title_reference></paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="consequences" names="consequences">
            <title>Consequences</title>
            <paragraph>The <reference name="Course Authoring MFE" refuri="https://github.com/openedx/frontend-app-course-authoring/">Course Authoring MFE</reference>, and other MFEs will be able to use these APIs making it
                possible to port existing studio pages to their new UX in Course Authoring MFE and
                elsewhere.</paragraph>
            <paragraph>There are some adjustments that may be needed for these APIs soon, such as the
                ability to use the tabs APIs from MFEs, currently GET is only supported with HTML
                not JSON.</paragraph>
            <paragraph>For the short-term though, these APIs will unblock progress on new MFE UX without
                without needing to write entirely new APIs.</paragraph>
            <target ids="course-authoring-mfe" names="course\ authoring\ mfe" refuri="https://github.com/openedx/frontend-app-course-authoring/"></target>
        </section>
    </section>
</document>
