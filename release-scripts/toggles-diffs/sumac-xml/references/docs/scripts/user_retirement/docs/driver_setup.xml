<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/static-clones/edx-platform/docs/references/docs/scripts/user_retirement/docs/driver_setup.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="driver-setup"></target>
    <section ids="setting-up-the-user-retirement-driver-scripts driver-setup" names="setting\ up\ the\ user\ retirement\ driver\ scripts driver-setup">
        <title>Setting Up the User Retirement Driver Scripts</title>
        <paragraph><reference name="scripts/user_retirement" refuri="https://github.com/openedx/edx-platform/tree/master/scripts/user_retirement">scripts/user_retirement</reference><target ids="scripts-user-retirement" names="scripts/user_retirement" refuri="https://github.com/openedx/edx-platform/tree/master/scripts/user_retirement"></target>
            is a directory of Python scripts designed to plug into various automation
            tooling. It also contains readme file having details of how to run the scripts.
            Included in this directory are two scripts intended to drive the user
            retirement workflow.</paragraph>
        <definition_list>
            <definition_list_item>
                <term><literal>get_learners_to_retire.py</literal></term>
                <definition>
                    <paragraph>Generates a list of users that are ready for immediate retirement.  Users
                        are “ready” after a certain number of days spent in the <literal>PENDING</literal> state,
                        specified by the <literal>--cool_off_days</literal> argument. Produces an output intended
                        for consumption by Jenkins in order to spawn separate downstream builds for
                        each user.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>retire_one_learner.py</literal></term>
                <definition>
                    <paragraph>Retires the user specified by the <literal>--username</literal> argument.</paragraph>
                </definition>
            </definition_list_item>
        </definition_list>
        <paragraph>These two scripts share a required <literal>--config_file</literal> argument, which specifies
            the driver configuration file for your environment (for example, production).
            This configuration file is a YAML file that contains LMS auth secrets, API URLs,
            and retirement pipeline stages specific to that environment. Here is an example
            of a driver configuration file.</paragraph>
        <literal_block force="False" highlight_args="{}" language="yaml" linenos="False" xml:space="preserve">client_id: &lt;client ID for the retirement service user&gt;
client_secret: &lt;client secret for the retirement service user&gt;

base_urls:
    lms: https://courses.example.com/
    ecommerce: https://ecommerce.example.com/
    credentials: https://credentials.example.com/

retirement_pipeline:
    - ['RETIRING_EMAIL_LISTS', 'EMAIL_LISTS_COMPLETE', 'LMS', 'retirement_retire_mailings']
    - ['RETIRING_ENROLLMENTS', 'ENROLLMENTS_COMPLETE', 'LMS', 'retirement_unenroll']
    - ['RETIRING_LMS_MISC', 'LMS_MISC_COMPLETE', 'LMS', 'retirement_lms_retire_misc']
    - ['RETIRING_LMS', 'LMS_COMPLETE', 'LMS', 'retirement_lms_retire']</literal_block>
        <paragraph>The <literal>client_id</literal> and <literal>client_secret</literal> keys contain the oauth credentials.
            These credentials are simply copied from the output of the
            <literal>create_dot_application</literal> management command described in
            <reference internal="True" refuri="service_setup#retirement-service-user"><inline classes="std std-ref">Retirement Service User</inline></reference>.</paragraph>
        <paragraph>The <literal>base_urls</literal> section in the configuration file defines the mappings of
            IDA to base URLs used by the scripts to construct API URLs.  Only the LMS is
            mandatory here, but if any of your pipeline states contain API calls to other
            services, those services must also be present in the <literal>base_urls</literal> section.</paragraph>
        <paragraph>The <literal>retirement_pipeline</literal> section defines the steps, state names, and order
            of execution for each environment. Each item is a list in the form of:</paragraph>
        <enumerated_list enumtype="arabic" prefix="" suffix=".">
            <list_item>
                <paragraph>Start state name</paragraph>
            </list_item>
            <list_item>
                <paragraph>End state name</paragraph>
            </list_item>
            <list_item>
                <paragraph>IDA to call against (LMS, ECOMMERCE, or CREDENTIALS currently)</paragraph>
            </list_item>
            <list_item>
                <paragraph>Method name to call in
                    <reference name="edx_api.py" refuri="https://github.com/openedx/edx-platform/blob/master/scripts/user_retirement/utils/edx_api.py">edx_api.py</reference><target ids="edx-api-py" names="edx_api.py" refuri="https://github.com/openedx/edx-platform/blob/master/scripts/user_retirement/utils/edx_api.py"></target></paragraph>
            </list_item>
        </enumerated_list>
        <paragraph>For example: <literal>['RETIRING_CREDENTIALS', 'CREDENTIALS_COMPLETE', 'CREDENTIALS',
'retire_learner']</literal> will set the user’s state to <literal>RETIRING_CREDENTIALS</literal>, call
            a pre-instantiated <literal>retire_learner</literal> method in the <literal>CredentialsApi</literal>, then set
            the user’s state to <literal>CREDENTIALS_COMPLETE</literal>.</paragraph>
        <section ids="examples" names="examples">
            <title>Examples</title>
            <paragraph>The following are some examples of how to use the driver scripts.</paragraph>
            <section ids="set-up-environment" names="set\ up\ environment">
                <title>Set Up Environment</title>
                <paragraph>Follow this <reference name="readme" refuri="https://github.com/openedx/edx-platform/tree/master/scripts/user_retirement#readme">readme</reference><target ids="readme" names="readme" refuri="https://github.com/openedx/edx-platform/tree/master/scripts/user_retirement#readme"></target> to set up your execution environment.</paragraph>
            </section>
            <section ids="list-of-targeted-learners" names="list\ of\ targeted\ learners">
                <title>List of Targeted Learners</title>
                <paragraph>Generate a list of learners that are ready for retirement (those learners who
                    have selected and confirmed account deletion and have been in the <literal>PENDING</literal>
                    state for the time specified <literal>cool_off_days</literal>).</paragraph>
                <literal_block force="False" highlight_args="{}" language="bash" linenos="False" xml:space="preserve">mkdir learners_to_retire
get_learners_to_retire.py \
    --config_file=path/to/config.yml \
    --output_dir=learners_to_retire \
    --cool_off_days=5</literal_block>
            </section>
            <section ids="run-retirement-script" names="run\ retirement\ script">
                <title>Run Retirement Script</title>
                <paragraph>After running these commands, the <literal>learners_to_retire</literal> directory  contains
                    several INI files, each containing a single line in the form of <literal>USERNAME
=&lt;username-of-learner&gt;</literal>. Iterate over these files while executing the
                    <literal>retire_one_learner.py</literal> script on each learner with a command like the following.</paragraph>
                <literal_block force="False" highlight_args="{}" language="bash" linenos="False" xml:space="preserve">retire_one_learner.py \
    --config_file=path/to/config.yml \
    --username=&lt;username-of-learner-to-retire&gt;</literal_block>
            </section>
        </section>
        <section ids="using-the-driver-scripts-in-an-automated-framework" names="using\ the\ driver\ scripts\ in\ an\ automated\ framework">
            <title>Using the Driver Scripts in an Automated Framework</title>
            <paragraph>At edX, we call the user retirement scripts from
                <reference name="Jenkins" refuri="https://jenkins.io/">Jenkins</reference><target ids="jenkins" names="jenkins" refuri="https://jenkins.io/"></target> jobs on one of our internal Jenkins
                services. The user retirement driver scripts are intended to be agnostic
                about which automation framework you use, but they were only fully tested
                from Jenkins.</paragraph>
            <paragraph>For more information about how we execute these scripts at edX, see the
                following wiki articles:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="User Retirement Jenkins Implementation" refuri="https://openedx.atlassian.net/wiki/spaces/PLAT/pages/704872737/User+Retirement+Jenkins+Implementation">User Retirement Jenkins Implementation</reference><target ids="user-retirement-jenkins-implementation" names="user\ retirement\ jenkins\ implementation" refuri="https://openedx.atlassian.net/wiki/spaces/PLAT/pages/704872737/User+Retirement+Jenkins+Implementation"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="How to: retirement Jenkins jobs development and testing" refuri="https://openedx.atlassian.net/wiki/spaces/PLAT/pages/698221444/How+to+retirement+Jenkins+jobs+development+and+testing">How to: retirement Jenkins jobs development and testing</reference><target ids="how-to-retirement-jenkins-jobs-development-and-testing" names="how\ to:\ retirement\ jenkins\ jobs\ development\ and\ testing" refuri="https://openedx.atlassian.net/wiki/spaces/PLAT/pages/698221444/How+to+retirement+Jenkins+jobs+development+and+testing"></target></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>And check out the Groovy DSL files we use to seed these jobs:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="platform/jobs/RetirementJobs.groovy in edx/jenkins-job-dsl" refuri="https://github.com/edx/jenkins-job-dsl/blob/master/platform/jobs/RetirementJobs.groovy">platform/jobs/RetirementJobs.groovy in edx/jenkins-job-dsl</reference><target ids="platform-jobs-retirementjobs-groovy-in-edx-jenkins-job-dsl" names="platform/jobs/retirementjobs.groovy\ in\ edx/jenkins-job-dsl" refuri="https://github.com/edx/jenkins-job-dsl/blob/master/platform/jobs/RetirementJobs.groovy"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="platform/jobs/RetirementJobEdxTriggers.groovy in edx/jenkins-job-dsl" refuri="https://github.com/edx/jenkins-job-dsl/blob/master/platform/jobs/RetirementJobEdxTriggers.groovy">platform/jobs/RetirementJobEdxTriggers.groovy in edx/jenkins-job-dsl</reference><target ids="platform-jobs-retirementjobedxtriggers-groovy-in-edx-jenkins-job-dsl" names="platform/jobs/retirementjobedxtriggers.groovy\ in\ edx/jenkins-job-dsl" refuri="https://github.com/edx/jenkins-job-dsl/blob/master/platform/jobs/RetirementJobEdxTriggers.groovy"></target></paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
