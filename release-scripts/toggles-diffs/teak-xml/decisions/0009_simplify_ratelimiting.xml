<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/decisions/0009_simplify_ratelimiting.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="simplify-login-and-other-rate-limiting" names="simplify\ login\ and\ other\ rate\ limiting">
        <title>Simplify Login and Other Rate Limiting</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Accepted</paragraph>
        </section>
        <section ids="decisions" names="decisions">
            <title>Decisions</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>We will deprecate and remove the <reference name="django-ratelimit-backend" refuri="https://django-ratelimit-backend.readthedocs.io/en/latest/">django-ratelimit-backend</reference> from
                        edx-platform. This library is currently not being actively developed and is
                        looking for a new maintainer.  It is also very specific to rate limiting the
                        authentication backend and so can’t easily be applied more generally.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For rate limiting in pure django views, we will use the <reference name="django-ratelimit" refuri="https://django-ratelimit.readthedocs.io/en/stable/usage.html#usage-chapter">django-ratelimit</reference>
                        library. This library is well built for general use and can be easily used
                        multiple times for stacked rate limiting over multiple keys.  eg. limit by IP
                        or by user name.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For rate limiting in any DRF based views, we will use the
                        <reference name="djangorestframework rate limiting" refuri="https://www.django-rest-framework.org/api-guide/throttling/">djangorestframework rate limiting</reference> capabilities that are built in to the
                        framework.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>edx-platform currently uses multiple different ratelimiting tools which can
                lead to confusion and difficulty understanding how endpoints are secured.
                Consider the following case study in how our login endpoints are currently rate
                limitied.</paragraph>
            <section ids="rate-limiting-logins" names="rate\ limiting\ logins">
                <title>Rate limiting Logins</title>
                <section ids="st-party-vs-3rd-party-login" names="1st\ party\ vs\ 3rd\ party\ login">
                    <title>1st party vs 3rd party login</title>
                    <paragraph>edx-platform allows for both 1st party auth, where you provide the LMS with
                        your credentials and it gives you back some session tokens, and also 3rd party
                        auth, in which you are directed to a 3rd party to authenticate and then
                        redirected to the LMS with a token from that third party which is exchanged for
                        1st party(LMS) session tokens.</paragraph>
                </section>
                <section ids="login-user-view" names="login\ user\ view">
                    <title>Login User View</title>
                    <paragraph>The <literal>login_user</literal> view in <literal>views/login.py</literal> is called for both 1st and 3rd
                        party login flows.  In the 3rd party login flow, it’s called as the callback
                        when redirected from the 3rd party login back to the LMS.</paragraph>
                    <paragraph>Currently this view is accessed through two different endpoints.  It is
                        currently a pass-through call for the <literal>/api/user/v1/account/login_session</literal>
                        using a DRF view.  It is also called directly at <literal>/login_ajax</literal></paragraph>
                    <paragraph>Currently there are five different rate limiting implementations in use as a
                        part of the login flow.</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><reference name="django-ratelimit" refuri="https://django-ratelimit.readthedocs.io/en/stable/usage.html#usage-chapter">django-ratelimit</reference> - A 3rd party rate limiting library that allows you to
                                decorate any view to add rate limiting functionality.</paragraph>
                            <paragraph>The <literal>ratelimit</literal> decorator on <literal>login_user</literal> uses the
                                LOGISTRATION_RATELIMIT_RATE django setting to determine the rate limit.  The
                                default is <literal>100 requests per 5 minutes</literal>  This applies to both 1st and 3rd
                                party login attempts.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference name="django-ratelimit-backend" refuri="https://django-ratelimit-backend.readthedocs.io/en/latest/">django-ratelimit-backend</reference> - Another 3rd party rate limiting library built
                                specifically to rate limit login views.  It provides a mixin that we can add
                                to an existing auth backend.  This replaces the base implementation of the
                                <literal>authenticate</literal> class with one that will also track the rate limits for that
                                call.</paragraph>
                            <paragraph>We currently use the default rate limits provided by the upstream library
                                which is <literal>30 requests per 5 minute</literal>  This is only applies to 1st party
                                login attempts and does not count against 3rd party logins.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference name="djangorestframework rate limiting" refuri="https://www.django-rest-framework.org/api-guide/throttling/">djangorestframework rate limiting</reference> - DRF provides a throttling
                                capability that can be used with any DRF views.  This is not used for the
                                login view but is applied to the <literal>/third_party_auth_context</literal> endpoint
                                (<literal>TPAContextView</literal>) to rate limit 3rd party auth requests.  The default
                                rate limit for this endpoint is <literal>20 requests per minute</literal>.  Since this rate
                                limiting is only applied to a 3rd party auth specific view, it only impact
                                the rate at which 3rd party auth is possible.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference name="MAX_FAILED_LOGIN_ATTEMPTS" refuri="https://github.com/openedx/edx-platform/blob/cd6064692681ab99912e3da3721cd857a0b313e9/common/djangoapps/student/models.py#L980">MAX_FAILED_LOGIN_ATTEMPTS</reference> - This is an optional feature that can be
                                enable(disabled by default) which will limit the number of failed logins a
                                user is allowed to have before their account is locked out.  This feature
                                works slightly differently from the other rate limiting features in that it
                                persists the number of failures and does not reset them until we have had a
                                successful login.  If a maximum number of failed request is reached, the
                                account is locked out for 30 minutes.  The default settings for this feature
                                are to lock out the user for 30 minutes if 6 login failures occur over any
                                period of time.</paragraph>
                            <paragraph>edx.org has the <literal>MAX_FAILED_LOGIN_ATTEMPTS</literal> feature enabled.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference name="cloudflare rate limiting" refuri="https://www.cloudflare.com/rate-limiting/">cloudflare rate limiting</reference> - This is edx.org specific and not enabled by
                                default for Open edX.</paragraph>
                        </list_item>
                    </bullet_list>
                </section>
            </section>
            <section ids="ratelimiting-other-endpoints" names="ratelimiting\ other\ endpoints">
                <title>Ratelimiting other endpoints</title>
                <paragraph>Other endpoints usually use only one of the above mentioned 3 libraries(drf,
                    django-ratelimit, django-ratelimit-backend).  The decision below should clarify
                    how and when we should be using different libraries.</paragraph>
                <target ids="django-ratelimit" names="django-ratelimit" refuri="https://django-ratelimit.readthedocs.io/en/stable/usage.html#usage-chapter"></target>
                <target ids="django-ratelimit-backend" names="django-ratelimit-backend" refuri="https://django-ratelimit-backend.readthedocs.io/en/latest/"></target>
                <target ids="djangorestframework-rate-limiting" names="djangorestframework\ rate\ limiting" refuri="https://www.django-rest-framework.org/api-guide/throttling/"></target>
                <target ids="max-failed-login-attempts" names="max_failed_login_attempts" refuri="https://github.com/openedx/edx-platform/blob/cd6064692681ab99912e3da3721cd857a0b313e9/common/djangoapps/student/models.py#L980"></target>
                <target ids="cloudflare-rate-limiting" names="cloudflare\ rate\ limiting" refuri="https://www.cloudflare.com/rate-limiting/"></target>
            </section>
        </section>
    </section>
</document>
