<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/static-assets.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="preparing-static-assets-for-edx-platform" names="preparing\ static\ assets\ for\ edx-platform">
        <title>Preparing static assets for edx-platform</title>
        <paragraph>To run a production or development edx-platform site, you will need to <reference name="build assets" refid="build-assets">build
                assets</reference> assets using <literal>npm run ...</literal> commands. Furthermore, for a production
            site, you will also need to <reference name="collect assets" refid="collect-assets">collect assets</reference>.</paragraph>
        <paragraph><emphasis>Please note that developing new frontend pages for edx-platform is highly
                discouraged. New frontend pages should be built as micro-frontends (MFEs),
                which communicate with edx-platform over AJAX, but are built and deployed
                independently. Eventually, we expect that MFEs will replace all edx-platform
                frontend pages, except perhaps XBlock views.</emphasis></paragraph>
        <section ids="configuraiton" names="configuraiton">
            <title>Configuraiton</title>
            <paragraph>To customize the static assets build, set some or all of these variable in your
                shell environment before building or collecting static assets. As noted below,
                some of these values will automatically become available as Django settings in
                LMS or CMS (unless you separately override them in a private Django settings
                file or <literal>LMS_CFG</literal>/<literal>CMS_CFG</literal> yaml file).</paragraph>
            <table>
                <tgroup cols="5">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="20"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>Environment Variable</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Default</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Description</paragraph>
                            </entry>
                            <entry>
                                <paragraph>LMS Django Setting</paragraph>
                            </entry>
                            <entry>
                                <paragraph>CMS Django Setting</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>COMPREHENSIVE_THEME_DIRS</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>(empty)</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Directories that will be searched when compiling themes.
                                    Separate multiple paths with colons (<literal>:</literal>).</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>COMPREHENSIVE_THEME_DIRS</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>COMPREHENSIVE_THEME_DIRS</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>WEBPACK_CONFIG_PATH</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>webpack.prod.config.js</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Path to Webpack config file</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>STATIC_ROOT_LMS</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>test_root/staticfiles</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Path to which LMS’s static assets will be collected</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>STATIC_ROOT</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>STATIC_ROOT_CMS</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>$STATIC_ROOT_LMS/studio</literal>.</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Path to which CMS’s static assets will be collected</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>STATIC_ROOT</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>JS_ENV_EXTRA_CONFIG</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Global configuration object available to edx-platform JS modules. Specified as a JSON string.
                                    Known keys:</paragraph>
                                <block_quote>
                                    <bullet_list bullet="*">
                                        <list_item>
                                            <paragraph><literal>TINYMCE_ADDITIONAL_PLUGINS</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>TINYMCE_CONFIG_OVERRIDES</literal></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </block_quote>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="build-assets" names="build\ assets">
            <title>Build assets</title>
            <paragraph>Building frontend assets requires an active Node and Python environment with
                dependencies installed:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">npm clean-install
pip install -r requirements/edx/assets.txt</literal_block>
            <paragraph>Once your environment variables are set and build dependencies are installed,
                the one-sized-fits-all command to build assets is <literal>npm run build</literal>. If
                your needs are more advanced, though, you can use some combination of the
                commands below:</paragraph>
            <table>
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="33"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>Command</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Meaning</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Options</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>npm run build</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Combines <literal>npm run webpack</literal> and <literal>npm run compile-sass</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>None</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run build-dev</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Combines <literal>npm run webpack-dev</literal> and <literal>npm run compile-sass-dev</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>None</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run webpack</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Build JS bundles with Webpack</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Options are passed through to the <reference name="webpack CLI" refuri="https://webpack.js.org/api/cli/">webpack CLI</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run webpack-dev</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Build JS bundles with Webpack for a development environment</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Options are passed through to the <reference name="webpack CLI" refuri="https://webpack.js.org/api/cli/">webpack CLI</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run compile-sass</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Compile default and/or themed Sass</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Use <literal>--help</literal> to see available options</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run compile-sass-dev</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Compile default and/or themed Sass, uncompressed with source comments</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Use <literal>--help</literal> to see available options</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run watch</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Dev-only. Combine <literal>npm run watch-webpack</literal> and <literal>npm run watch-sass</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>None.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run watch-webpack</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Dev-only. Wait for JS changes and re-run Webpack</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Options are passed through to the <reference name="webpack CLI" refuri="https://webpack.js.org/api/cli/">webpack CLI</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>npm run watch-sass</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>Dev-only. Wait for Sass changes and re-compile</paragraph>
                            </entry>
                            <entry>
                                <paragraph>None.</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>When supplying options to these commands, separate the command from the options
                with a double-hyphen (<literal>--</literal>), like this:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">npm run compile-sass -- --themes-dir /my/custom/themes/dir</literal_block>
            <paragraph>Omitting the double-hyphen will pass the option to <literal>npm run</literal> itself, which
                probably isn’t what you want to do.</paragraph>
            <paragraph>If you would like to understand these more deeply, they are defined in
                <reference name="package.json" refuri="../../package.json">package.json</reference>. Please note: the <literal>npm run</literal> command interfaces are stable and
                supported, but their underlying implementations may change without notice.</paragraph>
            <target ids="webpack-cli" names="webpack\ cli" refuri="https://webpack.js.org/api/cli/"></target>
            <target ids="package-json" names="package.json" refuri="../../package.json"></target>
        </section>
        <section ids="collect-assets" names="collect\ assets">
            <title>Collect assets</title>
            <paragraph>Once assets are built, they can be <emphasis>collected</emphasis> into another directory for
                efficient serving. This is only necessary on production sites; developers can
                skip this section.</paragraph>
            <paragraph>First, ensure you have a Python enironment with all edx-platform dependencies
                installed:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">pip install -r requirements/edx/base.txt -e .</literal_block>
            <paragraph>Next, download localized versions of edx-platform assets. Under the hood, this
                command uses the <reference name="Open edX Atlas" refuri="https://github.com/openedx/openedx-atlas">Open edX Atlas</reference> tool, which manages aggregated translations
                from edx-platform and its various plugins:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">make pull_translations</literal_block>
            <paragraph>Finally, invoke <reference name="Django's collectstatic command" refuri="https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#collectstatic">Django’s collectstatic command</reference>, once for the Learning
                Management System, and once for the Content Management Studio:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">./manage.py lms collectstatic --noinput
./manage.py cms collectstatic --noinput</literal_block>
            <paragraph>The <literal>--noinput</literal> option lets you avoid having to type “yes” when overwriting
                existing collected assets.</paragraph>
            <target ids="open-edx-atlas" names="open\ edx\ atlas" refuri="https://github.com/openedx/openedx-atlas"></target>
            <target ids="django-s-collectstatic-command" names="django's\ collectstatic\ command" refuri="https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#collectstatic"></target>
        </section>
    </section>
</document>
