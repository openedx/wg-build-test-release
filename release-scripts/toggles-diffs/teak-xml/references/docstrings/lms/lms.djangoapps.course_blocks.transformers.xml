<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.course_blocks.transformers.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-course-blocks-transformers-package" names="lms.djangoapps.course_blocks.transformers\ package">
        <title>lms.djangoapps.course_blocks.transformers package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.access_denied_filter lms-djangoapps-course-blocks-transformers-access-denied-filter-module" names="lms.djangoapps.course_blocks.transformers.access_denied_filter\ module">
            <title>lms.djangoapps.course_blocks.transformers.access_denied_filter module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.access_denied_filter',\ 'module-lms.djangoapps.course_blocks.transformers.access_denied_filter',\ '',\ None]"></index>
            <paragraph>Access Denied Message Filter Transformer implementation.</paragraph>
            <index entries="['single',\ 'AccessDeniedMessageFilterTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.access_denied_filter)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AccessDeniedMessageFilterTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer" class="" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.access_denied_filter.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AccessDeniedMessageFilterTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that removes any block from the course that has an
                        authorization_denial_reason or an authorization_denial_message.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessDeniedMessageFilterTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer READ_VERSION" class="AccessDeniedMessageFilterTransformer" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessDeniedMessageFilterTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer WRITE_VERSION" class="AccessDeniedMessageFilterTransformer" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessDeniedMessageFilterTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer collect" class="AccessDeniedMessageFilterTransformer" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.collect" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessDeniedMessageFilterTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer name" class="AccessDeniedMessageFilterTransformer" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer.name" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.name" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessDeniedMessageFilterTransformer.transform()" _toc_parts="lms.djangoapps.course_blocks.transformers.access_denied_filter AccessDeniedMessageFilterTransformer transform" class="AccessDeniedMessageFilterTransformer" classes="sig sig-object py" fullname="AccessDeniedMessageFilterTransformer.transform" ids="lms.djangoapps.course_blocks.transformers.access_denied_filter.AccessDeniedMessageFilterTransformer.transform" module="lms.djangoapps.course_blocks.transformers.access_denied_filter"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the given block_structure for the given usage_info,
                                assuming the block_structure contains cached data from a prior
                                call to the collect method of the latest version of the
                                Transformer.</paragraph>
                            <paragraph>No access to the modulestore nor instantiation of xBlocks should
                                be performed during the execution of this method. However,
                                accesses to user-specific data (outside of the modulestore and
                                not via xBlocks) is permitted in order to apply the transform
                                for the given usage_info.</paragraph>
                            <paragraph>Note: The root of the given block_structure is not necessarily
                                the same as the root of the block_structure passed to the prior
                                collect method. The collect method is given the top-most root
                                of the structure, while the transform method may be called upon
                                any sub-structure or even a single block within the originally
                                collected structure.</paragraph>
                            <paragraph>A Transformer may choose to remove entire sub-structures during
                                the transform method and may do so using the remove_block and
                                filter_with_removal methods.</paragraph>
                            <paragraph>Amongst the many methods available for a block_structure, the
                                following methods are commonly used during transforms:</paragraph>
                            <block_quote>
                                <paragraph>get_xblock_field
                                    get_transformer_data
                                    get_transformer_block_field
                                    remove_block_traversal
                                    filter_with_removal
                                    filter_topological_traversal
                                    topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.hidden_content lms-djangoapps-course-blocks-transformers-hidden-content-module" names="lms.djangoapps.course_blocks.transformers.hidden_content\ module">
            <title>lms.djangoapps.course_blocks.transformers.hidden_content module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.hidden_content',\ 'module-lms.djangoapps.course_blocks.transformers.hidden_content',\ '',\ None]"></index>
            <paragraph>Visibility Transformer implementation.</paragraph>
            <index entries="['single',\ 'HiddenContentTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.hidden_content)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="HiddenContentTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer" class="" classes="sig sig-object py" fullname="HiddenContentTransformer" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.hidden_content.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">HiddenContentTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that enforces the hide_after_due field on
                        blocks by removing children blocks from the block structure for
                        which the user does not have access. The hide_after_due
                        field on a block is percolated down to its descendants, so that
                        all blocks enforce the hidden content settings from their ancestors.</paragraph>
                    <paragraph>For a block with multiple parents, access is denied only if
                        access is denied from all its parents.</paragraph>
                    <paragraph>Staff users are exempted from hidden content rules.</paragraph>
                    <paragraph>IMPORTANT: Must be run _after_ the DateOverrideTransformer from edx-when
                        in case the ‘due’ date on a block has been shifted for a user.</paragraph>
                    <index entries="['single',\ 'MERGED_END_DATE\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.MERGED_END_DATE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="HiddenContentTransformer.MERGED_END_DATE" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer MERGED_END_DATE" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.MERGED_END_DATE" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.MERGED_END_DATE" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_name classes="sig-name descname" xml:space="preserve">MERGED_END_DATE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'merged_end_date'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'MERGED_HIDE_AFTER_DUE\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.MERGED_HIDE_AFTER_DUE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="HiddenContentTransformer.MERGED_HIDE_AFTER_DUE" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer MERGED_HIDE_AFTER_DUE" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.MERGED_HIDE_AFTER_DUE" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.MERGED_HIDE_AFTER_DUE" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_name classes="sig-name descname" xml:space="preserve">MERGED_HIDE_AFTER_DUE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'merged_hide_after_due'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="HiddenContentTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer READ_VERSION" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>4</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="HiddenContentTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer WRITE_VERSION" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>4</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="HiddenContentTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer collect" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.collect" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="HiddenContentTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer name" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.name" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.name" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="HiddenContentTransformer.transform()" _toc_parts="lms.djangoapps.course_blocks.transformers.hidden_content HiddenContentTransformer transform" class="HiddenContentTransformer" classes="sig sig-object py" fullname="HiddenContentTransformer.transform" ids="lms.djangoapps.course_blocks.transformers.hidden_content.HiddenContentTransformer.transform" module="lms.djangoapps.course_blocks.transformers.hidden_content"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the given block_structure for the given usage_info,
                                assuming the block_structure contains cached data from a prior
                                call to the collect method of the latest version of the
                                Transformer.</paragraph>
                            <paragraph>No access to the modulestore nor instantiation of xBlocks should
                                be performed during the execution of this method. However,
                                accesses to user-specific data (outside of the modulestore and
                                not via xBlocks) is permitted in order to apply the transform
                                for the given usage_info.</paragraph>
                            <paragraph>Note: The root of the given block_structure is not necessarily
                                the same as the root of the block_structure passed to the prior
                                collect method. The collect method is given the top-most root
                                of the structure, while the transform method may be called upon
                                any sub-structure or even a single block within the originally
                                collected structure.</paragraph>
                            <paragraph>A Transformer may choose to remove entire sub-structures during
                                the transform method and may do so using the remove_block and
                                filter_with_removal methods.</paragraph>
                            <paragraph>Amongst the many methods available for a block_structure, the
                                following methods are commonly used during transforms:</paragraph>
                            <block_quote>
                                <paragraph>get_xblock_field
                                    get_transformer_data
                                    get_transformer_block_field
                                    remove_block_traversal
                                    filter_with_removal
                                    filter_topological_traversal
                                    topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.library_content lms-djangoapps-course-blocks-transformers-library-content-module" names="lms.djangoapps.course_blocks.transformers.library_content\ module">
            <title>lms.djangoapps.course_blocks.transformers.library_content module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.library_content',\ 'module-lms.djangoapps.course_blocks.transformers.library_content',\ '',\ None]"></index>
            <paragraph>Content Library Transformer.</paragraph>
            <index entries="['single',\ 'ContentLibraryOrderTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.library_content)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentLibraryOrderTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer" class="" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.library_content.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentLibraryOrderTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that manipulates the block structure by modifying the order of the
                        selected blocks within a library_content block to match the order of the selections
                        made by the ContentLibraryTransformer or the corresponding XBlock. So this transformer
                        requires the selections for the randomized content block to be already
                        made either by the ContentLibraryTransformer or the XBlock.</paragraph>
                    <paragraph>Staff users are <emphasis>not</emphasis> exempted from library content pathways.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentLibraryOrderTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer READ_VERSION" class="ContentLibraryOrderTransformer" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentLibraryOrderTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer WRITE_VERSION" class="ContentLibraryOrderTransformer" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryOrderTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer collect" class="ContentLibraryOrderTransformer" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.collect" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryOrderTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer name" class="ContentLibraryOrderTransformer" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer.name" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.name" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryOrderTransformer.transform()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryOrderTransformer transform" class="ContentLibraryOrderTransformer" classes="sig sig-object py" fullname="ContentLibraryOrderTransformer.transform" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryOrderTransformer.transform" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the order of the children of the randomized content block
                                to match the order of the selections made and stored in the XBlock ‘selected’ field.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ContentLibraryTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.library_content)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentLibraryTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer" class="" classes="sig sig-object py" fullname="ContentLibraryTransformer" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.library_content.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentLibraryTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin"><literal classes="xref py py-class">FilteringTransformerMixin</literal></reference>, <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that manipulates the block structure by removing all
                        blocks within a library_content block to which a user should not
                        have access.</paragraph>
                    <paragraph>Staff users are not to be exempted from library content pathways.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentLibraryTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer READ_VERSION" class="ContentLibraryTransformer" classes="sig sig-object py" fullname="ContentLibraryTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentLibraryTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer WRITE_VERSION" class="ContentLibraryTransformer" classes="sig sig-object py" fullname="ContentLibraryTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer collect" class="ContentLibraryTransformer" classes="sig sig-object py" fullname="ContentLibraryTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.collect" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer name" class="ContentLibraryTransformer" classes="sig sig-object py" fullname="ContentLibraryTransformer.name" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.name" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform_block_filters()\ (lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.transform_block_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentLibraryTransformer.transform_block_filters()" _toc_parts="lms.djangoapps.course_blocks.transformers.library_content ContentLibraryTransformer transform_block_filters" class="ContentLibraryTransformer" classes="sig sig-object py" fullname="ContentLibraryTransformer.transform_block_filters" ids="lms.djangoapps.course_blocks.transformers.library_content.ContentLibraryTransformer.transform_block_filters" module="lms.djangoapps.course_blocks.transformers.library_content"><desc_name classes="sig-name descname" xml:space="preserve">transform_block_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>This is an alternative to the standard transform method.</paragraph>
                            <paragraph>Returns a list of filter functions to be used for filtering out
                                any unwanted blocks in the given block_structure.</paragraph>
                            <paragraph>In addition to the commonly used methods listed above, the following
                                methods are commonly used by implementations of transform_block_filters:</paragraph>
                            <block_quote>
                                <paragraph>create_universal_filter
                                    create_removal_filter</paragraph>
                            </block_quote>
                            <paragraph>Note: Transformers that implement this alternative should be
                                independent of all other registered transformers as they may not
                                be applied in the order in which they were listed in the registry.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.load_override_data lms-djangoapps-course-blocks-transformers-load-override-data-module" names="lms.djangoapps.course_blocks.transformers.load_override_data\ module">
            <title>lms.djangoapps.course_blocks.transformers.load_override_data module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.load_override_data',\ 'module-lms.djangoapps.course_blocks.transformers.load_override_data',\ '',\ None]"></index>
            <paragraph>Load Override Data Transformer</paragraph>
            <index entries="['single',\ 'OverrideDataTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.load_override_data)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="OverrideDataTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer" class="" classes="sig sig-object py" fullname="OverrideDataTransformer" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.load_override_data.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">OverrideDataTransformer</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that load override data in xblock.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="OverrideDataTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer READ_VERSION" class="OverrideDataTransformer" classes="sig sig-object py" fullname="OverrideDataTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="OverrideDataTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer WRITE_VERSION" class="OverrideDataTransformer" classes="sig sig-object py" fullname="OverrideDataTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="OverrideDataTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer collect" class="OverrideDataTransformer" classes="sig sig-object py" fullname="OverrideDataTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.collect" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="OverrideDataTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer name" class="OverrideDataTransformer" classes="sig sig-object py" fullname="OverrideDataTransformer.name" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.name" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="OverrideDataTransformer.transform()" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data OverrideDataTransformer transform" class="OverrideDataTransformer" classes="sig sig-object py" fullname="OverrideDataTransformer.transform" ids="lms.djangoapps.course_blocks.transformers.load_override_data.OverrideDataTransformer.transform" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>loads override data into blocks</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'override_xblock_fields()\ (in\ module\ lms.djangoapps.course_blocks.transformers.load_override_data)',\ 'lms.djangoapps.course_blocks.transformers.load_override_data.override_xblock_fields',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="override_xblock_fields()" _toc_parts="lms.djangoapps.course_blocks.transformers.load_override_data override_xblock_fields" class="" classes="sig sig-object py" fullname="override_xblock_fields" ids="lms.djangoapps.course_blocks.transformers.load_override_data.override_xblock_fields" module="lms.djangoapps.course_blocks.transformers.load_override_data"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.load_override_data.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">override_xblock_fields</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">location_list</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>loads override data of block</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseLocator</literal_emphasis>) – course locator object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>location_list</literal_strong> (<literal_emphasis>List&lt;UsageKey&gt;</literal_emphasis>) – list of usage key of all blocks</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure"><literal_emphasis>BlockStructure</literal_emphasis></reference>) – block structure class</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user_id</literal_strong> (<literal_emphasis>int</literal_emphasis>) – User id</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.split_test lms-djangoapps-course-blocks-transformers-split-test-module" names="lms.djangoapps.course_blocks.transformers.split_test\ module">
            <title>lms.djangoapps.course_blocks.transformers.split_test module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.split_test',\ 'module-lms.djangoapps.course_blocks.transformers.split_test',\ '',\ None]"></index>
            <paragraph>Split Test Block Transformer</paragraph>
            <index entries="['single',\ 'SplitTestTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.split_test)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SplitTestTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer" class="" classes="sig sig-object py" fullname="SplitTestTransformer" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.split_test.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SplitTestTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin"><literal classes="xref py py-class">FilteringTransformerMixin</literal></reference>, <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A nested transformer of the UserPartitionTransformer that honors the
                        block structure pathways created by split_test blocks.</paragraph>
                    <paragraph>To avoid code duplication, the implementation transforms its block
                        access representation to the representation used by user_partitions.
                        Namely, the ‘group_id_to_child’ field on a split_test block is
                        transformed into the, now standard, ‘group_access’ fields in the
                        split_test block’s children.</paragraph>
                    <paragraph>The implementation therefore relies on the UserPartitionTransformer
                        to actually enforce the access using the ‘user_partitions’ and
                        ‘group_access’ fields.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SplitTestTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer READ_VERSION" class="SplitTestTransformer" classes="sig sig-object py" fullname="SplitTestTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SplitTestTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer WRITE_VERSION" class="SplitTestTransformer" classes="sig sig-object py" fullname="SplitTestTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SplitTestTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer collect" class="SplitTestTransformer" classes="sig sig-object py" fullname="SplitTestTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.collect" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SplitTestTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer name" class="SplitTestTransformer" classes="sig sig-object py" fullname="SplitTestTransformer.name" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.name" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform_block_filters()\ (lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.transform_block_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SplitTestTransformer.transform_block_filters()" _toc_parts="lms.djangoapps.course_blocks.transformers.split_test SplitTestTransformer transform_block_filters" class="SplitTestTransformer" classes="sig sig-object py" fullname="SplitTestTransformer.transform_block_filters" ids="lms.djangoapps.course_blocks.transformers.split_test.SplitTestTransformer.transform_block_filters" module="lms.djangoapps.course_blocks.transformers.split_test"><desc_name classes="sig-name descname" xml:space="preserve">transform_block_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Mutates block_structure based on the given usage_info.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.start_date lms-djangoapps-course-blocks-transformers-start-date-module" names="lms.djangoapps.course_blocks.transformers.start_date\ module">
            <title>lms.djangoapps.course_blocks.transformers.start_date module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.start_date',\ 'module-lms.djangoapps.course_blocks.transformers.start_date',\ '',\ None]"></index>
            <paragraph>Start Date Transformer implementation.</paragraph>
            <index entries="['single',\ 'StartDateTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.start_date)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="StartDateTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer" class="" classes="sig sig-object py" fullname="StartDateTransformer" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.start_date.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">StartDateTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin"><literal classes="xref py py-class">FilteringTransformerMixin</literal></reference>, <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that enforces the ‘start’ and ‘days_early_for_beta’
                        fields on blocks by removing blocks from the block structure for
                        which the user does not have access. The ‘start’ field on a
                        block is percolated down to its descendants, so that all blocks
                        enforce the ‘start’ field from their ancestors.  The assumed
                        ‘start’ value for a block is then the maximum of its parent and its
                        own.</paragraph>
                    <paragraph>For a block with multiple parents, the assumed parent start date
                        value is a computed minimum of the start dates of all its parents.
                        So as long as one parent chain allows access, the block has access.</paragraph>
                    <paragraph>Staff users are exempted from visibility rules.</paragraph>
                    <index entries="['single',\ 'MERGED_START_DATE\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.MERGED_START_DATE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="StartDateTransformer.MERGED_START_DATE" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer MERGED_START_DATE" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.MERGED_START_DATE" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.MERGED_START_DATE" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_name classes="sig-name descname" xml:space="preserve">MERGED_START_DATE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'merged_start_date'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="StartDateTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer READ_VERSION" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="StartDateTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer WRITE_VERSION" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StartDateTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer collect" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.collect" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StartDateTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer name" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.name" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.name" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform_block_filters()\ (lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.transform_block_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StartDateTransformer.transform_block_filters()" _toc_parts="lms.djangoapps.course_blocks.transformers.start_date StartDateTransformer transform_block_filters" class="StartDateTransformer" classes="sig sig-object py" fullname="StartDateTransformer.transform_block_filters" ids="lms.djangoapps.course_blocks.transformers.start_date.StartDateTransformer.transform_block_filters" module="lms.djangoapps.course_blocks.transformers.start_date"><desc_name classes="sig-name descname" xml:space="preserve">transform_block_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>This is an alternative to the standard transform method.</paragraph>
                            <paragraph>Returns a list of filter functions to be used for filtering out
                                any unwanted blocks in the given block_structure.</paragraph>
                            <paragraph>In addition to the commonly used methods listed above, the following
                                methods are commonly used by implementations of transform_block_filters:</paragraph>
                            <block_quote>
                                <paragraph>create_universal_filter
                                    create_removal_filter</paragraph>
                            </block_quote>
                            <paragraph>Note: Transformers that implement this alternative should be
                                independent of all other registered transformers as they may not
                                be applied in the order in which they were listed in the registry.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.user_partitions lms-djangoapps-course-blocks-transformers-user-partitions-module" names="lms.djangoapps.course_blocks.transformers.user_partitions\ module">
            <title>lms.djangoapps.course_blocks.transformers.user_partitions module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.user_partitions',\ 'module-lms.djangoapps.course_blocks.transformers.user_partitions',\ '',\ None]"></index>
            <paragraph>User Partitions Transformer</paragraph>
            <index entries="['single',\ 'UserPartitionTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.user_partitions)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="UserPartitionTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer" class="" classes="sig sig-object py" fullname="UserPartitionTransformer" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.user_partitions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UserPartitionTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that enforces the group access rules on course blocks,
                        by honoring their user_partitions and group_access fields, and
                        removing all blocks in the block structure to which the user does
                        not have group access.</paragraph>
                    <paragraph>Staff users are <emphasis>not</emphasis> exempted from user partition pathways.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UserPartitionTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer READ_VERSION" class="UserPartitionTransformer" classes="sig sig-object py" fullname="UserPartitionTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="UserPartitionTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer WRITE_VERSION" class="UserPartitionTransformer" classes="sig sig-object py" fullname="UserPartitionTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="UserPartitionTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer collect" class="UserPartitionTransformer" classes="sig sig-object py" fullname="UserPartitionTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.collect" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Computes any information for each XBlock that’s necessary to
                                execute this transformer’s transform method.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>block_structure</literal_strong> (<literal_emphasis>BlockStructureCollectedData</literal_emphasis>)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="UserPartitionTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer name" class="UserPartitionTransformer" classes="sig sig-object py" fullname="UserPartitionTransformer.name" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.name" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="UserPartitionTransformer.transform()" _toc_parts="lms.djangoapps.course_blocks.transformers.user_partitions UserPartitionTransformer transform" class="UserPartitionTransformer" classes="sig sig-object py" fullname="UserPartitionTransformer.transform" ids="lms.djangoapps.course_blocks.transformers.user_partitions.UserPartitionTransformer.transform" module="lms.djangoapps.course_blocks.transformers.user_partitions"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the given block_structure for the given usage_info,
                                assuming the block_structure contains cached data from a prior
                                call to the collect method of the latest version of the
                                Transformer.</paragraph>
                            <paragraph>No access to the modulestore nor instantiation of xBlocks should
                                be performed during the execution of this method. However,
                                accesses to user-specific data (outside of the modulestore and
                                not via xBlocks) is permitted in order to apply the transform
                                for the given usage_info.</paragraph>
                            <paragraph>Note: The root of the given block_structure is not necessarily
                                the same as the root of the block_structure passed to the prior
                                collect method. The collect method is given the top-most root
                                of the structure, while the transform method may be called upon
                                any sub-structure or even a single block within the originally
                                collected structure.</paragraph>
                            <paragraph>A Transformer may choose to remove entire sub-structures during
                                the transform method and may do so using the remove_block and
                                filter_with_removal methods.</paragraph>
                            <paragraph>Amongst the many methods available for a block_structure, the
                                following methods are commonly used during transforms:</paragraph>
                            <block_quote>
                                <paragraph>get_xblock_field
                                    get_transformer_data
                                    get_transformer_block_field
                                    remove_block_traversal
                                    filter_with_removal
                                    filter_topological_traversal
                                    topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.utils lms-djangoapps-course-blocks-transformers-utils-module" names="lms.djangoapps.course_blocks.transformers.utils\ module">
            <title>lms.djangoapps.course_blocks.transformers.utils module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.utils',\ 'module-lms.djangoapps.course_blocks.transformers.utils',\ '',\ None]"></index>
            <paragraph>Common Helper utilities for transformers</paragraph>
            <index entries="['single',\ 'collect_merged_boolean_field()\ (in\ module\ lms.djangoapps.course_blocks.transformers.utils)',\ 'lms.djangoapps.course_blocks.transformers.utils.collect_merged_boolean_field',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="collect_merged_boolean_field()" _toc_parts="lms.djangoapps.course_blocks.transformers.utils collect_merged_boolean_field" class="" classes="sig sig-object py" fullname="collect_merged_boolean_field" ids="lms.djangoapps.course_blocks.transformers.utils.collect_merged_boolean_field" module="lms.djangoapps.course_blocks.transformers.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">collect_merged_boolean_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">merged_field_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Collects a boolean xBlock field of name xblock_field_name
                        for the given block_structure and transformer.  The boolean
                        value is percolated down the hierarchy of the block_structure
                        and stored as a value of merged_field_name in the
                        block_structure.</paragraph>
                    <paragraph>Assumes that the boolean field is False, by default. So,
                        the value is ANDed across all parents for blocks with
                        multiple parents and ORed across all ancestors down a single
                        hierarchy chain.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'collect_merged_date_field()\ (in\ module\ lms.djangoapps.course_blocks.transformers.utils)',\ 'lms.djangoapps.course_blocks.transformers.utils.collect_merged_date_field',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="collect_merged_date_field()" _toc_parts="lms.djangoapps.course_blocks.transformers.utils collect_merged_date_field" class="" classes="sig sig-object py" fullname="collect_merged_date_field" ids="lms.djangoapps.course_blocks.transformers.utils.collect_merged_date_field" module="lms.djangoapps.course_blocks.transformers.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">collect_merged_date_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">xblock_field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">merged_field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default_date</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">func_merge_parents=&lt;built-in function min&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">func_merge_ancestors=&lt;built-in function max&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Collects a date xBlock field of name xblock_field_name
                        for the given block_structure and transformer.  The date
                        value is percolated down the hierarchy of the block_structure
                        and stored as a value of merged_field_name in the
                        block_structure.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'collect_unioned_set_field()\ (in\ module\ lms.djangoapps.course_blocks.transformers.utils)',\ 'lms.djangoapps.course_blocks.transformers.utils.collect_unioned_set_field',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="collect_unioned_set_field()" _toc_parts="lms.djangoapps.course_blocks.transformers.utils collect_unioned_set_field" class="" classes="sig sig-object py" fullname="collect_unioned_set_field" ids="lms.djangoapps.course_blocks.transformers.utils.collect_unioned_set_field" module="lms.djangoapps.course_blocks.transformers.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">collect_unioned_set_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">merged_field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_by</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Recursively union a set field on the block structure.</paragraph>
                    <paragraph>If a block matches filter_by, it will be added to the result set.
                        This (potentially empty) set is unioned with the sets contained in
                        merged_field_name for all parents of the block.</paragraph>
                    <paragraph>This set union operation takes place during a topological traversal
                        of the block_structure, so all sets are inherited by descendants.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>block_structure</literal_strong> – BlockStructure to traverse</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>transformer</literal_strong> – transformer that will be used for <problematic ids="id2" refid="id1">get_</problematic> and
                                            set_transformer_block_field</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>merged_field_name</literal_strong> – name of the field to store</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>filter_by</literal_strong> – a unary lambda that returns true if a given
                                            block_key should be included in the result set</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_field_on_block()\ (in\ module\ lms.djangoapps.course_blocks.transformers.utils)',\ 'lms.djangoapps.course_blocks.transformers.utils.get_field_on_block',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_field_on_block()" _toc_parts="lms.djangoapps.course_blocks.transformers.utils get_field_on_block" class="" classes="sig sig-object py" fullname="get_field_on_block" ids="lms.djangoapps.course_blocks.transformers.utils.get_field_on_block" module="lms.djangoapps.course_blocks.transformers.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_field_on_block</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default_value</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the field value that is directly set on the xblock.
                        Do not get the inherited value since field inheritance
                        returns value from only a single parent chain
                        (e.g., doesn’t take a union in DAGs).</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers.visibility lms-djangoapps-course-blocks-transformers-visibility-module" names="lms.djangoapps.course_blocks.transformers.visibility\ module">
            <title>lms.djangoapps.course_blocks.transformers.visibility module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers.visibility',\ 'module-lms.djangoapps.course_blocks.transformers.visibility',\ '',\ None]"></index>
            <paragraph>Visibility Transformer implementation.</paragraph>
            <index entries="['single',\ 'VisibilityTransformer\ (class\ in\ lms.djangoapps.course_blocks.transformers.visibility)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="VisibilityTransformer" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer" class="" classes="sig sig-object py" fullname="VisibilityTransformer" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_blocks.transformers.visibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">VisibilityTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin"><literal classes="xref py py-class">FilteringTransformerMixin</literal></reference>, <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that enforces the visible_to_staff_only field on
                        blocks by removing blocks from the block structure for which the
                        user does not have access. The visible_to_staff_only field on a
                        block is percolated down to its descendants, so that all blocks
                        enforce the visibility settings from their ancestors.</paragraph>
                    <paragraph>For a block with multiple parents, access is denied only if
                        visibility is denied for all its parents.</paragraph>
                    <paragraph>Staff users are exempted from visibility rules.</paragraph>
                    <index entries="['single',\ 'MERGED_VISIBLE_TO_STAFF_ONLY\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.MERGED_VISIBLE_TO_STAFF_ONLY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="VisibilityTransformer.MERGED_VISIBLE_TO_STAFF_ONLY" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer MERGED_VISIBLE_TO_STAFF_ONLY" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.MERGED_VISIBLE_TO_STAFF_ONLY" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.MERGED_VISIBLE_TO_STAFF_ONLY" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_name classes="sig-name descname" xml:space="preserve">MERGED_VISIBLE_TO_STAFF_ONLY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'merged_visible_to_staff_only'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'READ_VERSION\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="VisibilityTransformer.READ_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer READ_VERSION" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.READ_VERSION" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.READ_VERSION" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ attribute)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="VisibilityTransformer.WRITE_VERSION" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer WRITE_VERSION" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.WRITE_VERSION" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.WRITE_VERSION" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="VisibilityTransformer.collect()" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer collect" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.collect" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.collect" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ class\ method)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="VisibilityTransformer.name()" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer name" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.name" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.name" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform_block_filters()\ (lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer\ method)',\ 'lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.transform_block_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="VisibilityTransformer.transform_block_filters()" _toc_parts="lms.djangoapps.course_blocks.transformers.visibility VisibilityTransformer transform_block_filters" class="VisibilityTransformer" classes="sig sig-object py" fullname="VisibilityTransformer.transform_block_filters" ids="lms.djangoapps.course_blocks.transformers.visibility.VisibilityTransformer.transform_block_filters" module="lms.djangoapps.course_blocks.transformers.visibility"><desc_name classes="sig-name descname" xml:space="preserve">transform_block_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>This is an alternative to the standard transform method.</paragraph>
                            <paragraph>Returns a list of filter functions to be used for filtering out
                                any unwanted blocks in the given block_structure.</paragraph>
                            <paragraph>In addition to the commonly used methods listed above, the following
                                methods are commonly used by implementations of transform_block_filters:</paragraph>
                            <block_quote>
                                <paragraph>create_universal_filter
                                    create_removal_filter</paragraph>
                            </block_quote>
                            <paragraph>Note: Transformers that implement this alternative should be
                                independent of all other registered transformers as they may not
                                be applied in the order in which they were listed in the registry.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="../openedx/openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_blocks.transformers module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_blocks.transformers',\ 'module-lms.djangoapps.course_blocks.transformers',\ '',\ None]"></index>
            <paragraph>Module container for all Course Block Access Transformers.</paragraph>
        </section>
    </section>
</document>
