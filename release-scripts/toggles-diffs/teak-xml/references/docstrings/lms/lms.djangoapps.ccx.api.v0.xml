<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.ccx.api.v0.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-ccx-api-v0-package" names="lms.djangoapps.ccx.api.v0\ package">
        <title>lms.djangoapps.ccx.api.v0 package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.ccx.api.v0.paginators lms-djangoapps-ccx-api-v0-paginators-module" names="lms.djangoapps.ccx.api.v0.paginators\ module">
            <title>lms.djangoapps.ccx.api.v0.paginators module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.api.v0.paginators',\ 'module-lms.djangoapps.ccx.api.v0.paginators',\ '',\ None]"></index>
            <paragraph>CCX API v0 Paginators.</paragraph>
            <index entries="['single',\ 'CCXAPIPagination\ (class\ in\ lms.djangoapps.ccx.api.v0.paginators)',\ 'lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXAPIPagination" _toc_parts="lms.djangoapps.ccx.api.v0.paginators CCXAPIPagination" class="" classes="sig sig-object py" fullname="CCXAPIPagination" ids="lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination" module="lms.djangoapps.ccx.api.v0.paginators"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.paginators.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXAPIPagination</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">DefaultPagination</literal></paragraph>
                    <paragraph>Pagination format used by the CCX API.</paragraph>
                    <index entries="['single',\ 'get_paginated_response()\ (lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination\ method)',\ 'lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination.get_paginated_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXAPIPagination.get_paginated_response()" _toc_parts="lms.djangoapps.ccx.api.v0.paginators CCXAPIPagination get_paginated_response" class="CCXAPIPagination" classes="sig sig-object py" fullname="CCXAPIPagination.get_paginated_response" ids="lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination.get_paginated_response" module="lms.djangoapps.ccx.api.v0.paginators"><desc_name classes="sig-name descname" xml:space="preserve">get_paginated_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Annotate the response with pagination information.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'page_size_query_param\ (lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination\ attribute)',\ 'lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination.page_size_query_param',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXAPIPagination.page_size_query_param" _toc_parts="lms.djangoapps.ccx.api.v0.paginators CCXAPIPagination page_size_query_param" class="CCXAPIPagination" classes="sig sig-object py" fullname="CCXAPIPagination.page_size_query_param" ids="lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination.page_size_query_param" module="lms.djangoapps.ccx.api.v0.paginators"><desc_name classes="sig-name descname" xml:space="preserve">page_size_query_param</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'page_size'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.api.v0.serializers lms-djangoapps-ccx-api-v0-serializers-module" names="lms.djangoapps.ccx.api.v0.serializers\ module">
            <title>lms.djangoapps.ccx.api.v0.serializers module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.api.v0.serializers',\ 'module-lms.djangoapps.ccx.api.v0.serializers',\ '',\ None]"></index>
            <paragraph>CCX API v0 Serializers.</paragraph>
            <index entries="['single',\ 'CCXCourseSerializer\ (class\ in\ lms.djangoapps.ccx.api.v0.serializers)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXCourseSerializer" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer" class="" classes="sig sig-object py" fullname="CCXCourseSerializer" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer" module="lms.djangoapps.ccx.api.v0.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXCourseSerializer</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ModelSerializer</literal></paragraph>
                    <paragraph>Serializer for CCX courses</paragraph>
                    <index entries="['single',\ 'CCXCourseSerializer.Meta\ (class\ in\ lms.djangoapps.ccx.api.v0.serializers)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="CCXCourseSerializer.Meta" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer Meta" class="CCXCourseSerializer" classes="sig sig-object py" fullname="CCXCourseSerializer.Meta" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta" module="lms.djangoapps.ccx.api.v0.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">Meta</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <index entries="['single',\ 'fields\ (lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta\ attribute)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="CCXCourseSerializer.Meta.fields" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer Meta fields" class="CCXCourseSerializer.Meta" classes="sig sig-object py" fullname="CCXCourseSerializer.Meta.fields" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.fields" module="lms.djangoapps.ccx.api.v0.serializers"><desc_name classes="sig-name descname" xml:space="preserve">fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>('ccx_course_id', 'master_course_id', 'display_name', 'coach_email', 'start', 'due', 'max_students_allowed', 'course_modules')</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'model\ (lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta\ attribute)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.model',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="CCXCourseSerializer.Meta.model" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer Meta model" class="CCXCourseSerializer.Meta" classes="sig sig-object py" fullname="CCXCourseSerializer.Meta.model" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.model" module="lms.djangoapps.ccx.api.v0.serializers"><desc_name classes="sig-name descname" xml:space="preserve">model</desc_name></desc_signature>
                                <desc_content>
                                    <paragraph>alias of <reference internal="True" reftitle="lms.djangoapps.ccx.models.CustomCourseForEdX" refuri="lms.djangoapps.ccx#lms.djangoapps.ccx.models.CustomCourseForEdX"><literal classes="xref py py-class">CustomCourseForEdX</literal></reference></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'read_only_fields\ (lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta\ attribute)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.read_only_fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="CCXCourseSerializer.Meta.read_only_fields" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer Meta read_only_fields" class="CCXCourseSerializer.Meta" classes="sig sig-object py" fullname="CCXCourseSerializer.Meta.read_only_fields" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.Meta.read_only_fields" module="lms.djangoapps.ccx.api.v0.serializers"><desc_name classes="sig-name descname" xml:space="preserve">read_only_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>('ccx_course_id', 'master_course_id', 'start', 'due')</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_ccx_course_id()\ (lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer\ static\ method)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.get_ccx_course_id',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXCourseSerializer.get_ccx_course_id()" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer get_ccx_course_id" class="CCXCourseSerializer" classes="sig sig-object py" fullname="CCXCourseSerializer.get_ccx_course_id" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.get_ccx_course_id" module="lms.djangoapps.ccx.api.v0.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_ccx_course_id</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Getter for the CCX Course ID</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_course_modules()\ (lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer\ static\ method)',\ 'lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.get_course_modules',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXCourseSerializer.get_course_modules()" _toc_parts="lms.djangoapps.ccx.api.v0.serializers CCXCourseSerializer get_course_modules" class="CCXCourseSerializer" classes="sig sig-object py" fullname="CCXCourseSerializer.get_course_modules" ids="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer.get_course_modules" module="lms.djangoapps.ccx.api.v0.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_course_modules</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Getter for the Course Blocks. The list is stored in a compressed field.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.api.v0.urls lms-djangoapps-ccx-api-v0-urls-module" names="lms.djangoapps.ccx.api.v0.urls\ module">
            <title>lms.djangoapps.ccx.api.v0.urls module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.api.v0.urls',\ 'module-lms.djangoapps.ccx.api.v0.urls',\ '',\ None]"></index>
            <paragraph>CCX API v0 URLs.</paragraph>
        </section>
        <section ids="module-lms.djangoapps.ccx.api.v0.views lms-djangoapps-ccx-api-v0-views-module" names="lms.djangoapps.ccx.api.v0.views\ module">
            <title>lms.djangoapps.ccx.api.v0.views module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.api.v0.views',\ 'module-lms.djangoapps.ccx.api.v0.views',\ '',\ None]"></index>
            <paragraph>API v0 views.</paragraph>
            <index entries="['single',\ 'CCXDetailView\ (class\ in\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXDetailView" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView" class="" classes="sig sig-object py" fullname="CCXDetailView" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView" module="lms.djangoapps.ccx.api.v0.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXDetailView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">GenericAPIView</literal></paragraph>
                    <paragraph><strong>Use Case</strong></paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>Get the details of CCX course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Modify a CCX course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Delete a CCX course.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Example Request</strong></paragraph>
                    <block_quote>
                        <paragraph>GET /api/ccx/v0/ccx/{ccx_course_id}</paragraph>
                        <paragraph>PATCH /api/ccx/v0/ccx/{ccx_course_id} {</paragraph>
                        <block_quote>
                            <paragraph>“display_name”: “CCX example title modified”,
                                “coach_email”: “<reference refuri="mailto:joe@example.com">joe@example.com</reference>”,
                                “max_students_allowed”: 111,
                                “course_modules” : [</paragraph>
                            <block_quote>
                                <paragraph>“block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week1”,
                                    “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week4”,
                                    “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week5”</paragraph>
                            </block_quote>
                            <paragraph>]</paragraph>
                        </block_quote>
                        <paragraph>}</paragraph>
                        <paragraph>DELETE /api/ccx/v0/ccx/{ccx_course_id}</paragraph>
                    </block_quote>
                    <paragraph><strong>GET and DELETE Parameters</strong></paragraph>
                    <block_quote>
                        <paragraph>A GET or DELETE request must include the following parameter.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>ccx_course_id: A string representation of a CCX Course ID.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>PATCH Parameters</strong></paragraph>
                    <block_quote>
                        <paragraph>A PATCH request can include the following parameters</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>ccx_course_id: A string representation of a CCX Course ID.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>display_name: Optional. A string representing the CCX Course title.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>coach_email: Optional. A string representing the CCX owner email.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>max_students_allowed: Optional. An integer representing he maximum number of students that
                                    can be enrolled in the CCX Course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>course_modules: Optional. A list of course modules id keys.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>GET Response Values</strong></paragraph>
                    <block_quote>
                        <paragraph>If the request for information about the CCX course is successful, an HTTP 200 “OK” response
                            is returned.</paragraph>
                        <paragraph>The HTTP 200 response has the following values.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>ccx_course_id: A string representation of a CCX Course ID.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>display_name: A string representing the CCX Course title.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>coach_email: A string representing the CCX owner email.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>start: A string representing the start date for the CCX Course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>due: A string representing the due date for the CCX Course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>max_students_allowed: An integer representing he maximum number of students that
                                    can be enrolled in the CCX Course.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>course_modules: A list of course modules id keys.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>PATCH and DELETE Response Values</strong></paragraph>
                    <block_quote>
                        <paragraph>If the request for modification or deletion of a CCX course is successful, an HTTP 204 “No Content”
                            response is returned.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXDetailView.authentication_classes" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView authentication_classes" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.authentication_classes" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.authentication_classes" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete()\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXDetailView.delete()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView delete" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.delete" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.delete" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deletes a CCX course.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>Request</literal_emphasis>) – Django request object.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>ccx_course_id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – URI element specifying the CCX course location.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXDetailView.get()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView get" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.get" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.get" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Gets a CCX Course information.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>Request</literal_emphasis>) – Django request object.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>ccx_course_id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – URI element specifying the CCX course location.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>A JSON serialized representation of the CCX course.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_object()\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.get_object',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXDetailView.get_object()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView get_object" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.get_object" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.get_object" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">get_object</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override the default get_object to allow a custom getter for the CCX</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'patch()\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.patch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXDetailView.patch()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView patch" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.patch" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.patch" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">patch</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ccx_course_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Modifies a CCX course.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>Request</literal_emphasis>) – Django request object.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>ccx_course_id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – URI element specifying the CCX course location.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXDetailView.permission_classes" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView permission_classes" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.permission_classes" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.permission_classes" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'openedx.core.lib.api.permissions.IsCourseStaffInstructor'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (lms.djangoapps.ccx.api.v0.views.CCXDetailView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXDetailView.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXDetailView.serializer_class" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXDetailView serializer_class" class="CCXDetailView" classes="sig sig-object py" fullname="CCXDetailView.serializer_class" ids="lms.djangoapps.ccx.api.v0.views.CCXDetailView.serializer_class" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer" reftitle="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer"><literal classes="xref py py-class">CCXCourseSerializer</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CCXListView\ (class\ in\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXListView" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView" class="" classes="sig sig-object py" fullname="CCXListView" ids="lms.djangoapps.ccx.api.v0.views.CCXListView" module="lms.djangoapps.ccx.api.v0.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXListView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">GenericAPIView</literal></paragraph>
                    <block_quote>
                        <paragraph><strong>Use Case</strong></paragraph>
                        <block_quote>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>Get the list of CCX courses for a given master course.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Creates a new CCX course for a given master course.</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                        <paragraph><strong>Example Request</strong></paragraph>
                        <block_quote>
                            <paragraph>GET /api/ccx/v0/ccx/?master_course_id={master_course_id}</paragraph>
                            <paragraph>POST /api/ccx/v0/ccx {</paragraph>
                            <block_quote>
                                <paragraph>“master_course_id”: “course-v1:Organization+EX101+RUN-FALL2099”,
                                    “display_name”: “CCX example title”,
                                    “coach_email”: “john@example.com”,
                                    “max_students_allowed”: 123,
                                    “course_modules” : [</paragraph>
                                <block_quote>
                                    <paragraph>“block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week1”,
                                        “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week4”,
                                        “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week5”</paragraph>
                                </block_quote>
                                <paragraph>]</paragraph>
                            </block_quote>
                            <paragraph>}</paragraph>
                        </block_quote>
                        <paragraph><strong>GET Parameters</strong></paragraph>
                        <block_quote>
                            <paragraph>A GET request can include the following parameters.</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>master_course_id: A string representation of a Master Course ID. Note that this must be properly
                                        encoded by the client.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>page: Optional. An integer representing the pagination instance number.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>order_by: Optional. A string representing the field by which sort the results.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>sort_order: Optional. A string (either “asc” or “desc”) indicating the desired order.</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                        <paragraph><strong>POST Parameters</strong></paragraph>
                        <block_quote>
                            <paragraph>A POST request can include the following parameters.</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>master_course_id: A string representation of a Master Course ID.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>display_name: A string representing the CCX Course title.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>coach_email: A string representing the CCX owner email.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>max_students_allowed: An integer representing he maximum number of students that
                                        can be enrolled in the CCX Course.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>course_modules: Optional. A list of course modules id keys.</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                        <paragraph><strong>GET Response Values</strong></paragraph>
                        <block_quote>
                            <paragraph>If the request for information about the course is successful, an HTTP 200 “OK” response
                                is returned with a collection of CCX courses for the specified master course.</paragraph>
                            <paragraph>The HTTP 200 response has the following values.</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>results: a collection of CCX courses. Each CCX course contains the following values:</paragraph>
                                    <block_quote>
                                        <bullet_list bullet="*">
                                            <list_item>
                                                <paragraph>ccx_course_id: A string representation of a CCX Course ID.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>display_name: A string representing the CCX Course title.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>coach_email: A string representing the CCX owner email.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>start: A string representing the start date for the CCX Course.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>due: A string representing the due date for the CCX Course.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>max_students_allowed: An integer representing he maximum number of students that
                                                    can be enrolled in the CCX Course.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>course_modules: A list of course modules id keys.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </block_quote>
                                </list_item>
                                <list_item>
                                    <paragraph>count: An integer representing the total number of records that matched the request parameters.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>next: A string representing the URL where to retrieve the next page of results. This can be <title_reference>null</title_reference>
                                        in case the response contains the complete list of results.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>previous: A string representing the URL where to retrieve the previous page of results. This can be
                                        <title_reference>null</title_reference> in case the response contains the first page of results.</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                        <paragraph><strong>Example GET Response</strong></paragraph>
                        <block_quote>
                            <definition_list>
                                <definition_list_item>
                                    <term>{</term>
                                    <definition>
                                        <paragraph>“count”: 99,
                                            “next”: “<reference refuri="https://openedx-ccx-api-instance.org/api/ccx/v0/ccx/">https://openedx-ccx-api-instance.org/api/ccx/v0/ccx/</reference>?course_id=&lt;course_id&gt;&amp;page=2”,
                                            “previous”: null,
                                            “results”: {</paragraph>
                                        <block_quote>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>{</term>
                                                    <definition>
                                                        <paragraph>“ccx_course_id”: “ccx-v1:Organization+EX101+RUN-FALL2099+ccx@1”,
                                                            “display_name”: “CCX example title”,
                                                            “coach_email”: “john@example.com”,
                                                            “start”: “2019-01-01”,
                                                            “due”: “2019-06-01”,
                                                            “max_students_allowed”: 123,
                                                            “course_modules” : [</paragraph>
                                                        <block_quote>
                                                            <paragraph>“block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week1”,
                                                                “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week4”,
                                                                “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week5”</paragraph>
                                                        </block_quote>
                                                        <paragraph>]</paragraph>
                                                    </definition>
                                                </definition_list_item>
                                            </definition_list>
                                            <paragraph>},
                                                { … }</paragraph>
                                        </block_quote>
                                        <paragraph>}</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                            <paragraph>}</paragraph>
                        </block_quote>
                        <paragraph><strong>POST Response Values</strong></paragraph>
                        <block_quote>
                            <paragraph>If the request for the creation of a CCX Course is successful, an HTTP 201 “Created” response
                                is returned with the newly created CCX details.</paragraph>
                            <paragraph>The HTTP 201 response has the following values.</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>ccx_course_id: A string representation of a CCX Course ID.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>display_name: A string representing the CCX Course title.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>coach_email: A string representing the CCX owner email.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>start: A string representing the start date for the CCX Course.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>due: A string representing the due date for the CCX Course.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>max_students_allowed: An integer representing he maximum number of students that
                                        can be enrolled in the CCX Course.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>course_modules: A list of course modules id keys.</paragraph>
                                </list_item>
                            </bullet_list>
                        </block_quote>
                        <paragraph><strong>Example POST Response</strong></paragraph>
                        <block_quote>
                            <definition_list>
                                <definition_list_item>
                                    <term>{</term>
                                    <definition>
                                        <paragraph>“ccx_course_id”: “ccx-v1:Organization+EX101+RUN-FALL2099+ccx@1”,
                                            “display_name”: “CCX example title”,
                                            “coach_email”: “john@example.com”,
                                            “start”: “2019-01-01”,
                                            “due”: “2019-06-01”,
                                            “max_students_allowed”: 123,
                                            “course_modules” : [</paragraph>
                                        <block_quote>
                                            <paragraph>“block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week1”,
                                                “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week4”,
                                                “block-v1:Organization+EX101+RUN-FALL2099+type@chapter+block@week5”</paragraph>
                                        </block_quote>
                                        <paragraph>]</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </block_quote>
                    </block_quote>
                    <paragraph>}</paragraph>
                    <index entries="['single',\ 'authentication_classes\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXListView.authentication_classes" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView authentication_classes" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.authentication_classes" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.authentication_classes" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXListView.get()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView get" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.get" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.get" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Gets a list of CCX Courses for a given Master Course.</paragraph>
                            <paragraph>Additional parameters are allowed for pagination purposes.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>Request</literal_emphasis>) – Django request object.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>A JSON serialized representation of a list of CCX courses.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'pagination_class\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.pagination_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXListView.pagination_class" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView pagination_class" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.pagination_class" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.pagination_class" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">pagination_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination" reftitle="lms.djangoapps.ccx.api.v0.paginators.CCXAPIPagination"><literal classes="xref py py-class">CCXAPIPagination</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXListView.permission_classes" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView permission_classes" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.permission_classes" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.permission_classes" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'openedx.core.lib.api.permissions.IsMasterCourseStaffInstructor'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ method)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXListView.post()" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView post" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.post" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.post" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Creates a new CCX course for a given Master Course.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>Request</literal_emphasis>) – Django request object.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>A JSON serialized representation a newly created CCX course.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'serializer_class\ (lms.djangoapps.ccx.api.v0.views.CCXListView\ attribute)',\ 'lms.djangoapps.ccx.api.v0.views.CCXListView.serializer_class',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXListView.serializer_class" _toc_parts="lms.djangoapps.ccx.api.v0.views CCXListView serializer_class" class="CCXListView" classes="sig sig-object py" fullname="CCXListView.serializer_class" ids="lms.djangoapps.ccx.api.v0.views.CCXListView.serializer_class" module="lms.djangoapps.ccx.api.v0.views"><desc_name classes="sig-name descname" xml:space="preserve">serializer_class</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <reference internal="True" refid="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer" reftitle="lms.djangoapps.ccx.api.v0.serializers.CCXCourseSerializer"><literal classes="xref py py-class">CCXCourseSerializer</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TODAY()\ (in\ module\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.TODAY',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="TODAY()" _toc_parts="lms.djangoapps.ccx.api.v0.views TODAY" class="" classes="sig sig-object py" fullname="TODAY" ids="lms.djangoapps.ccx.api.v0.views.TODAY" module="lms.djangoapps.ccx.api.v0.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TODAY</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Current date or datetime:  same as self.__class__.fromtimestamp(time.time()).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_valid_course()\ (in\ module\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.get_valid_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_valid_course()" _toc_parts="lms.djangoapps.ccx.api.v0.views get_valid_course" class="" classes="sig sig-object py" fullname="get_valid_course" ids="lms.djangoapps.ccx.api.v0.views.get_valid_course" module="lms.djangoapps.ccx.api.v0.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_valid_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_ccx</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">advanced_course_check</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function used to validate and get a course from a course_id string.
                        It works with both master and ccx course id.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_id</literal_strong> (<literal_emphasis>str</literal_emphasis>) – A string representation of a Master or CCX Course ID.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>is_ccx</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Flag to perform the right validation</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>advanced_course_check</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Flag to perform extra validations for the master course</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>a tuple of course_object, course_key, error_code, http_status_code</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>tuple</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_valid_input()\ (in\ module\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.get_valid_input',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_valid_input()" _toc_parts="lms.djangoapps.ccx.api.v0.views get_valid_input" class="" classes="sig sig-object py" fullname="get_valid_input" ids="lms.djangoapps.ccx.api.v0.views.get_valid_input" module="lms.djangoapps.ccx.api.v0.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_valid_input</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request_data</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ignore_missing</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function to validate the data sent as input and to
                        build field based errors.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request_data</literal_strong> (<literal_emphasis>OrderedDict</literal_emphasis>) – the request data object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ignore_missing</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – whether or not to ignore fields
                                            missing from the input data</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>a tuple of two dictionaries for valid input and field errors</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>tuple</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'make_user_coach()\ (in\ module\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.make_user_coach',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="make_user_coach()" _toc_parts="lms.djangoapps.ccx.api.v0.views make_user_coach" class="" classes="sig sig-object py" fullname="make_user_coach" ids="lms.djangoapps.ccx.api.v0.views.make_user_coach" module="lms.djangoapps.ccx.api.v0.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">make_user_coach</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">master_course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Makes an user coach on the master course.
                        This function is needed because an user cannot become a coach of the CCX if s/he is not
                        coach on the master course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – User object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>master_course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – Key locator object for the course</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'valid_course_modules()\ (in\ module\ lms.djangoapps.ccx.api.v0.views)',\ 'lms.djangoapps.ccx.api.v0.views.valid_course_modules',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="valid_course_modules()" _toc_parts="lms.djangoapps.ccx.api.v0.views valid_course_modules" class="" classes="sig sig-object py" fullname="valid_course_modules" ids="lms.djangoapps.ccx.api.v0.views.valid_course_modules" module="lms.djangoapps.ccx.api.v0.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.ccx.api.v0.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">valid_course_modules</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_module_list</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">master_course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function to validate that each element in the course_module_list belongs
                        to the master course structure.
                        :param course_module_list: A list of strings representing Block Usage Keys
                        :type course_module_list: list
                        :param master_course_key: An object representing the master course key id
                        :type master_course_key: CourseKey</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>whether or not all the course module strings belong to the master course</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.ccx.api.v0 module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.ccx.api.v0',\ 'module-lms.djangoapps.ccx.api.v0',\ '',\ None]"></index>
        </section>
    </section>
</document>
