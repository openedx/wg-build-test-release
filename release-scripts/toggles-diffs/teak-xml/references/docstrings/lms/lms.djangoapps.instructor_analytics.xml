<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.instructor_analytics.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-instructor-analytics-package" names="lms.djangoapps.instructor_analytics\ package">
        <title>lms.djangoapps.instructor_analytics package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_analytics.management">lms.djangoapps.instructor_analytics.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="lms.djangoapps.instructor_analytics.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="lms.djangoapps.instructor_analytics.management.commands">lms.djangoapps.instructor_analytics.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-lms.djangoapps.instructor_analytics.management.commands" internal="True" refuri="lms.djangoapps.instructor_analytics.management.commands#module-lms.djangoapps.instructor_analytics.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.instructor_analytics.management" internal="True" refuri="lms.djangoapps.instructor_analytics.management#module-lms.djangoapps.instructor_analytics.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.instructor_analytics.basic lms-djangoapps-instructor-analytics-basic-module" names="lms.djangoapps.instructor_analytics.basic\ module">
            <title>lms.djangoapps.instructor_analytics.basic module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_analytics.basic',\ 'module-lms.djangoapps.instructor_analytics.basic',\ '',\ None]"></index>
            <paragraph>Student and course analytics.</paragraph>
            <paragraph>Serve miscellaneous course and student data</paragraph>
            <index entries="['single',\ 'coupon_codes_features()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.coupon_codes_features',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="coupon_codes_features()" _toc_parts="lms.djangoapps.instructor_analytics.basic coupon_codes_features" class="" classes="sig sig-object py" fullname="coupon_codes_features" ids="lms.djangoapps.instructor_analytics.basic.coupon_codes_features" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">coupon_codes_features</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">coupons_list</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return list of Coupon Codes as dictionaries.</paragraph>
                    <paragraph>coupon_codes_features
                        would return [</paragraph>
                    <block_quote>
                        <paragraph>{‘course_id’: ‘edX/Open_DemoX/edx_demo_course,, ‘discount’: ‘213’  ….. }
                            {‘course_id’: ‘edX/Open_DemoX/edx_demo_course,, ‘discount’: ‘234’  ….. }</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_registration_features()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.course_registration_features',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_registration_features()" _toc_parts="lms.djangoapps.instructor_analytics.basic course_registration_features" class="" classes="sig sig-object py" fullname="course_registration_features" ids="lms.djangoapps.instructor_analytics.basic.course_registration_features" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_registration_features</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">registration_codes</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">csv_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return list of Course Registration Codes as dictionaries.</paragraph>
                    <paragraph>course_registration_features
                        would return [</paragraph>
                    <block_quote>
                        <paragraph>{‘code’: ‘code1’, ‘course_id’: ‘edX/Open_DemoX/edx_demo_course, ….. }
                            {‘code’: ‘code2’, ‘course_id’: ‘edX/Open_DemoX/edx_demo_course, ….. }</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'dump_grading_context()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.dump_grading_context',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="dump_grading_context()" _toc_parts="lms.djangoapps.instructor_analytics.basic dump_grading_context" class="" classes="sig sig-object py" fullname="dump_grading_context" ids="lms.djangoapps.instructor_analytics.basic.dump_grading_context" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">dump_grading_context</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Render information about course grading context
                        (e.g. which problems are graded in what assignments)
                        Useful for debugging grading_policy.json and policy.json</paragraph>
                    <paragraph>Returns HTML string</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'enrolled_students_features()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.enrolled_students_features',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="enrolled_students_features()" _toc_parts="lms.djangoapps.instructor_analytics.basic enrolled_students_features" class="" classes="sig sig-object py" fullname="enrolled_students_features" ids="lms.djangoapps.instructor_analytics.basic.enrolled_students_features" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">enrolled_students_features</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return list of student features as dictionaries.</paragraph>
                    <paragraph>enrolled_students_features(course_key, [‘username’, ‘first_name’])
                        would return [</paragraph>
                    <block_quote>
                        <paragraph>{‘username’: ‘username1’, ‘first_name’: ‘firstname1’}
                            {‘username’: ‘username2’, ‘first_name’: ‘firstname2’}
                            {‘username’: ‘username3’, ‘first_name’: ‘firstname3’}</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_enrollments_for_course()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.get_enrollments_for_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_enrollments_for_course()" _toc_parts="lms.djangoapps.instructor_analytics.basic get_enrollments_for_course" class="" classes="sig sig-object py" fullname="get_enrollments_for_course" ids="lms.djangoapps.instructor_analytics.basic.get_enrollments_for_course" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_enrollments_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exam_attempts</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns all enrollments from a list of attempts. user_id is passed from proctoring.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_proctored_exam_results()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.get_proctored_exam_results',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_proctored_exam_results()" _toc_parts="lms.djangoapps.instructor_analytics.basic get_proctored_exam_results" class="" classes="sig sig-object py" fullname="get_proctored_exam_results" ids="lms.djangoapps.instructor_analytics.basic.get_proctored_exam_results" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_proctored_exam_results</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return info about proctored exam results in a course as a dict.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_response_state()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.get_response_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_response_state()" _toc_parts="lms.djangoapps.instructor_analytics.basic get_response_state" class="" classes="sig sig-object py" fullname="get_response_state" ids="lms.djangoapps.instructor_analytics.basic.get_response_state" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_response_state</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns state of a particular response as string.</paragraph>
                    <paragraph>This method also does necessary encoding for displaying unicode data correctly.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'issued_certificates()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.issued_certificates',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="issued_certificates()" _toc_parts="lms.djangoapps.instructor_analytics.basic issued_certificates" class="" classes="sig sig-object py" fullname="issued_certificates" ids="lms.djangoapps.instructor_analytics.basic.issued_certificates" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">issued_certificates</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return list of issued certificates as dictionaries against the given course key.</paragraph>
                    <paragraph>issued_certificates(course_key, features)
                        would return [</paragraph>
                    <block_quote>
                        <paragraph>{course_id: ‘abc’, ‘total_issued_certificate’: ‘5’, ‘mode’: ‘honor’}
                            {course_id: ‘abc’, ‘total_issued_certificate’: ‘10’, ‘mode’: ‘verified’}
                            {course_id: ‘abc’, ‘total_issued_certificate’: ‘15’, ‘mode’: ‘Professional Education’}</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'list_may_enroll()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.list_may_enroll',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="list_may_enroll()" _toc_parts="lms.djangoapps.instructor_analytics.basic list_may_enroll" class="" classes="sig sig-object py" fullname="list_may_enroll" ids="lms.djangoapps.instructor_analytics.basic.list_may_enroll" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">list_may_enroll</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return info about students who may enroll in a course as a dict.</paragraph>
                    <paragraph>list_may_enroll(course_key, [‘email’])
                        would return [</paragraph>
                    <block_quote>
                        <paragraph>{‘email’: ‘email1’}
                            {‘email’: ‘email2’}
                            {‘email’: ‘email3’}</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                    <paragraph>Note that result does not include students who may enroll and have
                        already done so.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'list_problem_responses()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.list_problem_responses',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="list_problem_responses()" _toc_parts="lms.djangoapps.instructor_analytics.basic list_problem_responses" class="" classes="sig sig-object py" fullname="list_problem_responses" ids="lms.djangoapps.instructor_analytics.basic.list_problem_responses" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">list_problem_responses</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">problem_location</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">limit_responses</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return responses to a given problem as a dict.</paragraph>
                    <paragraph>list_problem_responses(course_key, problem_location)</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>would return [</term>
                            <definition>
                                <paragraph>{‘username’: u’user1’, ‘state’: u’…’},
                                    {‘username’: u’user2’, ‘state’: u’…’},
                                    {‘username’: u’user3’, ‘state’: u’…’},</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph>]</paragraph>
                    <paragraph>where <title_reference>state</title_reference> represents a student’s response to the problem
                        identified by <title_reference>problem_location</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'transform_capa_state()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.transform_capa_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="transform_capa_state()" _toc_parts="lms.djangoapps.instructor_analytics.basic transform_capa_state" class="" classes="sig sig-object py" fullname="transform_capa_state" ids="lms.djangoapps.instructor_analytics.basic.transform_capa_state" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">transform_capa_state</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">state</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Transforms the CAPA problem state.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'transform_ora_state()\ (in\ module\ lms.djangoapps.instructor_analytics.basic)',\ 'lms.djangoapps.instructor_analytics.basic.transform_ora_state',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="transform_ora_state()" _toc_parts="lms.djangoapps.instructor_analytics.basic transform_ora_state" class="" classes="sig sig-object py" fullname="transform_ora_state" ids="lms.djangoapps.instructor_analytics.basic.transform_ora_state" module="lms.djangoapps.instructor_analytics.basic"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.basic.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">transform_ora_state</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">state</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>ORA problem state transformer transforms the problem states.</paragraph>
                    <paragraph>Some state variables values are json dumped strings which needs to be loaded
                        into a python object.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_analytics.csvs lms-djangoapps-instructor-analytics-csvs-module" names="lms.djangoapps.instructor_analytics.csvs\ module">
            <title>lms.djangoapps.instructor_analytics.csvs module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_analytics.csvs',\ 'module-lms.djangoapps.instructor_analytics.csvs',\ '',\ None]"></index>
            <paragraph>Student and course analytics.</paragraph>
            <paragraph>Format and create csv responses</paragraph>
            <index entries="['single',\ 'create_csv_response()\ (in\ module\ lms.djangoapps.instructor_analytics.csvs)',\ 'lms.djangoapps.instructor_analytics.csvs.create_csv_response',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_csv_response()" _toc_parts="lms.djangoapps.instructor_analytics.csvs create_csv_response" class="" classes="sig sig-object py" fullname="create_csv_response" ids="lms.djangoapps.instructor_analytics.csvs.create_csv_response" module="lms.djangoapps.instructor_analytics.csvs"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.csvs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_csv_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filename</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">header</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">datarows</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create an HttpResponse with an attached .csv file</paragraph>
                    <paragraph>header   e.g. [‘Name’, ‘Email’]
                        datarows e.g. [[‘Jim’, <reference refuri="mailto:'jim@edy.org">‘jim@edy.org</reference>’], [‘Jake’, <reference refuri="mailto:'jake@edy.org">‘jake@edy.org</reference>’], …]</paragraph>
                    <paragraph>The data in <title_reference>header</title_reference> and <title_reference>datarows</title_reference> must be either Unicode strings,
                        or ASCII-only bytestrings.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'format_dictlist()\ (in\ module\ lms.djangoapps.instructor_analytics.csvs)',\ 'lms.djangoapps.instructor_analytics.csvs.format_dictlist',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="format_dictlist()" _toc_parts="lms.djangoapps.instructor_analytics.csvs format_dictlist" class="" classes="sig sig-object py" fullname="format_dictlist" ids="lms.djangoapps.instructor_analytics.csvs.format_dictlist" module="lms.djangoapps.instructor_analytics.csvs"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.csvs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">format_dictlist</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dictlist</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Convert a list of dictionaries to be compatible with create_csv_response</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>dictlist</title_reference> is a list of dictionaries</term>
                            <definition>
                                <paragraph>all dictionaries should have keys from features</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph><title_reference>features</title_reference> is a list of features</paragraph>
                    <paragraph>example code:
                        dictlist = [</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>{</term>
                                <definition>
                                    <paragraph>‘label1’: ‘value-1,1’,
                                        ‘label2’: ‘value-1,2’,
                                        ‘label3’: ‘value-1,3’,
                                        ‘label4’: ‘value-1,4’,</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>},
                            {</paragraph>
                        <block_quote>
                            <paragraph>‘label1’: ‘value-2,1’,
                                ‘label2’: ‘value-2,2’,
                                ‘label3’: ‘value-2,3’,
                                ‘label4’: ‘value-2,4’,</paragraph>
                        </block_quote>
                        <paragraph>}</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                    <paragraph>header, datarows = format_dictlist(dictlist, [‘label1’, ‘label4’])</paragraph>
                    <paragraph># results in
                        header = [‘label1’, ‘label4’]
                        datarows = [[‘value-1,1’, ‘value-1,4’],</paragraph>
                    <block_quote>
                        <paragraph>[‘value-2,1’, ‘value-2,4’]]</paragraph>
                    </block_quote>
                    <paragraph>}</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'format_instances()\ (in\ module\ lms.djangoapps.instructor_analytics.csvs)',\ 'lms.djangoapps.instructor_analytics.csvs.format_instances',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="format_instances()" _toc_parts="lms.djangoapps.instructor_analytics.csvs format_instances" class="" classes="sig sig-object py" fullname="format_instances" ids="lms.djangoapps.instructor_analytics.csvs.format_instances" module="lms.djangoapps.instructor_analytics.csvs"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.csvs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">format_instances</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instances</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">features</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Convert a list of instances into a header list and datarows list.</paragraph>
                    <paragraph><title_reference>header</title_reference> is just <title_reference>features</title_reference> e.g. [‘username’, ‘email’]
                        <title_reference>datarows</title_reference> is a list of lists, each sublist representing a row in a table</paragraph>
                    <block_quote>
                        <paragraph>e.g. [[‘username1’, <reference refuri="mailto:'email1@email.com">‘email1@email.com</reference>’], [‘username2’, <reference refuri="mailto:'email2@email.com">‘email2@email.com</reference>’]]
                            for <title_reference>instances</title_reference> of length 2.</paragraph>
                    </block_quote>
                    <paragraph><title_reference>instances</title_reference> is a list of instances, e.g. list of User’s
                        <title_reference>features</title_reference> is a list of features</paragraph>
                    <block_quote>
                        <paragraph>a feature is a string for which getattr(obj, feature) is valid</paragraph>
                    </block_quote>
                    <paragraph>Returns header and datarows, formatted for input in create_csv_response</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_analytics.distributions lms-djangoapps-instructor-analytics-distributions-module" names="lms.djangoapps.instructor_analytics.distributions\ module">
            <title>lms.djangoapps.instructor_analytics.distributions module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_analytics.distributions',\ 'module-lms.djangoapps.instructor_analytics.distributions',\ '',\ None]"></index>
            <paragraph>Profile Distributions</paragraph>
            <paragraph>Aggregate sums for values of fields in students profiles.</paragraph>
            <paragraph>For example:
                The distribution in a course for gender might look like:
                ‘gender’: {</paragraph>
            <block_quote>
                <paragraph>‘type’: ‘EASY_CHOICE’,
                    ‘data’: {</paragraph>
                <block_quote>
                    <paragraph>‘no_data’: 1234,
                        ‘m’: 5678,
                        ‘o’: 2134,
                        ‘f’: 5678</paragraph>
                </block_quote>
                <paragraph>},
                    ‘display_names’: {</paragraph>
                <block_quote>
                    <paragraph>‘no_data’: ‘No Data’,
                        ‘m’: ‘Male’,
                        ‘o’: ‘Other’,
                        ‘f’: ‘Female’</paragraph>
                </block_quote>
            </block_quote>
            <paragraph>}</paragraph>
            <index entries="['single',\ 'ProfileDistribution\ (class\ in\ lms.djangoapps.instructor_analytics.distributions)',\ 'lms.djangoapps.instructor_analytics.distributions.ProfileDistribution',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ProfileDistribution" _toc_parts="lms.djangoapps.instructor_analytics.distributions ProfileDistribution" class="" classes="sig sig-object py" fullname="ProfileDistribution" ids="lms.djangoapps.instructor_analytics.distributions.ProfileDistribution" module="lms.djangoapps.instructor_analytics.distributions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.distributions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ProfileDistribution</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">feature</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Container for profile distribution data</paragraph>
                    <paragraph><title_reference>feature</title_reference> is the name of the distribution feature
                        <title_reference>feature_display_name</title_reference> is the display name of feature
                        <title_reference>data</title_reference> is a dictionary of the distribution
                        <title_reference>type</title_reference> is either ‘EASY_CHOICE’ or ‘OPEN_CHOICE’
                        <title_reference>choices_display_names</title_reference> is a dict if the distribution is an ‘EASY_CHOICE’</paragraph>
                    <index entries="['single',\ 'ProfileDistribution.ValidationError',\ 'lms.djangoapps.instructor_analytics.distributions.ProfileDistribution.ValidationError',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ProfileDistribution.ValidationError" _toc_parts="lms.djangoapps.instructor_analytics.distributions ProfileDistribution ValidationError" class="ProfileDistribution" classes="sig sig-object py" fullname="ProfileDistribution.ValidationError" ids="lms.djangoapps.instructor_analytics.distributions.ProfileDistribution.ValidationError" module="lms.djangoapps.instructor_analytics.distributions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">ValidationError</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">ValueError</literal></paragraph>
                            <paragraph>Error thrown if validation fails.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'validate()\ (lms.djangoapps.instructor_analytics.distributions.ProfileDistribution\ method)',\ 'lms.djangoapps.instructor_analytics.distributions.ProfileDistribution.validate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ProfileDistribution.validate()" _toc_parts="lms.djangoapps.instructor_analytics.distributions ProfileDistribution validate" class="ProfileDistribution" classes="sig sig-object py" fullname="ProfileDistribution.validate" ids="lms.djangoapps.instructor_analytics.distributions.ProfileDistribution.validate" module="lms.djangoapps.instructor_analytics.distributions"><desc_name classes="sig-name descname" xml:space="preserve">validate</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validate this profile distribution.</paragraph>
                            <paragraph>Throws ProfileDistribution.ValidationError</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'profile_distribution()\ (in\ module\ lms.djangoapps.instructor_analytics.distributions)',\ 'lms.djangoapps.instructor_analytics.distributions.profile_distribution',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="profile_distribution()" _toc_parts="lms.djangoapps.instructor_analytics.distributions profile_distribution" class="" classes="sig sig-object py" fullname="profile_distribution" ids="lms.djangoapps.instructor_analytics.distributions.profile_distribution" module="lms.djangoapps.instructor_analytics.distributions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.instructor_analytics.distributions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">profile_distribution</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">feature</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve distribution of students over a given feature.
                        feature is one of AVAILABLE_PROFILE_FEATURES.</paragraph>
                    <paragraph>Returns a ProfileDistribution instance.</paragraph>
                    <paragraph>NOTE: no_data will appear as a key instead of None/null to adhere to the json spec.
                        data types are EASY_CHOICE or OPEN_CHOICE</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.instructor_analytics module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.instructor_analytics',\ 'module-lms.djangoapps.instructor_analytics',\ '',\ None]"></index>
        </section>
    </section>
</document>
