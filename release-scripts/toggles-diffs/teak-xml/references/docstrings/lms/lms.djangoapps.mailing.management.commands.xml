<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.mailing.management.commands.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-mailing-management-commands-package" names="lms.djangoapps.mailing.management.commands\ package">
        <title>lms.djangoapps.mailing.management.commands package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.mailing.management.commands.mailchimp_id lms-djangoapps-mailing-management-commands-mailchimp-id-module" names="lms.djangoapps.mailing.management.commands.mailchimp_id\ module">
            <title>lms.djangoapps.mailing.management.commands.mailchimp_id module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.mailing.management.commands.mailchimp_id',\ 'module-lms.djangoapps.mailing.management.commands.mailchimp_id',\ '',\ None]"></index>
            <paragraph>mailchimp_id: Returns whether or not a given mailchimp key represents
                a valid list.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.mailing.management.commands.mailchimp_id)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_id.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_id Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.mailing.management.commands.mailchimp_id.Command" module="lms.djangoapps.mailing.management.commands.mailchimp_id"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_id.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Given a mailchimp key, validates that a list with that key
                        exists in mailchimp.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.mailing.management.commands.mailchimp_id.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_id.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_id Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.mailing.management.commands.mailchimp_id.Command.add_arguments" module="lms.djangoapps.mailing.management.commands.mailchimp_id"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.mailing.management.commands.mailchimp_id.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_id.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_id Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.mailing.management.commands.mailchimp_id.Command.handle" module="lms.djangoapps.mailing.management.commands.mailchimp_id"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates that the id passed in exists in mailchimp.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.mailing.management.commands.mailchimp_id.Command\ attribute)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_id.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_id Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.mailing.management.commands.mailchimp_id.Command.help" module="lms.djangoapps.mailing.management.commands.mailchimp_id"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Get the list id from a web_id'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements lms-djangoapps-mailing-management-commands-mailchimp-sync-announcements-module" names="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements\ module">
            <title>lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements',\ 'module-lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements',\ '',\ None]"></index>
            <paragraph>Synchronizes the announcement list with all active students.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Synchronizes the announcement list with all active students.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.add_arguments" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.handle" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command\ attribute)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.Command.help" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Synchronizes the announcement list with all active students.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_data()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.get_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_data()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements get_data" class="" classes="sig sig-object py" fullname="get_data" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.get_data" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">users</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exclude</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>users: set of Django users
                        exclude [optional]: set of Django users to exclude</paragraph>
                    <paragraph>returns: {‘EMAIL’: u.email} for all users in users less those in <title_reference>exclude</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_enrolled()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.get_enrolled',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_enrolled()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements get_enrolled" class="" classes="sig sig-object py" fullname="get_enrolled" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.get_enrolled" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_announcements.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_enrolled</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Filter out all users who signed up via a Microsite, which UserSignupSource tracks</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.mailing.management.commands.mailchimp_sync_course lms-djangoapps-mailing-management-commands-mailchimp-sync-course-module" names="lms.djangoapps.mailing.management.commands.mailchimp_sync_course\ module">
            <title>lms.djangoapps.mailing.management.commands.mailchimp_sync_course module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course',\ 'module-lms.djangoapps.mailing.management.commands.mailchimp_sync_course',\ '',\ None]"></index>
            <paragraph>Synchronizes a mailchimp list with the students of a course.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Synchronizes a mailchimp list with the students of a course.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.add_arguments" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command\ method)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.handle" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Synchronizes a mailchimp list with the students of a course.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command\ attribute)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.Command.help" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Synchronizes a mailchimp list with the students of a course.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'chunk()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.chunk',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="chunk()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course chunk" class="" classes="sig sig-object py" fullname="chunk" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.chunk" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">chunk</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">elist</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">size</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generator. Yields a list of size <title_reference>size</title_reference> of the given list <title_reference>elist</title_reference>,
                        or a shorter list if at the end of the input.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'connect_mailchimp()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.connect_mailchimp',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="connect_mailchimp()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course connect_mailchimp" class="" classes="sig sig-object py" fullname="connect_mailchimp" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.connect_mailchimp" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">connect_mailchimp</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">api_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Initializes connection to the mailchimp api</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cleaned()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_cleaned',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cleaned()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_cleaned" class="" classes="sig sig-object py" fullname="get_cleaned" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_cleaned" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cleaned</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a set of email addresses that have been cleaned from <title_reference>list_id</title_reference></paragraph>
                    <paragraph>These email addresses may be invalid or have caused bounces, so you don’t want
                        to re-add them back to the list.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_enrolled_students()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_enrolled_students',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_enrolled_students()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_enrolled_students" class="" classes="sig sig-object py" fullname="get_enrolled_students" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_enrolled_students" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_enrolled_students</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course_id, returns a QuerySet of all the active students
                        in the course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_members()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_members',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_members()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_members" class="" classes="sig sig-object py" fullname="get_members" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_members" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_members</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">status</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a mailchimp list id and a user status to filter on, returns all
                        members of the mailchimp list with that status.</paragraph>
                    <paragraph>Returns a set of email addresses.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_student_data()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_student_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_student_data()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_student_data" class="" classes="sig sig-object py" fullname="get_student_data" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_student_data" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_student_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">students</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exclude</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a QuerySet of Django users, extracts id, username, and is_anonymous data.
                        Excludes any users provided in the optional <title_reference>exclude</title_reference> set.</paragraph>
                    <paragraph>Returns a list of dictionaries for each user, where the dictionary has keys
                        ‘EMAIL’, ‘FULLNAME’, and ‘EDX_ID’.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_subscribed()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_subscribed',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_subscribed()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_subscribed" class="" classes="sig sig-object py" fullname="get_subscribed" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_subscribed" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_subscribed</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a set of email addresses subscribed to <title_reference>list_id</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_unsubscribed()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_unsubscribed',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_unsubscribed()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course get_unsubscribed" class="" classes="sig sig-object py" fullname="get_unsubscribed" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.get_unsubscribed" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_unsubscribed</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a set of email addresses that have unsubscribed from <title_reference>list_id</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'make_segments()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.make_segments',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="make_segments()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course make_segments" class="" classes="sig sig-object py" fullname="make_segments" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.make_segments" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">make_segments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">count</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">emails</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Segments the list of email addresses <title_reference>emails</title_reference> into <title_reference>count</title_reference> segments,
                        if count is nonzero.</paragraph>
                    <paragraph>For unknown historical reasons, lost to the winds of time, this is done with
                        a random order to the email addresses.</paragraph>
                    <paragraph>First, existing ‘<problematic ids="id2" refid="id1">random_</problematic>’ mailchimp segments are deleted.</paragraph>
                    <paragraph>Then, the list of emails (the whole, large list) is shuffled.</paragraph>
                    <paragraph>Finally, the shuffled emails are chunked into <title_reference>count</title_reference> segments and re-uploaded
                        to mailchimp as ‘<problematic ids="id4" refid="id3">random_</problematic>’-prefixed segments.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'name_to_tag()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.name_to_tag',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="name_to_tag()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course name_to_tag" class="" classes="sig sig-object py" fullname="name_to_tag" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.name_to_tag" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">name_to_tag</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns sanitized str <title_reference>name</title_reference>: no more than 10 characters,
                        with spaces replaced with <title_reference>_</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'subscribe_with_data()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.subscribe_with_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="subscribe_with_data()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course subscribe_with_data" class="" classes="sig sig-object py" fullname="subscribe_with_data" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.subscribe_with_data" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">subscribe_with_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given user_data in the form of a list of dictionaries for each user,
                        where the dictionary has keys ‘EMAIL’, ‘FULLNAME’, and ‘EDX_ID’, batch
                        subscribe the users to the given <title_reference>list_id</title_reference> via a Mailchimp api method.</paragraph>
                    <paragraph>Returns None</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'unsubscribe()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.unsubscribe',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="unsubscribe()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course unsubscribe" class="" classes="sig sig-object py" fullname="unsubscribe" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.unsubscribe" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">unsubscribe</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">emails</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Batch unsubscribe the given email addresses from the list represented
                        by <title_reference>list_id</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_merge_tags()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.update_merge_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_merge_tags()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course update_merge_tags" class="" classes="sig sig-object py" fullname="update_merge_tags" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.update_merge_tags" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_merge_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">tag_names</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This function is rather inscrutable. Given tag_names, which
                        in this code seems to be a list of [‘FULLNAME’, ‘EMAIL’, ‘EDX_ID’],
                        we grab tags from the mailchimp list, then we verify tag_names has
                        ‘FULLNAME’ and ‘EMAIL’ present, we get more data from mailchimp, then
                        sync the variables up to mailchimp using <title_reference>listMergeVarAdd</title_reference>.</paragraph>
                    <paragraph>The purpose of this function is unclear.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'verify_list()\ (in\ module\ lms.djangoapps.mailing.management.commands.mailchimp_sync_course)',\ 'lms.djangoapps.mailing.management.commands.mailchimp_sync_course.verify_list',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="verify_list()" _toc_parts="lms.djangoapps.mailing.management.commands.mailchimp_sync_course verify_list" class="" classes="sig sig-object py" fullname="verify_list" ids="lms.djangoapps.mailing.management.commands.mailchimp_sync_course.verify_list" module="lms.djangoapps.mailing.management.commands.mailchimp_sync_course"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.mailing.management.commands.mailchimp_sync_course.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">verify_list</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mailchimp</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">list_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Verifies that the given list_id corresponds to the course_id
                        Returns boolean: whether or not course_id matches list_id</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.mailing.management.commands module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.mailing.management.commands',\ 'module-lms.djangoapps.mailing.management.commands',\ '',\ None]"></index>
        </section>
    </section>
</document>
