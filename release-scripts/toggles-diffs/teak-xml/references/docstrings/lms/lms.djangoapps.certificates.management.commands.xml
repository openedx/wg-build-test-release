<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.certificates.management.commands.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-certificates-management-commands-package" names="lms.djangoapps.certificates.management.commands\ package">
        <title>lms.djangoapps.certificates.management.commands package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands.cert_generation lms-djangoapps-certificates-management-commands-cert-generation-module" names="lms.djangoapps.certificates.management.commands.cert_generation\ module">
            <title>lms.djangoapps.certificates.management.commands.cert_generation module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands.cert_generation',\ 'module-lms.djangoapps.certificates.management.commands.cert_generation',\ '',\ None]"></index>
            <paragraph>Management command to generate course certificates for one or more users in a given course run.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.certificates.management.commands.cert_generation)',\ 'lms.djangoapps.certificates.management.commands.cert_generation.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.certificates.management.commands.cert_generation Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.certificates.management.commands.cert_generation.Command" module="lms.djangoapps.certificates.management.commands.cert_generation"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.certificates.management.commands.cert_generation.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Management command to generate course certificates for one or more users in a given course run.</paragraph>
                    <paragraph>Example usage:
                        ./manage.py lms cert_generation -u 123 456 -c course-v1:edX+DemoX+Demo_Course</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.certificates.management.commands.cert_generation.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.cert_generation.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.certificates.management.commands.cert_generation Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.certificates.management.commands.cert_generation.Command.add_arguments" module="lms.djangoapps.certificates.management.commands.cert_generation"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_args_from_database()\ (lms.djangoapps.certificates.management.commands.cert_generation.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.cert_generation.Command.get_args_from_database',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.get_args_from_database()" _toc_parts="lms.djangoapps.certificates.management.commands.cert_generation Command get_args_from_database" class="Command" classes="sig sig-object py" fullname="Command.get_args_from_database" ids="lms.djangoapps.certificates.management.commands.cert_generation.Command.get_args_from_database" module="lms.djangoapps.certificates.management.commands.cert_generation"><desc_name classes="sig-name descname" xml:space="preserve">get_args_from_database</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns an options dictionary from the current CertificateGenerationCommandConfiguration model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.certificates.management.commands.cert_generation.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.cert_generation.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.certificates.management.commands.cert_generation Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.certificates.management.commands.cert_generation.Command.handle" module="lms.djangoapps.certificates.management.commands.cert_generation"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.certificates.management.commands.cert_generation.Command\ attribute)',\ 'lms.djangoapps.certificates.management.commands.cert_generation.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.certificates.management.commands.cert_generation Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.certificates.management.commands.cert_generation.Command.help" module="lms.djangoapps.certificates.management.commands.cert_generation"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'\n    Generate course certificates for one or more users in a given course run.\n    '</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands.modify_cert_template lms-djangoapps-certificates-management-commands-modify-cert-template-module" names="lms.djangoapps.certificates.management.commands.modify_cert_template\ module">
            <title>lms.djangoapps.certificates.management.commands.modify_cert_template module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands.modify_cert_template',\ 'module-lms.djangoapps.certificates.management.commands.modify_cert_template',\ '',\ None]"></index>
            <paragraph>Management command to modify certificate templates.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.certificates.management.commands.modify_cert_template)',\ 'lms.djangoapps.certificates.management.commands.modify_cert_template.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.certificates.management.commands.modify_cert_template Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.certificates.management.commands.modify_cert_template.Command" module="lms.djangoapps.certificates.management.commands.modify_cert_template"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.certificates.management.commands.modify_cert_template.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Management command to modify certificate templates.
                        Example usage:
                        ./manage.py lms modify_cert_template –old-text “&lt;/head&gt;” –new text “&lt;p&gt;boo!&lt;/p&gt;&lt;/head&gt;” –templates 867 3509</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.certificates.management.commands.modify_cert_template.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.modify_cert_template.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.certificates.management.commands.modify_cert_template Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.certificates.management.commands.modify_cert_template.Command.add_arguments" module="lms.djangoapps.certificates.management.commands.modify_cert_template"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_args_from_database()\ (lms.djangoapps.certificates.management.commands.modify_cert_template.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.modify_cert_template.Command.get_args_from_database',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.get_args_from_database()" _toc_parts="lms.djangoapps.certificates.management.commands.modify_cert_template Command get_args_from_database" class="Command" classes="sig sig-object py" fullname="Command.get_args_from_database" ids="lms.djangoapps.certificates.management.commands.modify_cert_template.Command.get_args_from_database" module="lms.djangoapps.certificates.management.commands.modify_cert_template"><desc_name classes="sig-name descname" xml:space="preserve">get_args_from_database</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns an options dictionary from the current ModifiedCertificateTemplateCommandConfiguration instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.certificates.management.commands.modify_cert_template.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.modify_cert_template.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.certificates.management.commands.modify_cert_template Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.certificates.management.commands.modify_cert_template.Command.handle" module="lms.djangoapps.certificates.management.commands.modify_cert_template"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.certificates.management.commands.modify_cert_template.Command\ attribute)',\ 'lms.djangoapps.certificates.management.commands.modify_cert_template.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.certificates.management.commands.modify_cert_template Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.certificates.management.commands.modify_cert_template.Command.help" module="lms.djangoapps.certificates.management.commands.modify_cert_template"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>"Modify one or more certificate templates.\n    This is DANGEROUS.\n    * This uses string replacement to modify HTML-like templates, because the presence of\n      Django Templating makes it impossible to do true parsing.\n    * This isn't parameterizing the replacement text, for the same reason.  It has\n      no way of knowing what is template language and what is HTML.\n    Do not trust that this will get the conversion right without verification,\n    and absolutely do not accepted untrusted user input for the replacement text. This is\n    to be run by trusted users only.\n    Always run this with dry-run or in a reliable test environment.\n    "</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates lms-djangoapps-certificates-management-commands-purge-pii-from-generatedcertificates-module" names="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates\ module">
            <title>lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates',\ 'module-lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates',\ '',\ None]"></index>
            <paragraph>A management command, designed to be run once by Open edX Operators, to obfuscate learner PII from the
                <title_reference>Certificates_GeneratedCertificate</title_reference> table that should have been purged during learner retirement.</paragraph>
            <paragraph>A fix has been included in the retirement pipeline to properly purge this data during learner retirement. This can be
                used to purge PII from accounts that have already been retired.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates)',\ 'lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command" module="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>This management command performs a bulk update on <title_reference>GeneratedCertificate</title_reference> instances. This means that it will not
                        invoke the custom save() function defined as part of the <title_reference>GeneratedCertificate</title_reference> model, and thus will not emit any
                        Django signals throughout the system after the update occurs. This is desired behavior. We are using this
                        management command to purge remnant PII, retired elsewhere in the system, that should have already been removed
                        from the Certificates tables. We don’t need updates to propogate to external systems (like the Credentials IDA).</paragraph>
                    <paragraph>This management command functions by requesting a list of learners’ user_ids whom have completed their journey
                        through the retirement pipeline. The <title_reference>get_retired_user_ids</title_reference> utility function is responsible for filtering out any
                        learners in the PENDING state, as they could still submit a request to cancel their account deletion request (and
                        we don’t want to remove any data that may still be good).</paragraph>
                    <paragraph>Example usage:</paragraph>
                    <paragraph># Dry Run (preview changes):
                        $ ./manage.py lms purge_pii_from_generatedcertificates –dry-run</paragraph>
                    <paragraph># Purge data:
                        $ ./manage.py lms purge_pii_from_generatedcertificates</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.add_arguments" module="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.handle" module="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command\ attribute)',\ 'lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates.Command.help" module="lms.djangoapps.certificates.management.commands.purge_pii_from_generatedcertificates"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>"\n    Purges learners' full names from the `Certificates_GeneratedCertificate` table if their account has been\n    successfully retired.\n    "</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates lms-djangoapps-certificates-management-commands-purge-references-to-pdf-certificates-module" names="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates\ module">
            <title>lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates',\ 'module-lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates',\ '',\ None]"></index>
            <paragraph>A management command designed to be part of the retirement pipeline for any Open EdX operators
                with users who still have legacy PDF certificates.</paragraph>
            <paragraph>Once an external process has run to remove the four files comprising a legacy PDF certificate,
                this management command will remove the reference to the file from the certificate record.</paragraph>
            <paragraph>Note: it is important to retain the reference in the certificate table until
                the files have been deleted, because that reference is the files’ identifying descriptor.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates)',\ 'lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command" module="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Doesn’t invoke the custom save() function defined as part of the <title_reference>GeneratedCertificate</title_reference>
                        model; perforce will emit no Django signals. This is desired behavior. We are
                        using this management command to purge information that was never sent to any
                        other systems, so we don’t need to propagate updates.</paragraph>
                    <paragraph>Example usage:</paragraph>
                    <paragraph># Dry Run (preview changes):
                        $ ./manage.py lms purge_references_to_pdf_certificates –dry-run</paragraph>
                    <paragraph># Purge data:
                        $ ./manage.py lms purge_references_to_pdf_certificates</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.add_arguments" module="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_args_from_database()\ (lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.get_args_from_database',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.get_args_from_database()" _toc_parts="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates Command get_args_from_database" class="Command" classes="sig sig-object py" fullname="Command.get_args_from_database" ids="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.get_args_from_database" module="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates"><desc_name classes="sig-name descname" xml:space="preserve">get_args_from_database</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns an options dictionary from the current CertificateGenerationCommandConfiguration model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.handle" module="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'help\ (lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command\ attribute)',\ 'lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.help',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Command.help" _toc_parts="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates Command help" class="Command" classes="sig sig-object py" fullname="Command.help" ids="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates.Command.help" module="lms.djangoapps.certificates.management.commands.purge_references_to_pdf_certificates"><desc_name classes="sig-name descname" xml:space="preserve">help</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Purges references to PDF certificates. Intended to be run after the files have been deleted.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands.regenerate_noidv_cert lms-djangoapps-certificates-management-commands-regenerate-noidv-cert-module" names="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert\ module">
            <title>lms.djangoapps.certificates.management.commands.regenerate_noidv_cert module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands.regenerate_noidv_cert',\ 'module-lms.djangoapps.certificates.management.commands.regenerate_noidv_cert',\ '',\ None]"></index>
            <paragraph>Management command to regenerate unverified certificates when a course
                transitions to honor code.</paragraph>
            <index entries="['single',\ 'Command\ (class\ in\ lms.djangoapps.certificates.management.commands.regenerate_noidv_cert)',\ 'lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Command" _toc_parts="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert Command" class="" classes="sig sig-object py" fullname="Command" ids="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command" module="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Command</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stdout</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">stderr</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">no_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_color</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">BaseCommand</literal></paragraph>
                    <paragraph>Management command to regenerate unverified certificates when a course
                        transitions to honor code.</paragraph>
                    <index entries="['single',\ 'add_arguments()\ (lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command.add_arguments',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.add_arguments()" _toc_parts="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert Command add_arguments" class="Command" classes="sig sig-object py" fullname="Command.add_arguments" ids="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command.add_arguments" module="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert"><desc_name classes="sig-name descname" xml:space="preserve">add_arguments</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parser</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Entry point for subclassed commands to add custom arguments.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'handle()\ (lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command\ method)',\ 'lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command.handle',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Command.handle()" _toc_parts="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert Command handle" class="Command" classes="sig sig-object py" fullname="Command.handle" ids="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert.Command.handle" module="lms.djangoapps.certificates.management.commands.regenerate_noidv_cert"><desc_name classes="sig-name descname" xml:space="preserve">handle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">options</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The actual logic of the command. Subclasses must implement
                                this method.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.certificates.management.commands module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.certificates.management.commands',\ 'module-lms.djangoapps.certificates.management.commands',\ '',\ None]"></index>
        </section>
    </section>
</document>
