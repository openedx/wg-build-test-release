<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/lms/lms.djangoapps.course_api.blocks.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="lms-djangoapps-course-api-blocks-package" names="lms.djangoapps.course_api.blocks\ package">
        <title>lms.djangoapps.course_api.blocks package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers">lms.djangoapps.course_api.blocks.transformers package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.block_completion" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.block_completion">lms.djangoapps.course_api.blocks.transformers.block_completion module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer"><literal>BlockCompletionTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.COMPLETE" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.COMPLETE"><literal>BlockCompletionTransformer.COMPLETE</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.COMPLETION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.COMPLETION"><literal>BlockCompletionTransformer.COMPLETION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.READ_VERSION"><literal>BlockCompletionTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.RESUME_BLOCK" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.RESUME_BLOCK"><literal>BlockCompletionTransformer.RESUME_BLOCK</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.WRITE_VERSION"><literal>BlockCompletionTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.collect"><literal>BlockCompletionTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.get_block_completion" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.get_block_completion"><literal>BlockCompletionTransformer.get_block_completion()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.mark_complete" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.mark_complete"><literal>BlockCompletionTransformer.mark_complete()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.name"><literal>BlockCompletionTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_completion.BlockCompletionTransformer.transform"><literal>BlockCompletionTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.block_counts" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.block_counts">lms.djangoapps.course_api.blocks.transformers.block_counts module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer"><literal>BlockCountsTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.BLOCK_COUNTS" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.BLOCK_COUNTS"><literal>BlockCountsTransformer.BLOCK_COUNTS</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.READ_VERSION"><literal>BlockCountsTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.WRITE_VERSION"><literal>BlockCountsTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.collect"><literal>BlockCountsTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.name"><literal>BlockCountsTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_counts.BlockCountsTransformer.transform"><literal>BlockCountsTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.block_depth" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.block_depth">lms.djangoapps.course_api.blocks.transformers.block_depth module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer"><literal>BlockDepthTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.BLOCK_DEPTH" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.BLOCK_DEPTH"><literal>BlockDepthTransformer.BLOCK_DEPTH</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.READ_VERSION"><literal>BlockDepthTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.WRITE_VERSION"><literal>BlockDepthTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.get_block_depth" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.get_block_depth"><literal>BlockDepthTransformer.get_block_depth()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.name"><literal>BlockDepthTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.block_depth.BlockDepthTransformer.transform"><literal>BlockDepthTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.blocks_api" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.blocks_api">lms.djangoapps.course_api.blocks.transformers.blocks_api module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer"><literal>BlocksAPITransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.READ_VERSION"><literal>BlocksAPITransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.STUDENT_VIEW_DATA" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.STUDENT_VIEW_DATA"><literal>BlocksAPITransformer.STUDENT_VIEW_DATA</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.STUDENT_VIEW_MULTI_DEVICE" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.STUDENT_VIEW_MULTI_DEVICE"><literal>BlocksAPITransformer.STUDENT_VIEW_MULTI_DEVICE</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.WRITE_VERSION"><literal>BlocksAPITransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.collect"><literal>BlocksAPITransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.name"><literal>BlocksAPITransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.blocks_api.BlocksAPITransformer.transform"><literal>BlocksAPITransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.extra_fields" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.extra_fields">lms.djangoapps.course_api.blocks.transformers.extra_fields module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer"><literal>ExtraFieldsTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.READ_VERSION"><literal>ExtraFieldsTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.WRITE_VERSION"><literal>ExtraFieldsTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.collect"><literal>ExtraFieldsTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.get_requested_extra_fields" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.get_requested_extra_fields"><literal>ExtraFieldsTransformer.get_requested_extra_fields()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.name"><literal>ExtraFieldsTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.extra_fields.ExtraFieldsTransformer.transform"><literal>ExtraFieldsTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.milestones" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.milestones">lms.djangoapps.course_api.blocks.transformers.milestones module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer"><literal>MilestonesAndSpecialExamsTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.READ_VERSION"><literal>MilestonesAndSpecialExamsTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.WRITE_VERSION"><literal>MilestonesAndSpecialExamsTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.add_special_exam_info" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.add_special_exam_info"><literal>MilestonesAndSpecialExamsTransformer.add_special_exam_info()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.collect"><literal>MilestonesAndSpecialExamsTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.gated_by_required_content" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.gated_by_required_content"><literal>MilestonesAndSpecialExamsTransformer.gated_by_required_content()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.get_required_content" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.get_required_content"><literal>MilestonesAndSpecialExamsTransformer.get_required_content()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.has_pending_milestones_for_user" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.has_pending_milestones_for_user"><literal>MilestonesAndSpecialExamsTransformer.has_pending_milestones_for_user()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.is_special_exam" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.is_special_exam"><literal>MilestonesAndSpecialExamsTransformer.is_special_exam()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.name"><literal>MilestonesAndSpecialExamsTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.milestones.MilestonesAndSpecialExamsTransformer.transform"><literal>MilestonesAndSpecialExamsTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.navigation" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.navigation">lms.djangoapps.course_api.blocks.transformers.navigation module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer"><literal>BlockNavigationTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.BLOCK_NAVIGATION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.BLOCK_NAVIGATION"><literal>BlockNavigationTransformer.BLOCK_NAVIGATION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.BLOCK_NAVIGATION_FOR_CHILDREN" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.BLOCK_NAVIGATION_FOR_CHILDREN"><literal>BlockNavigationTransformer.BLOCK_NAVIGATION_FOR_CHILDREN</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.READ_VERSION"><literal>BlockNavigationTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.WRITE_VERSION"><literal>BlockNavigationTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.collect"><literal>BlockNavigationTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.name"><literal>BlockNavigationTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.BlockNavigationTransformer.transform"><literal>BlockNavigationTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.navigation.DescendantList" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.navigation.DescendantList"><literal>DescendantList</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.student_view" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.student_view">lms.djangoapps.course_api.blocks.transformers.student_view module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer"><literal>StudentViewTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.READ_VERSION"><literal>StudentViewTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.STUDENT_VIEW_DATA" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.STUDENT_VIEW_DATA"><literal>StudentViewTransformer.STUDENT_VIEW_DATA</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.STUDENT_VIEW_MULTI_DEVICE" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.STUDENT_VIEW_MULTI_DEVICE"><literal>StudentViewTransformer.STUDENT_VIEW_MULTI_DEVICE</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.WRITE_VERSION"><literal>StudentViewTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.collect" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.collect"><literal>StudentViewTransformer.collect()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.name"><literal>StudentViewTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.student_view.StudentViewTransformer.transform"><literal>StudentViewTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.video_stream_priority" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.video_stream_priority">lms.djangoapps.course_api.blocks.transformers.video_stream_priority module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer"><literal>VideoBlockStreamPriorityTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.DEFAULT_VIDEO_STREAM_PRIORITY" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.DEFAULT_VIDEO_STREAM_PRIORITY"><literal>VideoBlockStreamPriorityTransformer.DEFAULT_VIDEO_STREAM_PRIORITY</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.DEPRECATE_YOUTUBE_VIDEO_STREAM_PRIORITY" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.DEPRECATE_YOUTUBE_VIDEO_STREAM_PRIORITY"><literal>VideoBlockStreamPriorityTransformer.DEPRECATE_YOUTUBE_VIDEO_STREAM_PRIORITY</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.READ_VERSION"><literal>VideoBlockStreamPriorityTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.WRITE_VERSION"><literal>VideoBlockStreamPriorityTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.name"><literal>VideoBlockStreamPriorityTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_stream_priority.VideoBlockStreamPriorityTransformer.transform"><literal>VideoBlockStreamPriorityTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers.video_urls" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers.video_urls">lms.djangoapps.course_api.blocks.transformers.video_urls module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer"><literal>VideoBlockURLTransformer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.CDN_URL" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.CDN_URL"><literal>VideoBlockURLTransformer.CDN_URL</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.READ_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.READ_VERSION"><literal>VideoBlockURLTransformer.READ_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.VIDEO_FORMAT_EXCEPTIONS" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.VIDEO_FORMAT_EXCEPTIONS"><literal>VideoBlockURLTransformer.VIDEO_FORMAT_EXCEPTIONS</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.WRITE_VERSION" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.WRITE_VERSION"><literal>VideoBlockURLTransformer.WRITE_VERSION</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.name" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.name"><literal>VideoBlockURLTransformer.name()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.transform" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#lms.djangoapps.course_api.blocks.transformers.video_urls.VideoBlockURLTransformer.transform"><literal>VideoBlockURLTransformer.transform()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-lms.djangoapps.course_api.blocks.transformers" internal="True" refuri="lms.djangoapps.course_api.blocks.transformers#module-lms.djangoapps.course_api.blocks.transformers">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.api lms-djangoapps-course-api-blocks-api-module" names="lms.djangoapps.course_api.blocks.api\ module">
            <title>lms.djangoapps.course_api.blocks.api module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.api',\ 'module-lms.djangoapps.course_api.blocks.api',\ '',\ None]"></index>
            <paragraph>API function for retrieving course blocks data</paragraph>
            <index entries="['single',\ 'get_block_metadata()\ (in\ module\ lms.djangoapps.course_api.blocks.api)',\ 'lms.djangoapps.course_api.blocks.api.get_block_metadata',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_block_metadata()" _toc_parts="lms.djangoapps.course_api.blocks.api get_block_metadata" class="" classes="sig sig-object py" fullname="get_block_metadata" ids="lms.djangoapps.course_api.blocks.api.get_block_metadata" module="lms.djangoapps.course_api.blocks.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_block_metadata</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">includes</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">()</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get metadata about the specified XBlock.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>block</literal_strong> (<literal_emphasis>XBlock</literal_emphasis>) – block object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>includes</literal_strong> (<literal_emphasis>list</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>set</literal_emphasis>) – <paragraph>list or set of metadata keys to include. Valid keys are:
                                                index_dictionary: a dictionary of data used to add this XBlock’s content</paragraph><block_quote><paragraph>to a search index.</paragraph></block_quote></paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_blocks()\ (in\ module\ lms.djangoapps.course_api.blocks.api)',\ 'lms.djangoapps.course_api.blocks.api.get_blocks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_blocks()" _toc_parts="lms.djangoapps.course_api.blocks.api get_blocks" class="" classes="sig sig-object py" fullname="get_blocks" ids="lms.djangoapps.course_api.blocks.api.get_blocks" module="lms.djangoapps.course_api.blocks.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_blocks</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">depth</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">nav_depth</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requested_fields</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_counts</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">student_view_data</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">return_type</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'dict'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_types_filter</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">hide_access_denials</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allow_start_dates_in_future</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a serialized representation of the course blocks.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>HTTPRequest</literal_emphasis>) – Used for calling django reverse.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – Identifies the starting block of interest.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="../openedx/openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – Optional user object for whom the blocks are being
                                            retrieved. If None, blocks are returned regardless of access checks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>depth</literal_strong> (<literal_emphasis>integer</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – Identifies the depth of the tree to return
                                            starting at the root block.  If None, the entire tree starting at
                                            the root is returned.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>nav_depth</literal_strong> (<literal_emphasis>integer</literal_emphasis>) – Optional parameter that indicates how far deep to
                                            traverse into the block hierarchy before bundling all the
                                            descendants for navigation.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>requested_fields</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Optional list of names of additional fields
                                            to return for each block.  Supported fields are listed in
                                            transformers.SUPPORTED_FIELDS.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>block_counts</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Optional list of names of block types for which to
                                            return an aggregate count of blocks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>student_view_data</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Optional list of names of block types for
                                            which blocks to return their student_view_data.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>return_type</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Possible values are ‘dict’ or ‘list’. Indicates
                                            the format for returning the blocks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>block_types_filter</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Optional list of block type names used to filter
                                            the final result of returned blocks.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>hide_access_denials</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – When True, filter out any blocks that were
                                            denied access to the user, even if they have access denial messages
                                            attached.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>allow_start_dates_in_future</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – When True, will allow blocks to be
                                            returned that can bypass the StartDateTransformer’s filter to show
                                            blocks with start dates in the future.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.forms lms-djangoapps-course-api-blocks-forms-module" names="lms.djangoapps.course_api.blocks.forms\ module">
            <title>lms.djangoapps.course_api.blocks.forms module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.forms',\ 'module-lms.djangoapps.course_api.blocks.forms',\ '',\ None]"></index>
            <paragraph>Course API Forms</paragraph>
            <index entries="['single',\ 'BlockListGetForm\ (class\ in\ lms.djangoapps.course_api.blocks.forms)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockListGetForm" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm" class="" classes="sig sig-object py" fullname="BlockListGetForm" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm" module="lms.djangoapps.course_api.blocks.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockListGetForm</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">files=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">auto_id='id_%s'</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prefix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">initial=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_class=&lt;class 'django.forms.utils.ErrorList'&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">label_suffix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">empty_permitted=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_order=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_required_attribute=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">renderer=None</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Form</literal></paragraph>
                    <paragraph>A form to validate query parameters in the block list retrieval endpoint</paragraph>
                    <index entries="['single',\ 'base_fields\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ attribute)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.base_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockListGetForm.base_fields" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm base_fields" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.base_fields" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.base_fields" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">base_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'all_blocks': &lt;openedx.core.djangoapps.util.forms.ExtendedNullBooleanField object&gt;, 'block_counts': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'block_types_filter': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'depth': &lt;django.forms.fields.CharField object&gt;, 'nav_depth': &lt;django.forms.fields.IntegerField object&gt;, 'requested_fields': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'return_type': &lt;django.forms.fields.ChoiceField object&gt;, 'student_view_data': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'usage_key': &lt;django.forms.fields.CharField object&gt;, 'username': &lt;django.forms.fields.CharField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return cleaned data, including additional requested fields.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_depth()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_depth',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean_depth()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean_depth" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean_depth" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_depth" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_depth</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the appropriate depth.  No provided value will be treated as a
                                depth of 0, while a value of “all” will be treated as unlimited depth.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_requested_fields()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_requested_fields',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean_requested_fields()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean_requested_fields" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean_requested_fields" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_requested_fields" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_requested_fields</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a set of <title_reference>requested_fields</title_reference>, merged with defaults of <title_reference>type</title_reference>
                                and <title_reference>display_name</title_reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_return_type()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_return_type',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean_return_type()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean_return_type" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean_return_type" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_return_type" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_return_type</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return valid ‘return_type’ or default value of ‘dict’</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_usage_key()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_usage_key',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean_usage_key()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean_usage_key" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean_usage_key" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_usage_key" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_usage_key</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Ensure a valid <title_reference>usage_key</title_reference> was provided.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_username()\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ method)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_username',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockListGetForm.clean_username()" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm clean_username" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.clean_username" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.clean_username" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_username</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return cleaned username.</paragraph>
                            <paragraph>Overrides the default behaviour that maps an empty string to None. This
                                allows us to differentiate between no username being provided (None) vs
                                an empty username being provided (‘’).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'declared_fields\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ attribute)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.declared_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockListGetForm.declared_fields" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm declared_fields" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.declared_fields" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.declared_fields" module="lms.djangoapps.course_api.blocks.forms"><desc_name classes="sig-name descname" xml:space="preserve">declared_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'all_blocks': &lt;openedx.core.djangoapps.util.forms.ExtendedNullBooleanField object&gt;, 'block_counts': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'block_types_filter': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'depth': &lt;django.forms.fields.CharField object&gt;, 'nav_depth': &lt;django.forms.fields.IntegerField object&gt;, 'requested_fields': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'return_type': &lt;django.forms.fields.ChoiceField object&gt;, 'student_view_data': &lt;openedx.core.djangoapps.util.forms.MultiValueField object&gt;, 'usage_key': &lt;django.forms.fields.CharField object&gt;, 'username': &lt;django.forms.fields.CharField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'media\ (lms.djangoapps.course_api.blocks.forms.BlockListGetForm\ property)',\ 'lms.djangoapps.course_api.blocks.forms.BlockListGetForm.media',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="BlockListGetForm.media" _toc_parts="lms.djangoapps.course_api.blocks.forms BlockListGetForm media" class="BlockListGetForm" classes="sig sig-object py" fullname="BlockListGetForm.media" ids="lms.djangoapps.course_api.blocks.forms.BlockListGetForm.media" module="lms.djangoapps.course_api.blocks.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">media</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return all media required to render the widgets on this form.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.permissions lms-djangoapps-course-api-blocks-permissions-module" names="lms.djangoapps.course_api.blocks.permissions\ module">
            <title>lms.djangoapps.course_api.blocks.permissions module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.permissions',\ 'module-lms.djangoapps.course_api.blocks.permissions',\ '',\ None]"></index>
            <paragraph>Encapsulates permissions checks for Course Blocks API</paragraph>
            <index entries="['single',\ 'can_access_all_blocks()\ (in\ module\ lms.djangoapps.course_api.blocks.permissions)',\ 'lms.djangoapps.course_api.blocks.permissions.can_access_all_blocks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="can_access_all_blocks()" _toc_parts="lms.djangoapps.course_api.blocks.permissions can_access_all_blocks" class="" classes="sig sig-object py" fullname="can_access_all_blocks" ids="lms.djangoapps.course_api.blocks.permissions.can_access_all_blocks" module="lms.djangoapps.course_api.blocks.permissions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.permissions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">can_access_all_blocks</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns whether the requesting_user can access all the blocks
                        in the course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'can_access_others_blocks()\ (in\ module\ lms.djangoapps.course_api.blocks.permissions)',\ 'lms.djangoapps.course_api.blocks.permissions.can_access_others_blocks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="can_access_others_blocks()" _toc_parts="lms.djangoapps.course_api.blocks.permissions can_access_others_blocks" class="" classes="sig sig-object py" fullname="can_access_others_blocks" ids="lms.djangoapps.course_api.blocks.permissions.can_access_others_blocks" module="lms.djangoapps.course_api.blocks.permissions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.permissions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">can_access_others_blocks</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns whether the requesting_user can access the blocks for
                        other users in the given course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'can_access_self_blocks()\ (in\ module\ lms.djangoapps.course_api.blocks.permissions)',\ 'lms.djangoapps.course_api.blocks.permissions.can_access_self_blocks',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="can_access_self_blocks()" _toc_parts="lms.djangoapps.course_api.blocks.permissions can_access_self_blocks" class="" classes="sig sig-object py" fullname="can_access_self_blocks" ids="lms.djangoapps.course_api.blocks.permissions.can_access_self_blocks" module="lms.djangoapps.course_api.blocks.permissions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.permissions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">can_access_self_blocks</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requesting_user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference></desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve"><reference internal="True" reftitle="lms.djangoapps.courseware.access_response.AccessResponse" refuri="lms.djangoapps.courseware#lms.djangoapps.courseware.access_response.AccessResponse">AccessResponse</reference></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Returns whether the requesting_user can access own blocks.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_course_public()\ (in\ module\ lms.djangoapps.course_api.blocks.permissions)',\ 'lms.djangoapps.course_api.blocks.permissions.is_course_public',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_course_public()" _toc_parts="lms.djangoapps.course_api.blocks.permissions is_course_public" class="" classes="sig sig-object py" fullname="is_course_public" ids="lms.djangoapps.course_api.blocks.permissions.is_course_public" module="lms.djangoapps.course_api.blocks.permissions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.permissions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_course_public</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve"><reference internal="True" reftitle="lms.djangoapps.courseware.access_response.AccessResponse" refuri="lms.djangoapps.courseware#lms.djangoapps.courseware.access_response.AccessResponse">AccessResponse</reference></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>This checks if a course is publicly accessible or not.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.serializers lms-djangoapps-course-api-blocks-serializers-module" names="lms.djangoapps.course_api.blocks.serializers\ module">
            <title>lms.djangoapps.course_api.blocks.serializers module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.serializers',\ 'module-lms.djangoapps.course_api.blocks.serializers',\ '',\ None]"></index>
            <paragraph>Serializers for Course Blocks related return objects.</paragraph>
            <index entries="['single',\ 'BlockDictSerializer\ (class\ in\ lms.djangoapps.course_api.blocks.serializers)',\ 'lms.djangoapps.course_api.blocks.serializers.BlockDictSerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockDictSerializer" _toc_parts="lms.djangoapps.course_api.blocks.serializers BlockDictSerializer" class="" classes="sig sig-object py" fullname="BlockDictSerializer" ids="lms.djangoapps.course_api.blocks.serializers.BlockDictSerializer" module="lms.djangoapps.course_api.blocks.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockDictSerializer</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Serializer</literal></paragraph>
                    <paragraph>Serializer that formats a BlockStructure object to a dictionary, rather
                        than a list, of blocks</paragraph>
                    <index entries="['single',\ 'get_blocks()\ (lms.djangoapps.course_api.blocks.serializers.BlockDictSerializer\ method)',\ 'lms.djangoapps.course_api.blocks.serializers.BlockDictSerializer.get_blocks',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockDictSerializer.get_blocks()" _toc_parts="lms.djangoapps.course_api.blocks.serializers BlockDictSerializer get_blocks" class="BlockDictSerializer" classes="sig sig-object py" fullname="BlockDictSerializer.get_blocks" ids="lms.djangoapps.course_api.blocks.serializers.BlockDictSerializer.get_blocks" module="lms.djangoapps.course_api.blocks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">get_blocks</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Serialize to a dictionary of blocks keyed by the block’s usage_key.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlockSerializer\ (class\ in\ lms.djangoapps.course_api.blocks.serializers)',\ 'lms.djangoapps.course_api.blocks.serializers.BlockSerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockSerializer" _toc_parts="lms.djangoapps.course_api.blocks.serializers BlockSerializer" class="" classes="sig sig-object py" fullname="BlockSerializer" ids="lms.djangoapps.course_api.blocks.serializers.BlockSerializer" module="lms.djangoapps.course_api.blocks.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockSerializer</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Serializer</literal></paragraph>
                    <paragraph>Serializer for single course block</paragraph>
                    <index entries="['single',\ 'to_representation()\ (lms.djangoapps.course_api.blocks.serializers.BlockSerializer\ method)',\ 'lms.djangoapps.course_api.blocks.serializers.BlockSerializer.to_representation',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockSerializer.to_representation()" _toc_parts="lms.djangoapps.course_api.blocks.serializers BlockSerializer to_representation" class="BlockSerializer" classes="sig sig-object py" fullname="BlockSerializer.to_representation" ids="lms.djangoapps.course_api.blocks.serializers.BlockSerializer.to_representation" module="lms.djangoapps.course_api.blocks.serializers"><desc_name classes="sig-name descname" xml:space="preserve">to_representation</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a serializable representation of the requested block</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'SupportedFieldType\ (class\ in\ lms.djangoapps.course_api.blocks.serializers)',\ 'lms.djangoapps.course_api.blocks.serializers.SupportedFieldType',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SupportedFieldType" _toc_parts="lms.djangoapps.course_api.blocks.serializers SupportedFieldType" class="" classes="sig sig-object py" fullname="SupportedFieldType" ids="lms.djangoapps.course_api.blocks.serializers.SupportedFieldType" module="lms.djangoapps.course_api.blocks.serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">SupportedFieldType</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requested_field_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">serializer_field_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default_value</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Metadata about fields supported by different transformers</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.toggles lms-djangoapps-course-api-blocks-toggles-module" names="lms.djangoapps.course_api.blocks.toggles\ module">
            <title>lms.djangoapps.course_api.blocks.toggles module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.toggles',\ 'module-lms.djangoapps.course_api.blocks.toggles',\ '',\ None]"></index>
            <paragraph>Toggles for Course API.</paragraph>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.urls lms-djangoapps-course-api-blocks-urls-module" names="lms.djangoapps.course_api.blocks.urls\ module">
            <title>lms.djangoapps.course_api.blocks.urls module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.urls',\ 'module-lms.djangoapps.course_api.blocks.urls',\ '',\ None]"></index>
            <paragraph>Course Block API URLs</paragraph>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.utils lms-djangoapps-course-api-blocks-utils-module" names="lms.djangoapps.course_api.blocks.utils\ module">
            <title>lms.djangoapps.course_api.blocks.utils module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.utils',\ 'module-lms.djangoapps.course_api.blocks.utils',\ '',\ None]"></index>
            <paragraph>Utils for Blocks</paragraph>
            <index entries="['single',\ 'filter_discussion_xblocks_from_response()\ (in\ module\ lms.djangoapps.course_api.blocks.utils)',\ 'lms.djangoapps.course_api.blocks.utils.filter_discussion_xblocks_from_response',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="filter_discussion_xblocks_from_response()" _toc_parts="lms.djangoapps.course_api.blocks.utils filter_discussion_xblocks_from_response" class="" classes="sig sig-object py" fullname="filter_discussion_xblocks_from_response" ids="lms.djangoapps.course_api.blocks.utils.filter_discussion_xblocks_from_response" module="lms.djangoapps.course_api.blocks.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">filter_discussion_xblocks_from_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Removes discussion xblocks if discussion provider is openedx</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks.views lms-djangoapps-course-api-blocks-views-module" names="lms.djangoapps.course_api.blocks.views\ module">
            <title>lms.djangoapps.course_api.blocks.views module</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks.views',\ 'module-lms.djangoapps.course_api.blocks.views',\ '',\ None]"></index>
            <paragraph>CourseBlocks API views</paragraph>
            <index entries="['single',\ 'BlockMetadataView\ (class\ in\ lms.djangoapps.course_api.blocks.views)',\ 'lms.djangoapps.course_api.blocks.views.BlockMetadataView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockMetadataView" _toc_parts="lms.djangoapps.course_api.blocks.views BlockMetadataView" class="" classes="sig sig-object py" fullname="BlockMetadataView" ids="lms.djangoapps.course_api.blocks.views.BlockMetadataView" module="lms.djangoapps.course_api.blocks.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockMetadataView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" refuri="../openedx/openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal classes="xref py py-class">DeveloperErrorViewMixin</literal></reference>, <literal classes="xref py py-class">ListAPIView</literal></paragraph>
                    <paragraph><strong>Use Case</strong></paragraph>
                    <block_quote>
                        <paragraph>Returns the block metadata. Data like index_dictionary related to a
                            block should be fetched using this API, because they are too large for
                            the cache used by the course blocks/transformers API.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example requests</strong>:</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>GET /api/courses/v1/block_metadata/&lt;usage_id&gt;/?</term>
                                <definition>
                                    <paragraph>&amp;include=index_dictionary</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </block_quote>
                    <paragraph><strong>Parameters</strong>:</paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>“include”: a comma-separated list of keys to include.
                                    Valid keys are “index_dictionary”.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Response Values</strong></paragraph>
                    <block_quote>
                        <paragraph>A dictionary containing:
                            * id (string): Block usage_key_str.
                            * type (string) Block type.
                            * index_dictionary: (dict) The index_dictionary JSON data</paragraph>
                        <block_quote>
                            <paragraph>(usually this is the text content of the block, for search
                                indexing or other purposes) for this block. Returned only if
                                the “index_dictionary” is included in the “include”
                                parameter.</paragraph>
                        </block_quote>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (lms.djangoapps.course_api.blocks.views.BlockMetadataView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlockMetadataView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockMetadataView.authentication_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlockMetadataView authentication_classes" class="BlockMetadataView" classes="sig sig-object py" fullname="BlockMetadataView.authentication_classes" ids="lms.djangoapps.course_api.blocks.views.BlockMetadataView.authentication_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'dispatch()\ (lms.djangoapps.course_api.blocks.views.BlockMetadataView\ method)',\ 'lms.djangoapps.course_api.blocks.views.BlockMetadataView.dispatch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockMetadataView.dispatch()" _toc_parts="lms.djangoapps.course_api.blocks.views BlockMetadataView dispatch" class="BlockMetadataView" classes="sig sig-object py" fullname="BlockMetadataView.dispatch" ids="lms.djangoapps.course_api.blocks.views.BlockMetadataView.dispatch" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">dispatch</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph><title_reference>.dispatch()</title_reference> is pretty much the same as Django’s regular dispatch,
                                but with extra hooks for startup, finalize, and exception handling.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'list()\ (lms.djangoapps.course_api.blocks.views.BlockMetadataView\ method)',\ 'lms.djangoapps.course_api.blocks.views.BlockMetadataView.list',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockMetadataView.list()" _toc_parts="lms.djangoapps.course_api.blocks.views BlockMetadataView list" class="BlockMetadataView" classes="sig sig-object py" fullname="BlockMetadataView.list" ids="lms.djangoapps.course_api.blocks.views.BlockMetadataView.list" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">list</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key_string</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieves the usage_key for the requested block, and then returns the
                                block metadata</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>object</literal_strong> (<literal_emphasis>request - Django request</literal_emphasis>)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (lms.djangoapps.course_api.blocks.views.BlockMetadataView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlockMetadataView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockMetadataView.permission_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlockMetadataView permission_classes" class="BlockMetadataView" classes="sig sig-object py" fullname="BlockMetadataView.permission_classes" ids="lms.djangoapps.course_api.blocks.views.BlockMetadataView.permission_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>()</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlocksInCourseView\ (class\ in\ lms.djangoapps.course_api.blocks.views)',\ 'lms.djangoapps.course_api.blocks.views.BlocksInCourseView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlocksInCourseView" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksInCourseView" class="" classes="sig sig-object py" fullname="BlocksInCourseView" ids="lms.djangoapps.course_api.blocks.views.BlocksInCourseView" module="lms.djangoapps.course_api.blocks.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlocksInCourseView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="lms.djangoapps.course_api.blocks.views.BlocksView" reftitle="lms.djangoapps.course_api.blocks.views.BlocksView"><literal classes="xref py py-class">BlocksView</literal></reference></paragraph>
                    <paragraph><strong>Use Case</strong></paragraph>
                    <block_quote>
                        <paragraph>Returns the blocks in the course according to the requesting user’s
                            access level.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example requests</strong>:</paragraph>
                    <block_quote>
                        <paragraph>GET /api/courses/v1/blocks/?course_id=&lt;course_id&gt;
                            GET /api/courses/v1/blocks/?course_id=&lt;course_id&gt;</paragraph>
                        <block_quote>
                            <paragraph>&amp;username=anjali
                                &amp;depth=all
                                &amp;requested_fields=graded,format,student_view_multi_device,lti_url
                                &amp;block_counts=video
                                &amp;student_view_data=video
                                &amp;block_types_filter=problem,html</paragraph>
                        </block_quote>
                    </block_quote>
                    <paragraph><strong>Parameters</strong>:</paragraph>
                    <block_quote>
                        <paragraph>This view redirects to /api/courses/v1/blocks/&lt;root_usage_key&gt;/ for the
                            root usage key of the course specified by course_id.  The view accepts
                            all parameters accepted by <reference internal="True" refid="lms.djangoapps.course_api.blocks.views.BlocksView" reftitle="lms.djangoapps.course_api.blocks.views.BlocksView"><literal classes="xref py py-class">BlocksView</literal></reference>, plus the following
                            required parameter</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>course_id: (string, required) The ID of the course whose block data
                                    we want to return</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Response Values</strong></paragraph>
                    <block_quote>
                        <paragraph>Responses are identical to those returned by <reference internal="True" refid="lms.djangoapps.course_api.blocks.views.BlocksView" reftitle="lms.djangoapps.course_api.blocks.views.BlocksView"><literal classes="xref py py-class">BlocksView</literal></reference> when
                            passed the root_usage_key of the requested course.</paragraph>
                        <paragraph>If the course_id is not supplied, a 400: Bad Request is returned, with
                            a message indicating that course_id is required.</paragraph>
                        <paragraph>If an invalid course_id is supplied, a 400: Bad Request is returned,
                            with a message indicating that the course_id is not valid.</paragraph>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (lms.djangoapps.course_api.blocks.views.BlocksInCourseView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlocksInCourseView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlocksInCourseView.authentication_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksInCourseView authentication_classes" class="BlocksInCourseView" classes="sig sig-object py" fullname="BlocksInCourseView.authentication_classes" ids="lms.djangoapps.course_api.blocks.views.BlocksInCourseView.authentication_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'list()\ (lms.djangoapps.course_api.blocks.views.BlocksInCourseView\ method)',\ 'lms.djangoapps.course_api.blocks.views.BlocksInCourseView.list',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlocksInCourseView.list()" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksInCourseView list" class="BlocksInCourseView" classes="sig sig-object py" fullname="BlocksInCourseView.list" ids="lms.djangoapps.course_api.blocks.views.BlocksInCourseView.list" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">list</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">hide_access_denials</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieves the usage_key for the requested course, and then returns the
                                same information that would be returned by BlocksView.list, called with
                                that usage key</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>object</literal_strong> (<literal_emphasis>request - Django request</literal_emphasis>)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (lms.djangoapps.course_api.blocks.views.BlocksInCourseView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlocksInCourseView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlocksInCourseView.permission_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksInCourseView permission_classes" class="BlocksInCourseView" classes="sig sig-object py" fullname="BlocksInCourseView.permission_classes" ids="lms.djangoapps.course_api.blocks.views.BlocksInCourseView.permission_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>()</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlocksView\ (class\ in\ lms.djangoapps.course_api.blocks.views)',\ 'lms.djangoapps.course_api.blocks.views.BlocksView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlocksView" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksView" class="" classes="sig sig-object py" fullname="BlocksView" ids="lms.djangoapps.course_api.blocks.views.BlocksView" module="lms.djangoapps.course_api.blocks.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlocksView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" refuri="../openedx/openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal classes="xref py py-class">DeveloperErrorViewMixin</literal></reference>, <literal classes="xref py py-class">ListAPIView</literal></paragraph>
                    <paragraph><strong>Use Case</strong></paragraph>
                    <block_quote>
                        <paragraph>Returns the blocks within the requested block tree according to the
                            requesting user’s access level.</paragraph>
                    </block_quote>
                    <paragraph><strong>Example requests</strong>:</paragraph>
                    <block_quote>
                        <paragraph>GET /api/courses/v1/blocks/&lt;root_block_usage_id&gt;/?depth=all
                            GET /api/courses/v1/blocks/&lt;usage_id&gt;/?</paragraph>
                        <block_quote>
                            <paragraph>username=anjali
                                &amp;depth=all
                                &amp;requested_fields=graded,format,student_view_multi_device,lti_url,due
                                &amp;block_counts=video
                                &amp;student_view_data=video
                                &amp;block_types_filter=problem,html</paragraph>
                        </block_quote>
                    </block_quote>
                    <paragraph><strong>Parameters</strong>:</paragraph>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>all_blocks: (boolean) Provide a value of “true” to return all
                                    blocks. Returns all blocks only if the requesting user has course
                                    staff permissions. Blocks that are visible only to specific learners
                                    (for example, based on group membership or randomized content) are
                                    all included. If all_blocks is not specified, you must specify the
                                    username for the user whose course blocks are requested.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>username: (string) Required, unless <literal>all_blocks</literal> is specified.
                                    Specify the username for the user whose course blocks are requested.
                                    A blank/empty username can be used to request the blocks accessible
                                    to anonymous users (for public courses). Only users with course staff
                                    permissions can specify other users’ usernames. If a username is
                                    specified, results include blocks that are visible to that user,
                                    including those based on group or cohort membership or randomized
                                    content assigned to that user.</paragraph>
                                <definition_list>
                                    <definition_list_item>
                                        <term>Example: username=anjali</term>
                                        <definition>
                                            <paragraph>username=’’
                                                username</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                            <list_item>
                                <paragraph>student_view_data: (list) Indicates for which block types to return
                                    student_view_data.</paragraph>
                                <paragraph>Example: student_view_data=video</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>block_counts: (list) Indicates for which block types to return the
                                    aggregate count of the blocks.</paragraph>
                                <paragraph>Example: block_counts=video,problem</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>requested_fields: (list) Indicates which additional fields to return
                                    for each block.  For a list of available fields see under <title_reference>Response
                                        Values -&gt; blocks</title_reference>, below.</paragraph>
                                <paragraph>The following fields are always returned: id, type, display_name</paragraph>
                                <paragraph>Example: requested_fields=graded,format,student_view_multi_device</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>depth: (integer or all) Indicates how deep to traverse into the blocks
                                    hierarchy.  A value of all means the entire hierarchy.</paragraph>
                                <paragraph>Default is 0</paragraph>
                                <paragraph>Example: depth=all</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>nav_depth: (integer)</paragraph>
                                <paragraph>WARNING: nav_depth is not supported, and may be removed at any time.</paragraph>
                                <paragraph>Indicates how far deep to traverse into the
                                    course hierarchy before bundling all the descendants.</paragraph>
                                <paragraph>Default is 3 since typical navigational views of the course show a
                                    maximum of chapter-&gt;sequential-&gt;vertical.</paragraph>
                                <paragraph>Example: nav_depth=3</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>return_type (string) Indicates in what data type to return the
                                    blocks.</paragraph>
                                <paragraph>Default is dict. Supported values are: dict, list</paragraph>
                                <paragraph>Example: return_type=dict</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>block_types_filter: (list) Requested types of blocks used to filter the final result
                                    of returned blocks. Possible values include sequential, vertical, html, problem,
                                    video, and discussion.</paragraph>
                                <paragraph>Example: block_types_filter=vertical,html</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <paragraph><strong>Response Values</strong></paragraph>
                    <block_quote>
                        <paragraph>The following fields are returned with a successful response.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>root: The ID of the root node of the requested course block
                                    structure.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>blocks: A dictionary or list, based on the value of the
                                    “return_type” parameter. Maps block usage IDs to a collection of
                                    information about each block. Each block contains the following
                                    fields.</paragraph>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>id: (string) The usage ID of the block.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>type: (string) The type of block. Possible values the names of any
                                            XBlock type in the system, including custom blocks. Examples are
                                            course, chapter, sequential, vertical, html, problem, video, and
                                            discussion.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>display_name: (string) The display name of the block.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>children: (list) If the block has child blocks, a list of IDs of
                                            the child blocks.  Returned only if “children” is included in the
                                            “requested_fields” parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>completion: (float or None) The level of completion of the block.
                                            Its value can vary between 0.0 and 1.0 or be equal to None
                                            if block is not completable. Returned only if “completion”
                                            is included in the “requested_fields” parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>block_counts: (dict) For each block type specified in the
                                            block_counts parameter to the endpoint, the aggregate number of
                                            blocks of that type for this block and all of its descendants.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>graded (boolean) Whether or not the block or any of its descendants
                                            is graded.  Returned only if “graded” is included in the
                                            “requested_fields” parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>format: (string) The assignment type of the block.  Possible values
                                            can be “Homework”, “Lab”, “Midterm Exam”, and “Final Exam”.
                                            Returned only if “format” is included in the “requested_fields”
                                            parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>student_view_data: (dict) The JSON data for this block.
                                            Returned only if the “student_view_data” input parameter contains
                                            this block’s type.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>student_view_url: (string) The URL to retrieve the HTML rendering
                                            of this block’s student view.  The HTML could include CSS and
                                            Javascript code. This field can be used in combination with the
                                            student_view_multi_device field to decide whether to display this
                                            content to the user.</paragraph>
                                        <paragraph>This URL can be used as a fallback if the student_view_data for
                                            this block type is not supported by the client or the block.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>student_view_multi_device: (boolean) Whether or not the HTML of
                                            the student view that is rendered at “student_view_url” supports
                                            responsive web layouts, touch-based inputs, and interactive state
                                            management for a variety of device sizes and types, including
                                            mobile and touch devices. Returned only if
                                            “student_view_multi_device” is included in the “requested_fields”
                                            parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>lms_web_url: (string) The URL to the navigational container of the
                                            xBlock on the web. This URL can be used as a further fallback
                                            if the student_view_url and the student_view_data fields are not
                                            supported. Will direct to either the “New” (micro-frontend) or
                                            “Legacy” (Django-template-rendered) frontend experience depending
                                            on which experience is active.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>legacy_web_url: (string) Like <title_reference>lms_web_url</title_reference>, but always directs to
                                            the “Legacy” frontend experience. Should only be used for
                                            transitional purposes; will be removed as part of DEPR-109.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>lti_url: The block URL for an LTI consumer. Returned only if the
                                            “ENABLE_LTI_PROVIDER” Django settign is set to “True”.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>due: The due date of the block. Returned only if “due” is included
                                            in the “requested_fields” parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>show_correctness: Whether to show scores/correctness to learners for the current sequence or problem.
                                            Returned only if “show_correctness” is included in the “requested_fields” parameter.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Additional XBlock fields can be included in the response if they are
                                            configured via the COURSE_BLOCKS_API_EXTRA_FIELDS Django setting and
                                            requested via the “requested_fields” parameter.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                    <index entries="['single',\ 'authentication_classes\ (lms.djangoapps.course_api.blocks.views.BlocksView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlocksView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlocksView.authentication_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksView authentication_classes" class="BlocksView" classes="sig sig-object py" fullname="BlocksView.authentication_classes" ids="lms.djangoapps.course_api.blocks.views.BlocksView.authentication_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;, &lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.session.authentication.SessionAuthenticationAllowInactiveUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'dispatch()\ (lms.djangoapps.course_api.blocks.views.BlocksView\ method)',\ 'lms.djangoapps.course_api.blocks.views.BlocksView.dispatch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlocksView.dispatch()" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksView dispatch" class="BlocksView" classes="sig sig-object py" fullname="BlocksView.dispatch" ids="lms.djangoapps.course_api.blocks.views.BlocksView.dispatch" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">dispatch</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph><title_reference>.dispatch()</title_reference> is pretty much the same as Django’s regular dispatch,
                                but with extra hooks for startup, finalize, and exception handling.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'list()\ (lms.djangoapps.course_api.blocks.views.BlocksView\ method)',\ 'lms.djangoapps.course_api.blocks.views.BlocksView.list',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlocksView.list()" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksView list" class="BlocksView" classes="sig sig-object py" fullname="BlocksView.list" ids="lms.djangoapps.course_api.blocks.views.BlocksView.list" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">list</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key_string</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">hide_access_denials</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>REST API endpoint for listing all the blocks information in the course,
                                while regarding user access and roles.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>object</literal_strong> (<literal_emphasis>request - Django request</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block.</literal_strong> (<literal_emphasis>usage_key_string - The usage key for a</literal_emphasis>)</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (lms.djangoapps.course_api.blocks.views.BlocksView\ attribute)',\ 'lms.djangoapps.course_api.blocks.views.BlocksView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlocksView.permission_classes" _toc_parts="lms.djangoapps.course_api.blocks.views BlocksView permission_classes" class="BlocksView" classes="sig sig-object py" fullname="BlocksView.permission_classes" ids="lms.djangoapps.course_api.blocks.views.BlocksView.permission_classes" module="lms.djangoapps.course_api.blocks.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>()</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'recurse_mark_complete()\ (in\ module\ lms.djangoapps.course_api.blocks.views)',\ 'lms.djangoapps.course_api.blocks.views.recurse_mark_complete',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="recurse_mark_complete()" _toc_parts="lms.djangoapps.course_api.blocks.views recurse_mark_complete" class="" classes="sig sig-object py" fullname="recurse_mark_complete" ids="lms.djangoapps.course_api.blocks.views.recurse_mark_complete" module="lms.djangoapps.course_api.blocks.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">lms.djangoapps.course_api.blocks.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">recurse_mark_complete</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">blocks</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function to walk course tree dict,
                        marking completion as 1 or 0</paragraph>
                    <paragraph>If all blocks are complete, mark parent block complete</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>blocks</literal_strong> – dict of all blocks</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>block_id</literal_strong> – root or child block id</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>block: course_outline_root_block block object or child block</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-lms.djangoapps.course_api.blocks module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ lms.djangoapps.course_api.blocks',\ 'module-lms.djangoapps.course_api.blocks',\ '',\ None]"></index>
            <paragraph>Course API Blocks</paragraph>
        </section>
    </section>
</document>
