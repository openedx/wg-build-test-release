<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.features.enterprise_support.enrollments.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-features-enterprise-support-enrollments-package" names="openedx.features.enterprise_support.enrollments\ package">
        <title>openedx.features.enterprise_support.enrollments package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.features.enterprise_support.enrollments.exceptions openedx-features-enterprise-support-enrollments-exceptions-module" names="openedx.features.enterprise_support.enrollments.exceptions\ module">
            <title>openedx.features.enterprise_support.enrollments.exceptions module</title>
            <index entries="['pair',\ 'module;\ openedx.features.enterprise_support.enrollments.exceptions',\ 'module-openedx.features.enterprise_support.enrollments.exceptions',\ '',\ None]"></index>
            <index entries="['single',\ 'CourseIdMissingException',\ 'openedx.features.enterprise_support.enrollments.exceptions.CourseIdMissingException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CourseIdMissingException" _toc_parts="openedx.features.enterprise_support.enrollments.exceptions CourseIdMissingException" class="" classes="sig sig-object py" fullname="CourseIdMissingException" ids="openedx.features.enterprise_support.enrollments.exceptions.CourseIdMissingException" module="openedx.features.enterprise_support.enrollments.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.enterprise_support.enrollments.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseIdMissingException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>course_id missing</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UserDoesNotExistException',\ 'openedx.features.enterprise_support.enrollments.exceptions.UserDoesNotExistException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="UserDoesNotExistException" _toc_parts="openedx.features.enterprise_support.enrollments.exceptions UserDoesNotExistException" class="" classes="sig sig-object py" fullname="UserDoesNotExistException" ids="openedx.features.enterprise_support.enrollments.exceptions.UserDoesNotExistException" module="openedx.features.enterprise_support.enrollments.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.enterprise_support.enrollments.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UserDoesNotExistException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>course_id invalid</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.enterprise_support.enrollments.utils openedx-features-enterprise-support-enrollments-utils-module" names="openedx.features.enterprise_support.enrollments.utils\ module">
            <title>openedx.features.enterprise_support.enrollments.utils module</title>
            <index entries="['pair',\ 'module;\ openedx.features.enterprise_support.enrollments.utils',\ 'module-openedx.features.enterprise_support.enrollments.utils',\ '',\ None]"></index>
            <paragraph>Utils for use in enrollment codebase such as views.</paragraph>
            <index entries="['single',\ 'lms_update_or_create_enrollment()\ (in\ module\ openedx.features.enterprise_support.enrollments.utils)',\ 'openedx.features.enterprise_support.enrollments.utils.lms_update_or_create_enrollment',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="lms_update_or_create_enrollment()" _toc_parts="openedx.features.enterprise_support.enrollments.utils lms_update_or_create_enrollment" class="" classes="sig sig-object py" fullname="lms_update_or_create_enrollment" ids="openedx.features.enterprise_support.enrollments.utils.lms_update_or_create_enrollment" module="openedx.features.enterprise_support.enrollments.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.enterprise_support.enrollments.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">lms_update_or_create_enrollment</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">desired_mode</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_active</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enterprise_uuid</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">force_enrollment</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update or create the user’s course enrollment based on the existing enrollment mode.
                        If an enrollment exists and its mode is not equal to the desired mode,
                        then it updates the enrollment.
                        Otherwise, it creates a new enrollment.
                        Enrollment function meant to be called by edx-enterprise to replace the
                        current uses of the EnrollmentApiClient
                        The REST enrollment endpoint may also eventually also want to reuse this function
                        since it’s a subset of what the endpoint handles</paragraph>
                    <paragraph>Unlike the REST endpoint, this function does not check for enterprise enabled, or user api key
                        permissions etc. Those concerns are still going to be used by REST endpoint but this function
                        is meant for use from within edx-enterprise hence already presume such privileges.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>-</literal_emphasis>) – User name</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_id</literal_strong> (<literal_emphasis>-</literal_emphasis>) – Course key obtained using CourseKey.from_string(course_id_input)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>desired_mode</literal_strong> (<literal_emphasis>-</literal_emphasis>) – desired course mode</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>is_active</literal_strong> (<literal_emphasis>-</literal_emphasis>) – A Boolean value that indicates whether the
                                            enrollment is to be set to inactive (if False). Usually we want a True if enrolling anew.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>enterprise_uuid</literal_strong> (<literal_emphasis>-</literal_emphasis>) – Optional. id to identify the enterprise to enroll under</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>force_enrollment</literal_strong> (<literal_emphasis>-</literal_emphasis>) – Enroll user even if course enrollment_end date is expired (default False). This only has an effect when the
                                            enrollment is being created, not when it is only updated.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Returns: A serializable dictionary of the new or updated course enrollment. If it hits</term>
                            <definition>
                                <paragraph>CourseEnrollmentError or CourseEnrollmentNotUpdatableError, it raises those exceptions.
                                    In case of the add_enrollment call, it returns None if the enrollment already exists and
                                    the desired_mode or is_active match the existing enrollment.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.enterprise_support.enrollments module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.features.enterprise_support.enrollments',\ 'module-openedx.features.enterprise_support.enrollments',\ '',\ None]"></index>
        </section>
    </section>
</document>
