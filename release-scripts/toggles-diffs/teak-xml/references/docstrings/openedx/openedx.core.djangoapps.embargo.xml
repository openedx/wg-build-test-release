<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.embargo.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-embargo-package" names="openedx.core.djangoapps.embargo\ package">
        <title>openedx.core.djangoapps.embargo package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.embargo.fixtures">openedx.core.djangoapps.embargo.fixtures package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.embargo.fixtures#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.embargo.fixtures.country_codes" internal="True" refuri="openedx.core.djangoapps.embargo.fixtures#module-openedx.core.djangoapps.embargo.fixtures.country_codes">openedx.core.djangoapps.embargo.fixtures.country_codes module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.embargo.fixtures" internal="True" refuri="openedx.core.djangoapps.embargo.fixtures#module-openedx.core.djangoapps.embargo.fixtures">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.api openedx-core-djangoapps-embargo-api-module" names="openedx.core.djangoapps.embargo.api\ module">
            <title>openedx.core.djangoapps.embargo.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.api',\ 'module-openedx.core.djangoapps.embargo.api',\ '',\ None]"></index>
            <paragraph>The Python API layer of the country access settings. Essentially the middle tier of the project, responsible for all
                business logic that is not directly tied to the data itself.</paragraph>
            <paragraph>This API is exposed via the middleware(emabargo/middileware.py) layer but may be used directly in-process.</paragraph>
            <index entries="['single',\ 'check_course_access()\ (in\ module\ openedx.core.djangoapps.embargo.api)',\ 'openedx.core.djangoapps.embargo.api.check_course_access',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_course_access()" _toc_parts="openedx.core.djangoapps.embargo.api check_course_access" class="" classes="sig sig-object py" fullname="check_course_access" ids="openedx.core.djangoapps.embargo.api.check_course_access" module="openedx.core.djangoapps.embargo.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_course_access</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ip_addresses</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">url</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Check is the user with this ip_addresses chain has access to the given course</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> – Location of the course the user is trying to access.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – The user making the request. Can be None, in which case the user’s profile country will not be checked.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>ip_addresses</literal_strong> – The full external chain of IP addresses of the request.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>url</literal_strong> – The URL the user is trying to access. Used in log messages.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if the user has access to the course; False otherwise</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_embargo_response()\ (in\ module\ openedx.core.djangoapps.embargo.api)',\ 'openedx.core.djangoapps.embargo.api.get_embargo_response',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_embargo_response()" _toc_parts="openedx.core.djangoapps.embargo.api get_embargo_response" class="" classes="sig sig-object py" fullname="get_embargo_response" ids="openedx.core.djangoapps.embargo.api.get_embargo_response" module="openedx.core.djangoapps.embargo.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_embargo_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Response<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Check whether any country access rules block the user from enrollment.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request</literal_strong> – The request object</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> – The requested course ID</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – The current user object</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Response of the embargo page if embargoed, None if not</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'message_url_path()\ (in\ module\ openedx.core.djangoapps.embargo.api)',\ 'openedx.core.djangoapps.embargo.api.message_url_path',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="message_url_path()" _toc_parts="openedx.core.djangoapps.embargo.api message_url_path" class="" classes="sig sig-object py" fullname="message_url_path" ids="openedx.core.djangoapps.embargo.api.message_url_path" module="openedx.core.djangoapps.embargo.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">message_url_path</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Determine the URL path for the message explaining why the user was blocked.</paragraph>
                    <paragraph>This is configured per-course.  See <title_reference>RestrictedCourse</title_reference> in the <title_reference>embargo.models</title_reference>
                        module for more details.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> – The location of the course.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>access_point</literal_strong> – How the user was trying to access the course. Can be either “enrollment” or “courseware”.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The URL path to a page explaining why the user was blocked.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint" reftitle="openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint"><literal_strong>InvalidAccessPoint</literal_strong></reference> – Raised if access_point is not a supported value.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'redirect_if_blocked()\ (in\ module\ openedx.core.djangoapps.embargo.api)',\ 'openedx.core.djangoapps.embargo.api.redirect_if_blocked',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="redirect_if_blocked()" _toc_parts="openedx.core.djangoapps.embargo.api redirect_if_blocked" class="" classes="sig sig-object py" fullname="redirect_if_blocked" ids="openedx.core.djangoapps.embargo.api.redirect_if_blocked" module="openedx.core.djangoapps.embargo.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">redirect_if_blocked</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">'enrollment'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Redirect if the user does not have access to the course.</paragraph>
                    <paragraph>Even if the user would normally be blocked, if the given access_point is ‘courseware’ and the course has enabled
                        the <title_reference>is_disabled_access_check</title_reference> flag, then the user can still view that course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request</literal_strong> – The current request to be checked.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> – Location of the course the user is trying to access.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>access_point</literal_strong> – Type of page being accessed (e.g. ‘courseware’, ‘enrollment’, etc)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> – User to check for (uses request.user if None)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>If blocked, a URL path to a page explaining why the user was blocked. Else None.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.exceptions openedx-core-djangoapps-embargo-exceptions-module" names="openedx.core.djangoapps.embargo.exceptions\ module">
            <title>openedx.core.djangoapps.embargo.exceptions module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.exceptions',\ 'module-openedx.core.djangoapps.embargo.exceptions',\ '',\ None]"></index>
            <paragraph>Exceptions for the embargo app.</paragraph>
            <index entries="['single',\ 'InvalidAccessPoint',\ 'openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="InvalidAccessPoint" _toc_parts="openedx.core.djangoapps.embargo.exceptions InvalidAccessPoint" class="" classes="sig sig-object py" fullname="InvalidAccessPoint" ids="openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint" module="openedx.core.djangoapps.embargo.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">InvalidAccessPoint</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>The requested access point is not supported.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.forms openedx-core-djangoapps-embargo-forms-module" names="openedx.core.djangoapps.embargo.forms\ module">
            <title>openedx.core.djangoapps.embargo.forms module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.forms',\ 'module-openedx.core.djangoapps.embargo.forms',\ '',\ None]"></index>
            <paragraph>Defines forms for providing validation of embargo admin details.</paragraph>
            <index entries="['single',\ 'IPFilterForm\ (class\ in\ openedx.core.djangoapps.embargo.forms)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="IPFilterForm" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm" class="" classes="sig sig-object py" fullname="IPFilterForm" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">IPFilterForm</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">files=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">auto_id='id_%s'</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prefix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">initial=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_class=&lt;class 'django.forms.utils.ErrorList'&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">label_suffix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">empty_permitted=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_required_attribute=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">renderer=None</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ModelForm</literal></paragraph>
                    <paragraph>Form validating entry of IP addresses</paragraph>
                    <index entries="['single',\ 'IPFilterForm.Meta\ (class\ in\ openedx.core.djangoapps.embargo.forms)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="IPFilterForm.Meta" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm Meta" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.Meta" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">Meta</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <index entries="['single',\ 'fields\ (openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta.fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="IPFilterForm.Meta.fields" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm Meta fields" class="IPFilterForm.Meta" classes="sig sig-object py" fullname="IPFilterForm.Meta.fields" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta.fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'__all__'</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'model\ (openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta.model',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="IPFilterForm.Meta.model" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm Meta model" class="IPFilterForm.Meta" classes="sig sig-object py" fullname="IPFilterForm.Meta.model" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.Meta.model" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">model</desc_name></desc_signature>
                                <desc_content>
                                    <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.embargo.models.IPFilter" reftitle="openedx.core.djangoapps.embargo.models.IPFilter"><literal classes="xref py py-class">IPFilter</literal></reference></paragraph>
                                </desc_content>
                            </desc>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'base_fields\ (openedx.core.djangoapps.embargo.forms.IPFilterForm\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.base_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilterForm.base_fields" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm base_fields" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.base_fields" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.base_fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">base_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'blacklist': &lt;django.forms.fields.CharField object&gt;, 'enabled': &lt;django.forms.fields.BooleanField object&gt;, 'whitelist': &lt;django.forms.fields.CharField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_blacklist()\ (openedx.core.djangoapps.embargo.forms.IPFilterForm\ method)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.clean_blacklist',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IPFilterForm.clean_blacklist()" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm clean_blacklist" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.clean_blacklist" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.clean_blacklist" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_blacklist</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates the blacklist</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_whitelist()\ (openedx.core.djangoapps.embargo.forms.IPFilterForm\ method)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.clean_whitelist',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IPFilterForm.clean_whitelist()" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm clean_whitelist" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.clean_whitelist" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.clean_whitelist" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_whitelist</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates the whitelist</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'declared_fields\ (openedx.core.djangoapps.embargo.forms.IPFilterForm\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.declared_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilterForm.declared_fields" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm declared_fields" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.declared_fields" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.declared_fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">declared_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'media\ (openedx.core.djangoapps.embargo.forms.IPFilterForm\ property)',\ 'openedx.core.djangoapps.embargo.forms.IPFilterForm.media',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="IPFilterForm.media" _toc_parts="openedx.core.djangoapps.embargo.forms IPFilterForm media" class="IPFilterForm" classes="sig sig-object py" fullname="IPFilterForm.media" ids="openedx.core.djangoapps.embargo.forms.IPFilterForm.media" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">media</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return all media required to render the widgets on this form.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'RestrictedCourseForm\ (class\ in\ openedx.core.djangoapps.embargo.forms)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RestrictedCourseForm" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm" class="" classes="sig sig-object py" fullname="RestrictedCourseForm" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">RestrictedCourseForm</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">files=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">auto_id='id_%s'</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prefix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">initial=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_class=&lt;class 'django.forms.utils.ErrorList'&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">label_suffix=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">empty_permitted=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">use_required_attribute=None</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">renderer=None</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ModelForm</literal></paragraph>
                    <paragraph>Validate course keys for the RestrictedCourse model.</paragraph>
                    <paragraph>The default behavior in Django admin is to:
                        * Save course keys for courses that do not exist.
                        * Return a 500 response if the course key format is invalid.</paragraph>
                    <paragraph>Using this form ensures that we display a user-friendly
                        error message instead.</paragraph>
                    <index entries="['single',\ 'RestrictedCourseForm.Meta\ (class\ in\ openedx.core.djangoapps.embargo.forms)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="RestrictedCourseForm.Meta" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm Meta" class="RestrictedCourseForm" classes="sig sig-object py" fullname="RestrictedCourseForm.Meta" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">Meta</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <index entries="['single',\ 'fields\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta.fields',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="RestrictedCourseForm.Meta.fields" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm Meta fields" class="RestrictedCourseForm.Meta" classes="sig sig-object py" fullname="RestrictedCourseForm.Meta.fields" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta.fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'__all__'</desc_annotation></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'model\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta.model',\ '',\ None]"></index>
                            <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                                <desc_signature _toc_name="RestrictedCourseForm.Meta.model" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm Meta model" class="RestrictedCourseForm.Meta" classes="sig sig-object py" fullname="RestrictedCourseForm.Meta.model" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.Meta.model" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">model</desc_name></desc_signature>
                                <desc_content>
                                    <paragraph>alias of <reference internal="True" refid="openedx.core.djangoapps.embargo.models.RestrictedCourse" reftitle="openedx.core.djangoapps.embargo.models.RestrictedCourse"><literal classes="xref py py-class">RestrictedCourse</literal></reference></paragraph>
                                </desc_content>
                            </desc>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'base_fields\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.base_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourseForm.base_fields" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm base_fields" class="RestrictedCourseForm" classes="sig sig-object py" fullname="RestrictedCourseForm.base_fields" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.base_fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">base_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'access_msg_key': &lt;django.forms.fields.TypedChoiceField object&gt;, 'course_key': &lt;django.forms.fields.CharField object&gt;, 'disable_access_check': &lt;django.forms.fields.BooleanField object&gt;, 'enroll_msg_key': &lt;django.forms.fields.TypedChoiceField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_course_key()\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm\ method)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.clean_course_key',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourseForm.clean_course_key()" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm clean_course_key" class="RestrictedCourseForm" classes="sig sig-object py" fullname="RestrictedCourseForm.clean_course_key" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.clean_course_key" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_course_key</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validate the course key.</paragraph>
                            <paragraph>Checks that the key format is valid and that
                                the course exists.  If not, displays an error message.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>field_name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The name of the field to validate.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>CourseKey</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'declared_fields\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm\ attribute)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.declared_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourseForm.declared_fields" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm declared_fields" class="RestrictedCourseForm" classes="sig sig-object py" fullname="RestrictedCourseForm.declared_fields" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.declared_fields" module="openedx.core.djangoapps.embargo.forms"><desc_name classes="sig-name descname" xml:space="preserve">declared_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'media\ (openedx.core.djangoapps.embargo.forms.RestrictedCourseForm\ property)',\ 'openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.media',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="RestrictedCourseForm.media" _toc_parts="openedx.core.djangoapps.embargo.forms RestrictedCourseForm media" class="RestrictedCourseForm" classes="sig sig-object py" fullname="RestrictedCourseForm.media" ids="openedx.core.djangoapps.embargo.forms.RestrictedCourseForm.media" module="openedx.core.djangoapps.embargo.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">media</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return all media required to render the widgets on this form.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.messages openedx-core-djangoapps-embargo-messages-module" names="openedx.core.djangoapps.embargo.messages\ module">
            <title>openedx.core.djangoapps.embargo.messages module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.messages',\ 'module-openedx.core.djangoapps.embargo.messages',\ '',\ None]"></index>
            <paragraph>Define messages for restricted courses.</paragraph>
            <paragraph>These messages are displayed to users when they are blocked
                from either enrolling in or accessing a course.</paragraph>
            <index entries="['single',\ 'BlockedMessage\ (class\ in\ openedx.core.djangoapps.embargo.messages)',\ 'openedx.core.djangoapps.embargo.messages.BlockedMessage',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockedMessage" _toc_parts="openedx.core.djangoapps.embargo.messages BlockedMessage" class="" classes="sig sig-object py" fullname="BlockedMessage" ids="openedx.core.djangoapps.embargo.messages.BlockedMessage" module="openedx.core.djangoapps.embargo.messages"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.messages.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockedMessage</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">description</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">template</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">tuple</literal></paragraph>
                    <index entries="['single',\ 'description\ (openedx.core.djangoapps.embargo.messages.BlockedMessage\ attribute)',\ 'openedx.core.djangoapps.embargo.messages.BlockedMessage.description',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockedMessage.description" _toc_parts="openedx.core.djangoapps.embargo.messages BlockedMessage description" class="BlockedMessage" classes="sig sig-object py" fullname="BlockedMessage.description" ids="openedx.core.djangoapps.embargo.messages.BlockedMessage.description" module="openedx.core.djangoapps.embargo.messages"><desc_name classes="sig-name descname" xml:space="preserve">description</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Alias for field number 0</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'template\ (openedx.core.djangoapps.embargo.messages.BlockedMessage\ attribute)',\ 'openedx.core.djangoapps.embargo.messages.BlockedMessage.template',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockedMessage.template" _toc_parts="openedx.core.djangoapps.embargo.messages BlockedMessage template" class="BlockedMessage" classes="sig sig-object py" fullname="BlockedMessage.template" ids="openedx.core.djangoapps.embargo.messages.BlockedMessage.template" module="openedx.core.djangoapps.embargo.messages"><desc_name classes="sig-name descname" xml:space="preserve">template</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Alias for field number 1</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.middleware openedx-core-djangoapps-embargo-middleware-module" names="openedx.core.djangoapps.embargo.middleware\ module">
            <title>openedx.core.djangoapps.embargo.middleware module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.middleware',\ 'module-openedx.core.djangoapps.embargo.middleware',\ '',\ None]"></index>
            <paragraph>Middleware for embargoing site and courses.</paragraph>
            <paragraph>IMPORTANT NOTE: This code WILL NOT WORK if you have a misconfigured proxy
                server.  If you are configuring embargo functionality, or if you are
                experiencing mysterious problems with embargoing, please check that your
                reverse proxy is setting any of the well known client IP address headers (ex.,
                HTTP_X_FORWARDED_FOR).</paragraph>
            <paragraph>This middleware allows you to:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Embargoing courses (access restriction by courses)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Embargoing site (access restriction of the main site)</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Embargo can restrict by states and whitelist/blacklist (IP Addresses
                (ie. 10.0.0.0), Networks (ie. 10.0.0.0/24)), or the user profile country.</paragraph>
            <paragraph>Usage:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=")">
                <list_item>
                    <paragraph>Enable embargo by setting <title_reference>settings.FEATURES[‘EMBARGO’]</title_reference> to True.</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>In Django admin, create a new <title_reference>IPFilter</title_reference> model to block or whitelist</term>
                            <definition>
                                <paragraph>an IP address from accessing the site.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>In Django admin, create a new <title_reference>RestrictedCourse</title_reference> model and</term>
                            <definition>
                                <paragraph>configure a whitelist or blacklist of countries for that course.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </enumerated_list>
            <index entries="['single',\ 'EmbargoMiddleware\ (class\ in\ openedx.core.djangoapps.embargo.middleware)',\ 'openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="EmbargoMiddleware" _toc_parts="openedx.core.djangoapps.embargo.middleware EmbargoMiddleware" class="" classes="sig sig-object py" fullname="EmbargoMiddleware" ids="openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware" module="openedx.core.djangoapps.embargo.middleware"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.middleware.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">EmbargoMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/http/middleware/#django.utils.deprecation.MiddlewareMixin"><literal classes="xref py py-class">MiddlewareMixin</literal></reference></paragraph>
                    <paragraph>Middleware for embargoing site and courses.</paragraph>
                    <index entries="['single',\ 'ALLOW_URL_PATTERNS\ (openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware\ attribute)',\ 'openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.ALLOW_URL_PATTERNS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoMiddleware.ALLOW_URL_PATTERNS" _toc_parts="openedx.core.djangoapps.embargo.middleware EmbargoMiddleware ALLOW_URL_PATTERNS" class="EmbargoMiddleware" classes="sig sig-object py" fullname="EmbargoMiddleware.ALLOW_URL_PATTERNS" ids="openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.ALLOW_URL_PATTERNS" module="openedx.core.djangoapps.embargo.middleware"><desc_name classes="sig-name descname" xml:space="preserve">ALLOW_URL_PATTERNS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>[re.compile('^/embargo/blocked-message/'), re.compile('^/admin/')]</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country_access_rules()\ (openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware\ method)',\ 'openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.country_access_rules',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmbargoMiddleware.country_access_rules()" _toc_parts="openedx.core.djangoapps.embargo.middleware EmbargoMiddleware country_access_rules" class="EmbargoMiddleware" classes="sig sig-object py" fullname="EmbargoMiddleware.country_access_rules" ids="openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.country_access_rules" module="openedx.core.djangoapps.embargo.middleware"><desc_name classes="sig-name descname" xml:space="preserve">country_access_rules</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Request</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Response<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Check the country access rules for a given course.
                                Applies only to courseware URLs.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>request</literal_strong> – The request to validate against the embargo rules</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>HttpResponse or None</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'process_request()\ (openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware\ method)',\ 'openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.process_request',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmbargoMiddleware.process_request()" _toc_parts="openedx.core.djangoapps.embargo.middleware EmbargoMiddleware process_request" class="EmbargoMiddleware" classes="sig sig-object py" fullname="EmbargoMiddleware.process_request" ids="openedx.core.djangoapps.embargo.middleware.EmbargoMiddleware.process_request" module="openedx.core.djangoapps.embargo.middleware"><desc_name classes="sig-name descname" xml:space="preserve">process_request</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Request</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Response<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Block requests based on embargo rules.</paragraph>
                            <paragraph>This will perform the following checks:</paragraph>
                            <enumerated_list enumtype="arabic" prefix="" suffix=")">
                                <list_item>
                                    <paragraph>If the user’s IP address is blacklisted, block.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>If the user’s IP address is whitelisted, allow.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>If the user’s country (inferred from their IP address) is blocked for</term>
                                            <definition>
                                                <paragraph>a courseware page, block.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>If the user’s country (retrieved from the user’s profile) is blocked</term>
                                            <definition>
                                                <paragraph>for a courseware page, block.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph>Allow access.</paragraph>
                                </list_item>
                            </enumerated_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.models openedx-core-djangoapps-embargo-models-module" names="openedx.core.djangoapps.embargo.models\ module">
            <title>openedx.core.djangoapps.embargo.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.models',\ 'module-openedx.core.djangoapps.embargo.models',\ '',\ None]"></index>
            <paragraph>Models for embargoing visits to certain courses by IP address.</paragraph>
            <paragraph>WE’RE USING MIGRATIONS!</paragraph>
            <paragraph>If you make changes to this model, be sure to create an appropriate migration
                file and check it in at the same time as your model changes. To do that,</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Go to the edx-platform dir</paragraph>
                </list_item>
                <list_item>
                    <paragraph>./manage.py lms schemamigration embargo –auto description_of_your_change</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Add the migration file created in edx-platform/openedx/core/djangoapps/embargo/migrations/</paragraph>
                </list_item>
            </enumerated_list>
            <index entries="['single',\ 'Country\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.Country',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Country" _toc_parts="openedx.core.djangoapps.embargo.models Country" class="" classes="sig sig-object py" fullname="Country" ids="openedx.core.djangoapps.embargo.models.Country" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Country</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Representation of a country.</paragraph>
                    <paragraph>This is used to define country-based access rules.
                        There is a data migration that creates entries for
                        each country code.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'Country.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.Country.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="Country.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models Country DoesNotExist" class="Country" classes="sig sig-object py" fullname="Country.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.Country.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'Country.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.Country.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="Country.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models Country MultipleObjectsReturned" class="Country" classes="sig sig-object py" fullname="Country.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.Country.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country\ (openedx.core.djangoapps.embargo.models.Country\ attribute)',\ 'openedx.core.djangoapps.embargo.models.Country.country',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Country.country" _toc_parts="openedx.core.djangoapps.embargo.models Country country" class="Country" classes="sig sig-object py" fullname="Country.country" ids="openedx.core.djangoapps.embargo.models.Country.country" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">country</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A descriptor for country fields on a model instance. Returns a Country when
                                accessed so you can do things like:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">&gt;&gt;&gt; from people import Person
&gt;&gt;&gt; person = Person.object.get(name='Chris')

&gt;&gt;&gt; person.country.name
'New Zealand'

&gt;&gt;&gt; person.country.flag
'/static/flags/nz.gif'</literal_block>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'countryaccessrule_set\ (openedx.core.djangoapps.embargo.models.Country\ attribute)',\ 'openedx.core.djangoapps.embargo.models.Country.countryaccessrule_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Country.countryaccessrule_set" _toc_parts="openedx.core.djangoapps.embargo.models Country countryaccessrule_set" class="Country" classes="sig sig-object py" fullname="Country.countryaccessrule_set" ids="openedx.core.djangoapps.embargo.models.Country.countryaccessrule_set" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">countryaccessrule_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_country_display()\ (openedx.core.djangoapps.embargo.models.Country\ method)',\ 'openedx.core.djangoapps.embargo.models.Country.get_country_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="Country.get_country_display()" _toc_parts="openedx.core.djangoapps.embargo.models Country get_country_display" class="Country" classes="sig sig-object py" fullname="Country.get_country_display" ids="openedx.core.djangoapps.embargo.models.Country.get_country_display" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_country_display</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django_countries.fields.CountryField: country&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'globalrestrictedcountry_set\ (openedx.core.djangoapps.embargo.models.Country\ attribute)',\ 'openedx.core.djangoapps.embargo.models.Country.globalrestrictedcountry_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Country.globalrestrictedcountry_set" _toc_parts="openedx.core.djangoapps.embargo.models Country globalrestrictedcountry_set" class="Country" classes="sig sig-object py" fullname="Country.globalrestrictedcountry_set" ids="openedx.core.djangoapps.embargo.models.Country.globalrestrictedcountry_set" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">globalrestrictedcountry_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.Country\ attribute)',\ 'openedx.core.djangoapps.embargo.models.Country.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Country.id" _toc_parts="openedx.core.djangoapps.embargo.models Country id" class="Country" classes="sig sig-object py" fullname="Country.id" ids="openedx.core.djangoapps.embargo.models.Country.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.Country\ attribute)',\ 'openedx.core.djangoapps.embargo.models.Country.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="Country.objects" _toc_parts="openedx.core.djangoapps.embargo.models Country objects" class="Country" classes="sig sig-object py" fullname="Country.objects" ids="openedx.core.djangoapps.embargo.models.Country.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CountryAccessRule\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CountryAccessRule" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule" class="" classes="sig sig-object py" fullname="CountryAccessRule" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CountryAccessRule</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Course access rule based on the user’s country.</paragraph>
                    <paragraph>The rule applies to a particular course-country pair.
                        Countries can either be whitelisted or blacklisted,
                        but not both.</paragraph>
                    <paragraph>To determine whether a user has access to a course
                        based on the user’s country:</paragraph>
                    <paragraph>1) Retrieve the list of whitelisted countries for the course.
                        (If there aren’t any, then include every possible country.)</paragraph>
                    <paragraph>2) From the initial list, remove all blacklisted countries
                        for the course.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'ALL_COUNTRIES\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.ALL_COUNTRIES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.ALL_COUNTRIES" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule ALL_COUNTRIES" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.ALL_COUNTRIES" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.ALL_COUNTRIES" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">ALL_COUNTRIES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'XK', 'YE', 'YT', 'ZA', 'ZM', 'ZW'}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'BLACKLIST_RULE\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.BLACKLIST_RULE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.BLACKLIST_RULE" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule BLACKLIST_RULE" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.BLACKLIST_RULE" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.BLACKLIST_RULE" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">BLACKLIST_RULE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'blacklist'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CACHE_KEY\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.CACHE_KEY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.CACHE_KEY" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule CACHE_KEY" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.CACHE_KEY" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.CACHE_KEY" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">CACHE_KEY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'embargo.allowed_countries.{course_key}'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CountryAccessRule.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CountryAccessRule.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule DoesNotExist" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CountryAccessRule.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CountryAccessRule.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule MultipleObjectsReturned" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RULE_TYPE_CHOICES\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.RULE_TYPE_CHOICES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.RULE_TYPE_CHOICES" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule RULE_TYPE_CHOICES" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.RULE_TYPE_CHOICES" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.RULE_TYPE_CHOICES" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">RULE_TYPE_CHOICES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('whitelist', 'Whitelist (allow only these countries)'), ('blacklist', 'Blacklist (block these countries)'))</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WHITELIST_RULE\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.WHITELIST_RULE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.WHITELIST_RULE" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule WHITELIST_RULE" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.WHITELIST_RULE" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.WHITELIST_RULE" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">WHITELIST_RULE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'whitelist'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'check_country_access()\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.check_country_access',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CountryAccessRule.check_country_access()" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule check_country_access" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.check_country_access" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.check_country_access" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">check_country_access</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">country</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Check if the country is either in whitelist or blacklist of countries for the course_id</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> – course to look for</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>country</literal_strong> – A 2 characters code of country</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>True if country found in allowed country, otherwise check given country exists in list</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.country',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.country" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule country" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.country" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.country" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">country</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country_id\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.country_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.country_id" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule country_id" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.country_id" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.country_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">country_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_rule_type_display()\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ method)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.get_rule_type_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CountryAccessRule.get_rule_type_display()" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule get_rule_type_display" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.get_rule_type_display" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.get_rule_type_display" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_rule_type_display</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: rule_type&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.id" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule id" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.id" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'invalidate_cache_for_course()\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.invalidate_cache_for_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CountryAccessRule.invalidate_cache_for_course()" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule invalidate_cache_for_course" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.invalidate_cache_for_course" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.invalidate_cache_for_course" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">invalidate_cache_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Invalidate the cache.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.objects" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule objects" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.objects" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'restricted_course\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.restricted_course',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.restricted_course" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule restricted_course" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.restricted_course" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.restricted_course" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">restricted_course</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'restricted_course_id\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.restricted_course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.restricted_course_id" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule restricted_course_id" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.restricted_course_id" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.restricted_course_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">restricted_course_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'rule_type\ (openedx.core.djangoapps.embargo.models.CountryAccessRule\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CountryAccessRule.rule_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CountryAccessRule.rule_type" _toc_parts="openedx.core.djangoapps.embargo.models CountryAccessRule rule_type" class="CountryAccessRule" classes="sig sig-object py" fullname="CountryAccessRule.rule_type" ids="openedx.core.djangoapps.embargo.models.CountryAccessRule.rule_type" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">rule_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseAccessRuleHistory\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseAccessRuleHistory" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory" class="" classes="sig sig-object py" fullname="CourseAccessRuleHistory" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseAccessRuleHistory</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>History of course access rule changes.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'DELETED_PLACEHOLDER\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.DELETED_PLACEHOLDER',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.DELETED_PLACEHOLDER" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory DELETED_PLACEHOLDER" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.DELETED_PLACEHOLDER" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.DELETED_PLACEHOLDER" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">DELETED_PLACEHOLDER</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'DELETED'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseAccessRuleHistory.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseAccessRuleHistory.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory DoesNotExist" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CourseAccessRuleHistory.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CourseAccessRuleHistory.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory MultipleObjectsReturned" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_key\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.course_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.course_key" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory course_key" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.course_key" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.course_key" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">course_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_timestamp()\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ method)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.get_next_by_timestamp',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessRuleHistory.get_next_by_timestamp()" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory get_next_by_timestamp" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.get_next_by_timestamp" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.get_next_by_timestamp" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_timestamp</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: timestamp&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_timestamp()\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ method)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.get_previous_by_timestamp',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessRuleHistory.get_previous_by_timestamp()" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory get_previous_by_timestamp" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.get_previous_by_timestamp" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.get_previous_by_timestamp" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_timestamp</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: timestamp&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.id" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory id" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.id" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.objects" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory objects" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.objects" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'save_snapshot()\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.save_snapshot',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessRuleHistory.save_snapshot()" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory save_snapshot" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.save_snapshot" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.save_snapshot" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">save_snapshot</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">restricted_course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">deleted</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Save a snapshot of access rules for a course.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>restricted_course</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.embargo.models.RestrictedCourse" reftitle="openedx.core.djangoapps.embargo.models.RestrictedCourse"><literal_emphasis>RestrictedCourse</literal_emphasis></reference>)</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Keyword Arguments</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>deleted</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – If True, the restricted course
                                            is about to be deleted.  Create a placeholder
                                            snapshot recording that the course and all its
                                            rules was deleted.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>None</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'snapshot\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.snapshot" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory snapshot" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.snapshot" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">snapshot</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'snapshot_post_delete_receiver()\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ static\ method)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot_post_delete_receiver',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessRuleHistory.snapshot_post_delete_receiver()" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory snapshot_post_delete_receiver" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.snapshot_post_delete_receiver" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot_post_delete_receiver" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">snapshot_post_delete_receiver</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a snapshot of course access rules when rules are deleted.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'snapshot_post_save_receiver()\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ static\ method)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot_post_save_receiver',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessRuleHistory.snapshot_post_save_receiver()" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory snapshot_post_save_receiver" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.snapshot_post_save_receiver" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.snapshot_post_save_receiver" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">static</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">snapshot_post_save_receiver</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a snapshot of course access rules when the rules are updated.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'timestamp\ (openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory\ attribute)',\ 'openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.timestamp',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessRuleHistory.timestamp" _toc_parts="openedx.core.djangoapps.embargo.models CourseAccessRuleHistory timestamp" class="CourseAccessRuleHistory" classes="sig sig-object py" fullname="CourseAccessRuleHistory.timestamp" ids="openedx.core.djangoapps.embargo.models.CourseAccessRuleHistory.timestamp" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">timestamp</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'EmbargoedCourse\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="EmbargoedCourse" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse" class="" classes="sig sig-object py" fullname="EmbargoedCourse" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">EmbargoedCourse</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Enable course embargo on a course-by-course basis.</paragraph>
                    <paragraph>Deprecated by <title_reference>RestrictedCourse</title_reference></paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'EmbargoedCourse.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="EmbargoedCourse.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse DoesNotExist" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EmbargoedCourse.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="EmbargoedCourse.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse MultipleObjectsReturned" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.core.djangoapps.embargo.models.EmbargoedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedCourse.course_id" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse course_id" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.course_id" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.course_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'embargoed\ (openedx.core.djangoapps.embargo.models.EmbargoedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.embargoed',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedCourse.embargoed" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse embargoed" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.embargoed" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.embargoed" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">embargoed</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.EmbargoedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedCourse.id" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse id" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.id" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_embargoed()\ (openedx.core.djangoapps.embargo.models.EmbargoedCourse\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.is_embargoed',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmbargoedCourse.is_embargoed()" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse is_embargoed" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.is_embargoed" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.is_embargoed" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_embargoed</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns whether or not the given course id is embargoed.</paragraph>
                            <paragraph>If course has not been explicitly embargoed, returns False.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.EmbargoedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedCourse.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedCourse.objects" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedCourse objects" class="EmbargoedCourse" classes="sig sig-object py" fullname="EmbargoedCourse.objects" ids="openedx.core.djangoapps.embargo.models.EmbargoedCourse.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;openedx.core.djangoapps.xmodule_django.models.NoneToEmptyManager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'EmbargoedState\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="EmbargoedState" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState" class="" classes="sig sig-object py" fullname="EmbargoedState" ids="openedx.core.djangoapps.embargo.models.EmbargoedState" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">EmbargoedState</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ConfigurationModel</literal></paragraph>
                    <paragraph>Register countries to be embargoed.</paragraph>
                    <paragraph>Deprecated by <title_reference>Country</title_reference>.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'EmbargoedState.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="EmbargoedState.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState DoesNotExist" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'EmbargoedState.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="EmbargoedState.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState MultipleObjectsReturned" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'change_date\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.change_date',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.change_date" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState change_date" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.change_date" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">change_date</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.changed_by',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.changed_by" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState changed_by" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.changed_by" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.changed_by" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by_id\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.changed_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.changed_by_id" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState changed_by_id" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.changed_by_id" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.changed_by_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'embargoed_countries\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.embargoed_countries',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.embargoed_countries" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState embargoed_countries" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.embargoed_countries" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.embargoed_countries" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">embargoed_countries</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'embargoed_countries_list\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ property)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.embargoed_countries_list',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="EmbargoedState.embargoed_countries_list" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState embargoed_countries_list" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.embargoed_countries_list" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.embargoed_countries_list" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">embargoed_countries_list</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return a list of upper case country codes</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.enabled" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState enabled" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.enabled" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.enabled" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_change_date()\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ method)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.get_next_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmbargoedState.get_next_by_change_date()" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState get_next_by_change_date" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.get_next_by_change_date" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.get_next_by_change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_change_date()\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ method)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.get_previous_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EmbargoedState.get_previous_by_change_date()" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState get_previous_by_change_date" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.get_previous_by_change_date" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.get_previous_by_change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.EmbargoedState\ attribute)',\ 'openedx.core.djangoapps.embargo.models.EmbargoedState.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="EmbargoedState.id" _toc_parts="openedx.core.djangoapps.embargo.models EmbargoedState id" class="EmbargoedState" classes="sig sig-object py" fullname="EmbargoedState.id" ids="openedx.core.djangoapps.embargo.models.EmbargoedState.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'GlobalRestrictedCountry\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="GlobalRestrictedCountry" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry" class="" classes="sig sig-object py" fullname="GlobalRestrictedCountry" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">GlobalRestrictedCountry</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Model to restrict access to specific countries globally.</paragraph>
                    <index entries="['single',\ 'CACHE_KEY\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ attribute)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.CACHE_KEY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalRestrictedCountry.CACHE_KEY" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry CACHE_KEY" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.CACHE_KEY" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.CACHE_KEY" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">CACHE_KEY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'embargo.global.restricted_countries'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GlobalRestrictedCountry.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="GlobalRestrictedCountry.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry DoesNotExist" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'GlobalRestrictedCountry.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="GlobalRestrictedCountry.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry MultipleObjectsReturned" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ attribute)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.country',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalRestrictedCountry.country" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry country" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.country" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.country" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">country</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'country_id\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ attribute)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.country_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalRestrictedCountry.country_id" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry country_id" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.country_id" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.country_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">country_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete()\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ method)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalRestrictedCountry.delete()" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry delete" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.delete" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.delete" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override delete method to update cache on deletion.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_countries()\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.get_countries',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalRestrictedCountry.get_countries()" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry get_countries" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.get_countries" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.get_countries" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_countries</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Retrieve the set of restricted country codes from the cache or refresh it if not available.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>A set of restricted country codes.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>set</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ attribute)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalRestrictedCountry.id" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry id" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.id" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_country_restricted()\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.is_country_restricted',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalRestrictedCountry.is_country_restricted()" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry is_country_restricted" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.is_country_restricted" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.is_country_restricted" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_country_restricted</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">country_code</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Check if the given country code is restricted.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>country_code</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The country code to check.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>True if the country is restricted, False otherwise.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>bool</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ attribute)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="GlobalRestrictedCountry.objects" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry objects" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.objects" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'save()\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ method)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.save',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalRestrictedCountry.save()" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry save" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.save" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.save" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">save</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override save method to update cache on insert/update.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_cache()\ (openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.update_cache',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="GlobalRestrictedCountry.update_cache()" _toc_parts="openedx.core.djangoapps.embargo.models GlobalRestrictedCountry update_cache" class="GlobalRestrictedCountry" classes="sig sig-object py" fullname="GlobalRestrictedCountry.update_cache" ids="openedx.core.djangoapps.embargo.models.GlobalRestrictedCountry.update_cache" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_cache</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update the cache with the latest restricted country codes.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'IPFilter\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.IPFilter',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="IPFilter" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter" class="" classes="sig sig-object py" fullname="IPFilter" ids="openedx.core.djangoapps.embargo.models.IPFilter" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">IPFilter</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ConfigurationModel</literal></paragraph>
                    <paragraph>Register specific IP addresses to explicitly block or unblock.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'IPFilter.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.IPFilter.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="IPFilter.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter DoesNotExist" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.IPFilter.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'IPFilter.IPFilterList\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.IPFilterList',\ '',\ None]"></index>
                    <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                        <desc_signature _toc_name="IPFilter.IPFilterList" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter IPFilterList" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.IPFilterList" ids="openedx.core.djangoapps.embargo.models.IPFilter.IPFilterList" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">IPFilterList</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ips</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                            <paragraph>Represent a list of IP addresses with support of networks.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'IPFilter.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.IPFilter.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="IPFilter.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter MultipleObjectsReturned" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.IPFilter.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'blacklist\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.blacklist',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.blacklist" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter blacklist" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.blacklist" ids="openedx.core.djangoapps.embargo.models.IPFilter.blacklist" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">blacklist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'blacklist_ips\ (openedx.core.djangoapps.embargo.models.IPFilter\ property)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.blacklist_ips',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="IPFilter.blacklist_ips" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter blacklist_ips" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.blacklist_ips" ids="openedx.core.djangoapps.embargo.models.IPFilter.blacklist_ips" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">blacklist_ips</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return a list of valid IP addresses to blacklist</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'change_date\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.change_date',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.change_date" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter change_date" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.change_date" ids="openedx.core.djangoapps.embargo.models.IPFilter.change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">change_date</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.changed_by',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.changed_by" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter changed_by" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.changed_by" ids="openedx.core.djangoapps.embargo.models.IPFilter.changed_by" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by_id\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.changed_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.changed_by_id" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter changed_by_id" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.changed_by_id" ids="openedx.core.djangoapps.embargo.models.IPFilter.changed_by_id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.enabled" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter enabled" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.enabled" ids="openedx.core.djangoapps.embargo.models.IPFilter.enabled" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_change_date()\ (openedx.core.djangoapps.embargo.models.IPFilter\ method)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.get_next_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IPFilter.get_next_by_change_date()" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter get_next_by_change_date" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.get_next_by_change_date" ids="openedx.core.djangoapps.embargo.models.IPFilter.get_next_by_change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_change_date()\ (openedx.core.djangoapps.embargo.models.IPFilter\ method)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.get_previous_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IPFilter.get_previous_by_change_date()" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter get_previous_by_change_date" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.get_previous_by_change_date" ids="openedx.core.djangoapps.embargo.models.IPFilter.get_previous_by_change_date" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.id" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter id" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.id" ids="openedx.core.djangoapps.embargo.models.IPFilter.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'whitelist\ (openedx.core.djangoapps.embargo.models.IPFilter\ attribute)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.whitelist',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="IPFilter.whitelist" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter whitelist" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.whitelist" ids="openedx.core.djangoapps.embargo.models.IPFilter.whitelist" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">whitelist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'whitelist_ips\ (openedx.core.djangoapps.embargo.models.IPFilter\ property)',\ 'openedx.core.djangoapps.embargo.models.IPFilter.whitelist_ips',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="IPFilter.whitelist_ips" _toc_parts="openedx.core.djangoapps.embargo.models IPFilter whitelist_ips" class="IPFilter" classes="sig sig-object py" fullname="IPFilter.whitelist_ips" ids="openedx.core.djangoapps.embargo.models.IPFilter.whitelist_ips" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">whitelist_ips</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return a list of valid IP addresses to whitelist</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'RestrictedCourse\ (class\ in\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RestrictedCourse" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse" class="" classes="sig sig-object py" fullname="RestrictedCourse" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">RestrictedCourse</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Course with access restrictions.</paragraph>
                    <paragraph>Restricted courses can block users at two points:</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=")">
                        <list_item>
                            <paragraph>When enrolling in a course.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>When attempting to access a course the user is already enrolled in.</paragraph>
                        </list_item>
                    </enumerated_list>
                    <paragraph>The second case can occur when new restrictions
                        are put into place; for example, when new countries
                        are embargoed.</paragraph>
                    <paragraph>Restricted courses can be configured to display
                        messages to users when they are blocked.
                        These displayed on pages served by the embargo app.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'COURSEWARE_MSG_KEY_CHOICES\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.COURSEWARE_MSG_KEY_CHOICES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.COURSEWARE_MSG_KEY_CHOICES" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse COURSEWARE_MSG_KEY_CHOICES" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.COURSEWARE_MSG_KEY_CHOICES" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.COURSEWARE_MSG_KEY_CHOICES" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">COURSEWARE_MSG_KEY_CHOICES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('default', 'Default'), ('embargo', 'Embargo'))</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'COURSE_LIST_CACHE_KEY\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.COURSE_LIST_CACHE_KEY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.COURSE_LIST_CACHE_KEY" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse COURSE_LIST_CACHE_KEY" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.COURSE_LIST_CACHE_KEY" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.COURSE_LIST_CACHE_KEY" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">COURSE_LIST_CACHE_KEY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'embargo.restricted_courses'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RestrictedCourse.DoesNotExist',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="RestrictedCourse.DoesNotExist" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse DoesNotExist" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.DoesNotExist" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.DoesNotExist" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ENROLL_MSG_KEY_CHOICES\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.ENROLL_MSG_KEY_CHOICES',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.ENROLL_MSG_KEY_CHOICES" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse ENROLL_MSG_KEY_CHOICES" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.ENROLL_MSG_KEY_CHOICES" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.ENROLL_MSG_KEY_CHOICES" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">ENROLL_MSG_KEY_CHOICES</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(('default', 'Default'), ('embargo', 'Embargo'))</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'MESSAGE_URL_CACHE_KEY\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.MESSAGE_URL_CACHE_KEY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.MESSAGE_URL_CACHE_KEY" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse MESSAGE_URL_CACHE_KEY" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.MESSAGE_URL_CACHE_KEY" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.MESSAGE_URL_CACHE_KEY" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">MESSAGE_URL_CACHE_KEY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'embargo.message_url_path.{access_point}.{course_key}'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'RestrictedCourse.MultipleObjectsReturned',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="RestrictedCourse.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse MultipleObjectsReturned" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.MultipleObjectsReturned" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.MultipleObjectsReturned" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'access_msg_key\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.access_msg_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.access_msg_key" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse access_msg_key" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.access_msg_key" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.access_msg_key" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">access_msg_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'countryaccessrule_set\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.countryaccessrule_set',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.countryaccessrule_set" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse countryaccessrule_set" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.countryaccessrule_set" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.countryaccessrule_set" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">countryaccessrule_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related objects manager on the reverse side of a
                                many-to-one relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Parent.children</literal> is a <literal>ReverseManyToOneDescriptor</literal> instance.</paragraph>
                            <paragraph>Most of the implementation is delegated to a dynamically defined manager
                                class built by <literal>create_forward_many_to_many_manager()</literal> defined below.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_key\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.course_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.course_key" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse course_key" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.course_key" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.course_key" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">course_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'disable_access_check\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.disable_access_check',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.disable_access_check" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse disable_access_check" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.disable_access_check" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.disable_access_check" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">disable_access_check</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enroll_msg_key\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.enroll_msg_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.enroll_msg_key" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse enroll_msg_key" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.enroll_msg_key" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.enroll_msg_key" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">enroll_msg_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_access_msg_key_display()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.get_access_msg_key_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.get_access_msg_key_display()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse get_access_msg_key_display" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.get_access_msg_key_display" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.get_access_msg_key_display" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_access_msg_key_display</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: access_msg_key&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_enroll_msg_key_display()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.get_enroll_msg_key_display',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.get_enroll_msg_key_display()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse get_enroll_msg_key_display" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.get_enroll_msg_key_display" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.get_enroll_msg_key_display" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">get_enroll_msg_key_display</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.CharField: enroll_msg_key&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.id" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse id" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.id" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.id" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'invalidate_cache_for_course()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.invalidate_cache_for_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.invalidate_cache_for_course()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse invalidate_cache_for_course" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.invalidate_cache_for_course" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.invalidate_cache_for_course" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">invalidate_cache_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Invalidate the caches for the restricted course.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_disabled_access_check()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.is_disabled_access_check',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.is_disabled_access_check()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse is_disabled_access_check" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.is_disabled_access_check" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.is_disabled_access_check" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_disabled_access_check</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Check if the course is in restricted list has disabled_access_check</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>course_key</literal_strong> – course to look for</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>disabled_access_check attribute of restricted course</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_restricted_course()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.is_restricted_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.is_restricted_course()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse is_restricted_course" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.is_restricted_course" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.is_restricted_course" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_restricted_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Check if the course is in restricted list</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>course_key</literal_strong> – course to look for</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>True if the course is in the restricted course list.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'message_key_for_access_point()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.message_key_for_access_point',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.message_key_for_access_point()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse message_key_for_access_point" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.message_key_for_access_point" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.message_key_for_access_point" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">message_key_for_access_point</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Determine which message to show the user.</paragraph>
                            <paragraph>The message can be configured per-course and depends
                                on how the user is trying to access the course
                                (trying to enroll or accessing courseware).</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>access_point</literal_strong> – Either “courseware” or “enrollment”</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The message key. If the access point is not valid, returns None instead.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'message_url_path()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ class\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.message_url_path',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.message_url_path()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse message_url_path" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.message_url_path" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.message_url_path" module="openedx.core.djangoapps.embargo.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">message_url_path</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">CourseKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str</desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Determine the URL path for the message explaining why the user was blocked.</paragraph>
                            <paragraph>This is configured per-course.  See <title_reference>RestrictedCourse</title_reference> in the <title_reference>embargo.models</title_reference>
                                module for more details.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> – The location of the course.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>access_point</literal_strong> – How the user was trying to access the course. Can be either “enrollment” or “courseware”.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The URL path to a page explaining why the user was blocked.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint" reftitle="openedx.core.djangoapps.embargo.exceptions.InvalidAccessPoint"><literal_strong>InvalidAccessPoint</literal_strong></reference> – Raised if access_point is not a supported value.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ attribute)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RestrictedCourse.objects" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse objects" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.objects" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.objects" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'snapshot()\ (openedx.core.djangoapps.embargo.models.RestrictedCourse\ method)',\ 'openedx.core.djangoapps.embargo.models.RestrictedCourse.snapshot',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RestrictedCourse.snapshot()" _toc_parts="openedx.core.djangoapps.embargo.models RestrictedCourse snapshot" class="RestrictedCourse" classes="sig sig-object py" fullname="RestrictedCourse.snapshot" ids="openedx.core.djangoapps.embargo.models.RestrictedCourse.snapshot" module="openedx.core.djangoapps.embargo.models"><desc_name classes="sig-name descname" xml:space="preserve">snapshot</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a snapshot of all access rules for this course.</paragraph>
                            <paragraph>This is useful for recording an audit trail of rule changes.
                                The returned dictionary is JSON-serializable.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>dict</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                            <paragraph>Example Usage:
                                &gt;&gt;&gt; restricted_course.snapshot()
                                {</paragraph>
                            <block_quote>
                                <paragraph>‘enroll_msg’: ‘default’,
                                    ‘access_msg’: ‘default’,
                                    ‘country_rules’: [</paragraph>
                                <block_quote>
                                    <paragraph>{‘country’: ‘IR’, ‘rule_type’: ‘blacklist’},
                                        {‘country’: ‘CU’, ‘rule_type’: ‘blacklist’}</paragraph>
                                </block_quote>
                                <paragraph>]</paragraph>
                            </block_quote>
                            <paragraph>}</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'invalidate_country_rule_cache()\ (in\ module\ openedx.core.djangoapps.embargo.models)',\ 'openedx.core.djangoapps.embargo.models.invalidate_country_rule_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="invalidate_country_rule_cache()" _toc_parts="openedx.core.djangoapps.embargo.models invalidate_country_rule_cache" class="" classes="sig sig-object py" fullname="invalidate_country_rule_cache" ids="openedx.core.djangoapps.embargo.models.invalidate_country_rule_cache" module="openedx.core.djangoapps.embargo.models"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">invalidate_country_rule_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">instance</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Invalidate cached rule information on changes to the rule models.</paragraph>
                    <paragraph>We need to handle this in a Django receiver, because Django admin
                        doesn’t always call the model’s <title_reference>delete()</title_reference> method directly during
                        a bulk delete operation.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>sender</literal_strong> – Not used, but required by Django receivers.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>instance</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.embargo.models.RestrictedCourse" reftitle="openedx.core.djangoapps.embargo.models.RestrictedCourse"><literal_emphasis>RestrictedCourse</literal_emphasis></reference><literal_emphasis> or </literal_emphasis><reference internal="True" refid="openedx.core.djangoapps.embargo.models.CountryAccessRule" reftitle="openedx.core.djangoapps.embargo.models.CountryAccessRule"><literal_emphasis>CountryAccessRule</literal_emphasis></reference>) – The instance
                                            being saved or deleted.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.test_utils openedx-core-djangoapps-embargo-test-utils-module" names="openedx.core.djangoapps.embargo.test_utils\ module">
            <title>openedx.core.djangoapps.embargo.test_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.test_utils',\ 'module-openedx.core.djangoapps.embargo.test_utils',\ '',\ None]"></index>
            <paragraph>Utilities for writing unit tests that involve course embargos.</paragraph>
            <index entries="['single',\ 'restrict_course()\ (in\ module\ openedx.core.djangoapps.embargo.test_utils)',\ 'openedx.core.djangoapps.embargo.test_utils.restrict_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="restrict_course()" _toc_parts="openedx.core.djangoapps.embargo.test_utils restrict_course" class="" classes="sig sig-object py" fullname="restrict_course" ids="openedx.core.djangoapps.embargo.test_utils.restrict_course" module="openedx.core.djangoapps.embargo.test_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.test_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">restrict_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'enrollment'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">disable_access_check</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Simulate that a course is restricted.</paragraph>
                    <paragraph>This does two things:
                        1) Configures country access rules so that the course is restricted.
                        2) Mocks the GeoIP call so the user appears to be coming</paragraph>
                    <block_quote>
                        <paragraph>from a country that’s blocked from the course.</paragraph>
                    </block_quote>
                    <paragraph>This is useful for tests that need to verify
                        that restricted users won’t be able to access
                        particular views.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The location of the course to block.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <paragraph><literal_strong>access_point</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Either “courseware” or “enrollment”</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Yields</field_name>
                            <field_body>
                                <paragraph><emphasis>str</emphasis> –</paragraph>
                                <definition_list>
                                    <definition_list_item>
                                        <term>A URL to the page in the embargo app that explains</term>
                                        <definition>
                                            <paragraph>why the user was blocked.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Example Usage:
                        &gt;&gt;&gt; with restrict_course(course_key) as redirect_url:
                        &gt;&gt;&gt;     # The client will appear to be coming from
                        &gt;&gt;&gt;     # an IP address that is blocked.
                        &gt;&gt;&gt;     resp = self.client.get(url)
                        &gt;&gt;&gt;     self.assertRedirects(resp, redirect_url)</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.urls openedx-core-djangoapps-embargo-urls-module" names="openedx.core.djangoapps.embargo.urls\ module">
            <title>openedx.core.djangoapps.embargo.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.urls',\ 'module-openedx.core.djangoapps.embargo.urls',\ '',\ None]"></index>
            <paragraph>URLs served by the embargo app.</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo.views openedx-core-djangoapps-embargo-views-module" names="openedx.core.djangoapps.embargo.views\ module">
            <title>openedx.core.djangoapps.embargo.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo.views',\ 'module-openedx.core.djangoapps.embargo.views',\ '',\ None]"></index>
            <paragraph>Views served by the embargo app.</paragraph>
            <index entries="['single',\ 'CheckCourseAccessView\ (class\ in\ openedx.core.djangoapps.embargo.views)',\ 'openedx.core.djangoapps.embargo.views.CheckCourseAccessView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CheckCourseAccessView" _toc_parts="openedx.core.djangoapps.embargo.views CheckCourseAccessView" class="" classes="sig sig-object py" fullname="CheckCourseAccessView" ids="openedx.core.djangoapps.embargo.views.CheckCourseAccessView" module="openedx.core.djangoapps.embargo.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CheckCourseAccessView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal></paragraph>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.embargo.views.CheckCourseAccessView\ method)',\ 'openedx.core.djangoapps.embargo.views.CheckCourseAccessView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CheckCourseAccessView.get()" _toc_parts="openedx.core.djangoapps.embargo.views CheckCourseAccessView get" class="CheckCourseAccessView" classes="sig sig-object py" fullname="CheckCourseAccessView.get" ids="openedx.core.djangoapps.embargo.views.CheckCourseAccessView.get" module="openedx.core.djangoapps.embargo.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>GET /api/embargo/v1/course_access/</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>HttpRequest</literal_emphasis>)</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>True or False depending on the check.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>Response</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.embargo.views.CheckCourseAccessView\ attribute)',\ 'openedx.core.djangoapps.embargo.views.CheckCourseAccessView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CheckCourseAccessView.permission_classes" _toc_parts="openedx.core.djangoapps.embargo.views CheckCourseAccessView permission_classes" class="CheckCourseAccessView" classes="sig sig-object py" fullname="CheckCourseAccessView.permission_classes" ids="openedx.core.djangoapps.embargo.views.CheckCourseAccessView.permission_classes" module="openedx.core.djangoapps.embargo.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;, &lt;class 'rest_framework.permissions.IsAdminUser'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CourseAccessMessageView\ (class\ in\ openedx.core.djangoapps.embargo.views)',\ 'openedx.core.djangoapps.embargo.views.CourseAccessMessageView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseAccessMessageView" _toc_parts="openedx.core.djangoapps.embargo.views CourseAccessMessageView" class="" classes="sig sig-object py" fullname="CourseAccessMessageView" ids="openedx.core.djangoapps.embargo.views.CourseAccessMessageView" module="openedx.core.djangoapps.embargo.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.embargo.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseAccessMessageView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/class-based-views/base/#django.views.generic.base.View"><literal classes="xref py py-class">View</literal></reference></paragraph>
                    <paragraph>Show a message explaining that the user was blocked from a course.</paragraph>
                    <index entries="['single',\ 'COURSEWARE_ACCESS_POINT\ (openedx.core.djangoapps.embargo.views.CourseAccessMessageView\ attribute)',\ 'openedx.core.djangoapps.embargo.views.CourseAccessMessageView.COURSEWARE_ACCESS_POINT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessMessageView.COURSEWARE_ACCESS_POINT" _toc_parts="openedx.core.djangoapps.embargo.views CourseAccessMessageView COURSEWARE_ACCESS_POINT" class="CourseAccessMessageView" classes="sig sig-object py" fullname="CourseAccessMessageView.COURSEWARE_ACCESS_POINT" ids="openedx.core.djangoapps.embargo.views.CourseAccessMessageView.COURSEWARE_ACCESS_POINT" module="openedx.core.djangoapps.embargo.views"><desc_name classes="sig-name descname" xml:space="preserve">COURSEWARE_ACCESS_POINT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'courseware'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ENROLLMENT_ACCESS_POINT\ (openedx.core.djangoapps.embargo.views.CourseAccessMessageView\ attribute)',\ 'openedx.core.djangoapps.embargo.views.CourseAccessMessageView.ENROLLMENT_ACCESS_POINT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseAccessMessageView.ENROLLMENT_ACCESS_POINT" _toc_parts="openedx.core.djangoapps.embargo.views CourseAccessMessageView ENROLLMENT_ACCESS_POINT" class="CourseAccessMessageView" classes="sig sig-object py" fullname="CourseAccessMessageView.ENROLLMENT_ACCESS_POINT" ids="openedx.core.djangoapps.embargo.views.CourseAccessMessageView.ENROLLMENT_ACCESS_POINT" module="openedx.core.djangoapps.embargo.views"><desc_name classes="sig-name descname" xml:space="preserve">ENROLLMENT_ACCESS_POINT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'enrollment'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.embargo.views.CourseAccessMessageView\ method)',\ 'openedx.core.djangoapps.embargo.views.CourseAccessMessageView.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseAccessMessageView.get()" _toc_parts="openedx.core.djangoapps.embargo.views CourseAccessMessageView get" class="CourseAccessMessageView" classes="sig sig-object py" fullname="CourseAccessMessageView.get" ids="openedx.core.djangoapps.embargo.views.CourseAccessMessageView.get" module="openedx.core.djangoapps.embargo.views"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">access_point</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Show a message explaining that the user was blocked.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>HttpRequest</literal_emphasis>)</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Keyword Arguments</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>access_point</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Either ‘enrollment’ or ‘courseware’,
                                                    indicating how the user is trying to access the restricted
                                                    content.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>message_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – An identifier for which message to show.
                                                    See <title_reference>embargo.messages</title_reference> for more information.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>HttpResponse</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>Http404</literal_strong> – If no message is configured for the specified message key.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.embargo module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.embargo',\ 'module-openedx.core.djangoapps.embargo',\ '',\ None]"></index>
        </section>
    </section>
</document>
