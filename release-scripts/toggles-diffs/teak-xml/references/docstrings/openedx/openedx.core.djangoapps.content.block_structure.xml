<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.content.block_structure.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-content-block-structure-package" names="openedx.core.djangoapps.content.block_structure\ package">
        <title>openedx.core.djangoapps.content.block_structure package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config">openedx.core.djangoapps.content.block_structure.config package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content.block_structure.config.models" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#module-openedx.core.djangoapps.content.block_structure.config.models">openedx.core.djangoapps.content.block_structure.config.models module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration"><literal>BlockStructureConfiguration</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DEFAULT_CACHE_TIMEOUT_IN_SECONDS" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DEFAULT_CACHE_TIMEOUT_IN_SECONDS"><literal>BlockStructureConfiguration.DEFAULT_CACHE_TIMEOUT_IN_SECONDS</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DEFAULT_PRUNE_KEEP_COUNT" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DEFAULT_PRUNE_KEEP_COUNT"><literal>BlockStructureConfiguration.DEFAULT_PRUNE_KEEP_COUNT</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DoesNotExist" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.DoesNotExist"><literal>BlockStructureConfiguration.DoesNotExist</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.MultipleObjectsReturned" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.MultipleObjectsReturned"><literal>BlockStructureConfiguration.MultipleObjectsReturned</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.cache_timeout_in_seconds" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.cache_timeout_in_seconds"><literal>BlockStructureConfiguration.cache_timeout_in_seconds</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.change_date" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.change_date"><literal>BlockStructureConfiguration.change_date</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.changed_by" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.changed_by"><literal>BlockStructureConfiguration.changed_by</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.changed_by_id" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.changed_by_id"><literal>BlockStructureConfiguration.changed_by_id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.enabled" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.enabled"><literal>BlockStructureConfiguration.enabled</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.get_next_by_change_date" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.get_next_by_change_date"><literal>BlockStructureConfiguration.get_next_by_change_date()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.get_previous_by_change_date" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.get_previous_by_change_date"><literal>BlockStructureConfiguration.get_previous_by_change_date()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.id" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.id"><literal>BlockStructureConfiguration.id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.num_versions_to_keep" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.models.BlockStructureConfiguration.num_versions_to_keep"><literal>BlockStructureConfiguration.num_versions_to_keep</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content.block_structure.config" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#module-openedx.core.djangoapps.content.block_structure.config">Module contents</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.cache_timeout_in_seconds" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.cache_timeout_in_seconds"><literal>cache_timeout_in_seconds()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content.block_structure.config.num_versions_to_keep" internal="True" refuri="openedx.core.djangoapps.content.block_structure.config#openedx.core.djangoapps.content.block_structure.config.num_versions_to_keep"><literal>num_versions_to_keep()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management">openedx.core.djangoapps.content.block_structure.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management.commands">openedx.core.djangoapps.content.block_structure.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management.commands#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content.block_structure.management.commands.generate_course_blocks" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management.commands#module-openedx.core.djangoapps.content.block_structure.management.commands.generate_course_blocks">openedx.core.djangoapps.content.block_structure.management.commands.generate_course_blocks module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content.block_structure.management.commands" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management.commands#module-openedx.core.djangoapps.content.block_structure.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content.block_structure.management" internal="True" refuri="openedx.core.djangoapps.content.block_structure.management#module-openedx.core.djangoapps.content.block_structure.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.api openedx-core-djangoapps-content-block-structure-api-module" names="openedx.core.djangoapps.content.block_structure.api\ module">
            <title>openedx.core.djangoapps.content.block_structure.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.api',\ 'module-openedx.core.djangoapps.content.block_structure.api',\ '',\ None]"></index>
            <paragraph>Higher order functions built on the BlockStructureManager to interact with a django cache.</paragraph>
            <index entries="['single',\ 'clear_course_from_cache()\ (in\ module\ openedx.core.djangoapps.content.block_structure.api)',\ 'openedx.core.djangoapps.content.block_structure.api.clear_course_from_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clear_course_from_cache()" _toc_parts="openedx.core.djangoapps.content.block_structure.api clear_course_from_cache" class="" classes="sig sig-object py" fullname="clear_course_from_cache" ids="openedx.core.djangoapps.content.block_structure.api.clear_course_from_cache" module="openedx.core.djangoapps.content.block_structure.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clear_course_from_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A higher order function implemented on top of the
                        block_structure.clear_block_cache function that clears the block
                        structure from the cache for the given course_key.</paragraph>
                    <paragraph>Note: See Note in get_course_blocks. Even after MA-1604 is
                        implemented, this implementation should still be valid since the
                        entire block structure of the course is cached, even though
                        arbitrary access to an intermediate block will be supported.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_block_structure_manager()\ (in\ module\ openedx.core.djangoapps.content.block_structure.api)',\ 'openedx.core.djangoapps.content.block_structure.api.get_block_structure_manager',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_block_structure_manager()" _toc_parts="openedx.core.djangoapps.content.block_structure.api get_block_structure_manager" class="" classes="sig sig-object py" fullname="get_block_structure_manager" ids="openedx.core.djangoapps.content.block_structure.api.get_block_structure_manager" module="openedx.core.djangoapps.content.block_structure.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_block_structure_manager</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the manager for managing Block Structures for the given course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cache()\ (in\ module\ openedx.core.djangoapps.content.block_structure.api)',\ 'openedx.core.djangoapps.content.block_structure.api.get_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cache()" _toc_parts="openedx.core.djangoapps.content.block_structure.api get_cache" class="" classes="sig sig-object py" fullname="get_cache" ids="openedx.core.djangoapps.content.block_structure.api.get_cache" module="openedx.core.djangoapps.content.block_structure.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cache</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the storage for caching Block Structures.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_in_cache()\ (in\ module\ openedx.core.djangoapps.content.block_structure.api)',\ 'openedx.core.djangoapps.content.block_structure.api.get_course_in_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_in_cache()" _toc_parts="openedx.core.djangoapps.content.block_structure.api get_course_in_cache" class="" classes="sig sig-object py" fullname="get_course_in_cache" ids="openedx.core.djangoapps.content.block_structure.api.get_course_in_cache" module="openedx.core.djangoapps.content.block_structure.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_in_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A higher order function implemented on top of the
                        block_structure.get_collected function that returns the block
                        structure in the cache for the given course_key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph><definition_list><definition_list_item><term>BlockStructureBlockData - The collected block structure,</term><definition><paragraph>starting at root_block_usage_key.</paragraph></definition></definition_list_item></definition_list></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_course_in_cache()\ (in\ module\ openedx.core.djangoapps.content.block_structure.api)',\ 'openedx.core.djangoapps.content.block_structure.api.update_course_in_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_course_in_cache()" _toc_parts="openedx.core.djangoapps.content.block_structure.api update_course_in_cache" class="" classes="sig sig-object py" fullname="update_course_in_cache" ids="openedx.core.djangoapps.content.block_structure.api.update_course_in_cache" module="openedx.core.djangoapps.content.block_structure.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_course_in_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A higher order function implemented on top of the
                        block_structure.updated_collected function that updates the block
                        structure in the cache for the given course_key.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.apps openedx-core-djangoapps-content-block-structure-apps-module" names="openedx.core.djangoapps.content.block_structure.apps\ module">
            <title>openedx.core.djangoapps.content.block_structure.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.apps',\ 'module-openedx.core.djangoapps.content.block_structure.apps',\ '',\ None]"></index>
            <paragraph>Configuration for block_structure djangoapp</paragraph>
            <index entries="['single',\ 'BlockStructureConfig\ (class\ in\ openedx.core.djangoapps.content.block_structure.apps)',\ 'openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureConfig" _toc_parts="openedx.core.djangoapps.content.block_structure.apps BlockStructureConfig" class="" classes="sig sig-object py" fullname="BlockStructureConfig" ids="openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig" module="openedx.core.djangoapps.content.block_structure.apps"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>block_structure django app.</paragraph>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureConfig.name" _toc_parts="openedx.core.djangoapps.content.block_structure.apps BlockStructureConfig name" class="BlockStructureConfig" classes="sig sig-object py" fullname="BlockStructureConfig.name" ids="openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig.name" module="openedx.core.djangoapps.content.block_structure.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.content.block_structure'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig\ method)',\ 'openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureConfig.ready()" _toc_parts="openedx.core.djangoapps.content.block_structure.apps BlockStructureConfig ready" class="BlockStructureConfig" classes="sig sig-object py" fullname="BlockStructureConfig.ready" ids="openedx.core.djangoapps.content.block_structure.apps.BlockStructureConfig.ready" module="openedx.core.djangoapps.content.block_structure.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Define tasks to perform at app loading time</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>Connect signal handlers</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Register celery tasks</paragraph>
                                </list_item>
                            </bullet_list>
                            <paragraph>These happen at import time.  Hence the unused imports</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.block_structure openedx-core-djangoapps-content-block-structure-block-structure-module" names="openedx.core.djangoapps.content.block_structure.block_structure\ module">
            <title>openedx.core.djangoapps.content.block_structure.block_structure module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.block_structure',\ 'module-openedx.core.djangoapps.content.block_structure.block_structure',\ '',\ None]"></index>
            <definition_list>
                <definition_list_item>
                    <term>Module with family of classes for block structures.</term>
                    <definition>
                        <paragraph>BlockStructure - responsible for block existence and relations.
                            BlockStructureBlockData - responsible for block &amp; transformer data.
                            BlockStructureModulestoreData - responsible for xBlock data.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term>The following internal data structures are implemented:</term>
                    <definition>
                        <paragraph>_BlockRelations - Data structure for a single block’s relations.
                            _BlockData - Data structure for a single block’s data.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <index entries="['single',\ 'BlockData\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockData" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockData" class="" classes="sig sig-object py" fullname="BlockData" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockData" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockData</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.FieldData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.FieldData"><literal classes="xref py py-class">FieldData</literal></reference></paragraph>
                    <paragraph>Data structure to encapsulate collected data for a single block.</paragraph>
                    <index entries="['single',\ 'class_field_names()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockData.class_field_names',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockData.class_field_names()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockData class_field_names" class="BlockData" classes="sig sig-object py" fullname="BlockData.class_field_names" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockData.class_field_names" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">class_field_names</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns list of names of fields that are defined directly
                                on the class. Can be overridden by subclasses. All other
                                fields are assumed to be stored in the self.fields dict.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlockStructure\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructure" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure" class="" classes="sig sig-object py" fullname="BlockStructure" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructure</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Base class for a block structure.  BlockStructures are constructed
                        using the BlockStructureFactory and then used as the currency across
                        Transformers.</paragraph>
                    <paragraph>This base class keeps track of the block structure’s root_block_usage_key,
                        the existence of the blocks, and their parents and children
                        relationships (graph nodes and edges).</paragraph>
                    <index entries="['single',\ 'get_block_keys()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_block_keys',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.get_block_keys()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure get_block_keys" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.get_block_keys" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_block_keys" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_block_keys</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the block keys in the block structure.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>iterator(UsageKey) - An iterator of the usage
                                            keys of all the blocks in the block structure.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_children()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_children',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.get_children()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure get_children" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.get_children" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_children" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_children</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the children of the block identified by the given
                                usage_key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>children</literal_strong> (<literal_emphasis>usage_key - The usage key</literal_emphasis><literal_emphasis> of </literal_emphasis><literal_emphasis>the block whose</literal_emphasis>) – are to be returned.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>[UsageKey] - A list of usage keys of the block’s children.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_parents()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_parents',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.get_parents()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure get_parents" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.get_parents" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.get_parents" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_parents</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the parents of the block identified by the given
                                usage_key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>parents</literal_strong> (<literal_emphasis>usage_key - The usage key</literal_emphasis><literal_emphasis> of </literal_emphasis><literal_emphasis>the block whose</literal_emphasis>) – are to be returned.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>[UsageKey] - A list of usage keys of the block’s parents.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post_order_traversal()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.post_order_traversal',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.post_order_traversal()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure post_order_traversal" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.post_order_traversal" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.post_order_traversal" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">post_order_traversal</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_node</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Performs a post-order sort of the block structure and yields
                                the usage_key of each block as it is encountered.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>in</literal_strong> (<literal_emphasis>See the description</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>openedx.core.lib.graph_traversals.traverse_post_order.</literal_strong></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>generator - A generator object created from the</term><definition><paragraph>traverse_post_order method.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set_root_block()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.set_root_block',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.set_root_block()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure set_root_block" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.set_root_block" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.set_root_block" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">set_root_block</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Sets the given usage key as the new root of the block structure.</paragraph>
                            <paragraph>Note: This method does <emphasis>not</emphasis> prune the rest of the structure. For
                                performance reasons, it is left to the caller to decide when exactly
                                to prune.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>the</literal_strong> (<literal_emphasis>usage_key - The usage key</literal_emphasis><literal_emphasis> of </literal_emphasis><literal_emphasis>the block that is to be set as</literal_emphasis>) – new root of the block structure.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'topological_traversal()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.topological_traversal',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructure.topological_traversal()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructure topological_traversal" class="BlockStructure" classes="sig sig-object py" fullname="BlockStructure.topological_traversal" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure.topological_traversal" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">topological_traversal</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">yield_descendants_of_unyielded</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_node</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Performs a topological sort of the block structure and yields
                                the usage_key of each block as it is encountered.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>in</literal_strong> (<literal_emphasis>See the description</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>openedx.core.lib.graph_traversals.traverse_topologically.</literal_strong></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>generator - A generator object created from the</term><definition><paragraph>traverse_topologically method.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlockStructureBlockData\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureBlockData" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData" class="" classes="sig sig-object py" fullname="BlockStructureBlockData" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureBlockData</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure"><literal classes="xref py py-class">BlockStructure</literal></reference></paragraph>
                    <paragraph>Subclass of BlockStructure that is responsible for managing block
                        and transformer data.</paragraph>
                    <index entries="['single',\ 'VERSION\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureBlockData.VERSION" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData VERSION" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.VERSION" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.VERSION" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>2</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'copy()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.copy',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.copy()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData copy" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.copy" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.copy" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">copy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a new instance of BlockStructureBlockData with a
                                deep-copy of this instance’s contents.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_removal_filter()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.create_removal_filter',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.create_removal_filter()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData create_removal_filter" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.create_removal_filter" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.create_removal_filter" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">create_removal_filter</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">removal_condition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">keep_descendants</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a filter function that automatically removes blocks that satisfy
                                the removal_condition.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>removal_condition</literal_strong> (<literal_emphasis>(</literal_emphasis><literal_emphasis>usage_key</literal_emphasis><literal_emphasis>)</literal_emphasis><literal_emphasis>-&gt;bool</literal_emphasis>) – takes a block’s usage key as input and returns whether
                                                    or not to remove that block from the block structure.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>keep_descendants</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – remove_block.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_universal_filter()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.create_universal_filter',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.create_universal_filter()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData create_universal_filter" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.create_universal_filter" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.create_universal_filter" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">create_universal_filter</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a filter function that always returns True for all blocks.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'filter_topological_traversal()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.filter_topological_traversal',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.filter_topological_traversal()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData filter_topological_traversal" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.filter_topological_traversal" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.filter_topological_traversal" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">filter_topological_traversal</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>A higher-order function that traverses the block structure
                                using topological sort and applies the given filter.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>filter_func</literal_strong> (<literal_emphasis>(</literal_emphasis><literal_emphasis>usage_key</literal_emphasis><literal_emphasis>)</literal_emphasis><literal_emphasis>-&gt;bool</literal_emphasis>) – whether or not to yield the given block key.
                                                    If None, the True function is assumed.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>kwargs</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – to topological_traversal.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_transformer_block_data()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_block_data',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.get_transformer_block_data()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData get_transformer_block_data" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.get_transformer_block_data" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_block_data" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_transformer_block_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the TransformerData for the given
                                transformer for the block identified by the given usage_key.</paragraph>
                            <paragraph>Raises KeyError if not found.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – transformer data is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose dictionary data is requested.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_transformer_block_field()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_block_field',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.get_transformer_block_field()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData get_transformer_block_field" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.get_transformer_block_field" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_block_field" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_transformer_block_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the value associated with the given key for the given
                                transformer for the block identified by the given usage_key;
                                returns default if not found.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – transformer data is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose dictionary data is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>key</literal_strong> (<literal_emphasis>string</literal_emphasis>) – that is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>default</literal_strong> (<literal_emphasis>any type</literal_emphasis>) – entry is not found.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_transformer_data()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_data',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.get_transformer_data()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData get_transformer_data" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.get_transformer_data" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_transformer_data" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_transformer_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the value associated with the given key from the given
                                transformer’s data dictionary; returns default if not found.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose collected data is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>key</literal_strong> (<literal_emphasis>string</literal_emphasis>) – that is requested.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_xblock_field()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_xblock_field',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.get_xblock_field()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData get_xblock_field" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.get_xblock_field" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.get_xblock_field" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_xblock_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the collected value of the xBlock field for the
                                requested block for the requested field_name; returns default if
                                not found.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – field is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>field_name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>default</literal_strong> (<literal_emphasis>any type</literal_emphasis>) – not found.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'iteritems()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.iteritems',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.iteritems()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData iteritems" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.iteritems" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.iteritems" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">iteritems</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns iterator of (UsageKey, BlockData) pairs for all
                                blocks in the BlockStructure.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'itervalues()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.itervalues',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.itervalues()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData itervalues" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.itervalues" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.itervalues" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">itervalues</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns iterator of BlockData for all blocks in the
                                BlockStructure.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'override_xblock_field()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.override_xblock_field',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.override_xblock_field()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData override_xblock_field" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.override_xblock_field" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.override_xblock_field" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">override_xblock_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">override_data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Set value of the XBlock field for the requested block for the requested field_name;</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – field is requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>field_name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – requested.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>override_data</literal_strong> (<literal_emphasis>object</literal_emphasis>)</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'remove_block()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_block',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.remove_block()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData remove_block" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.remove_block" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_block" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">remove_block</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">keep_descendants</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Removes the block identified by the usage_key and all of its
                                related data from the block structure.  If descendants of the
                                removed block are to be kept, the structure’s relations are
                                updated to reconnect the block’s parents with its children.</paragraph>
                            <paragraph>Note: While the immediate relations of the block are updated
                                (removed), all descendants of the block will remain in the
                                structure unless the _prune_unreachable method is called.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – removed.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>keep_descendants</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – relations (graph edges) are updated such that the
                                                    removed block’s children become children of the
                                                    removed block’s parents.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'remove_block_traversal()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_block_traversal',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.remove_block_traversal()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData remove_block_traversal" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.remove_block_traversal" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_block_traversal" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">remove_block_traversal</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">removal_condition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">keep_descendants</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>A higher-order function that traverses the block structure
                                using topological sort and removes all blocks satisfying the given
                                removal_condition.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>removal_condition</literal_strong> (<literal_emphasis>(</literal_emphasis><literal_emphasis>usage_key</literal_emphasis><literal_emphasis>)</literal_emphasis><literal_emphasis>-&gt;bool</literal_emphasis>) – takes a block’s usage key as input and returns whether
                                                    or not to remove that block from the block structure.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>keep_descendants</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – remove_block.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'remove_transformer_block_field()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_transformer_block_field',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.remove_transformer_block_field()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData remove_transformer_block_field" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.remove_transformer_block_field" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.remove_transformer_block_field" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">remove_transformer_block_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deletes the given transformer’s entire data dict for the
                                block identified by the given usage_key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – transformer data is to be deleted.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose data entry is to be deleted.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'retain_or_remove()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.retain_or_remove',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.retain_or_remove()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData retain_or_remove" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.retain_or_remove" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.retain_or_remove" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">retain_or_remove</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">removal_condition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">keep_descendants</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Removes the given block if it satisfies the removal_condition.
                                Returns True if the block was retained, and False if the block
                                was removed.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>block_key</literal_strong> (<literal_emphasis>usage_key</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>removal_condition</literal_strong> (<literal_emphasis>(</literal_emphasis><literal_emphasis>usage_key</literal_emphasis><literal_emphasis>)</literal_emphasis><literal_emphasis>-&gt;bool</literal_emphasis>) – takes a block’s usage key as input and returns whether
                                                    or not to remove that block from the block structure.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>keep_descendants</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – remove_block.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set_transformer_block_field()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.set_transformer_block_field',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.set_transformer_block_field()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData set_transformer_block_field" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.set_transformer_block_field" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.set_transformer_block_field" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">set_transformer_block_field</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updates the given transformer’s data dictionary with the given
                                key and value for the block identified by the given usage_key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – transformer data is to be updated.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose data is to be updated.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>key</literal_strong> (<literal_emphasis>string</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>value</literal_strong> (<literal_emphasis>any picklable type</literal_emphasis>) – given key for the given transformer’s data for the
                                                    requested block.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set_transformer_data()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.set_transformer_data',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureBlockData.set_transformer_data()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureBlockData set_transformer_data" class="BlockStructureBlockData" classes="sig sig-object py" fullname="BlockStructureBlockData.set_transformer_data" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData.set_transformer_data" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">set_transformer_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updates the given transformer’s data dictionary with the given
                                key and value.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>transformer</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference>) – whose data is to be updated.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>key</literal_strong> (<literal_emphasis>string</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>value</literal_strong> (<literal_emphasis>any picklable type</literal_emphasis>) – given key for the given transformer’s data.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlockStructureModulestoreData\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureModulestoreData" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureModulestoreData" class="" classes="sig sig-object py" fullname="BlockStructureModulestoreData" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureModulestoreData</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal classes="xref py py-class">BlockStructureBlockData</literal></reference></paragraph>
                    <paragraph>Subclass of BlockStructureBlockData that is responsible for managing
                        xBlocks and corresponding functionality that should only be called
                        during the Collect phase.</paragraph>
                    <paragraph>Note: Although this class interface uses xBlock terminology, it is
                        designed and implemented generically so it can work with any
                        interface and implementation of an xBlock.</paragraph>
                    <index entries="['single',\ 'get_xblock()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData.get_xblock',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModulestoreData.get_xblock()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureModulestoreData get_xblock" class="BlockStructureModulestoreData" classes="sig sig-object py" fullname="BlockStructureModulestoreData.get_xblock" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData.get_xblock" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the instantiated xBlock for the given usage key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – xBlock object is to be returned.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'request_xblock_fields()\ (openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData.request_xblock_fields',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModulestoreData.request_xblock_fields()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure BlockStructureModulestoreData request_xblock_fields" class="BlockStructureModulestoreData" classes="sig sig-object py" fullname="BlockStructureModulestoreData.request_xblock_fields" ids="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData.request_xblock_fields" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">request_xblock_fields</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">field_names</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Records request for collecting data for the given xBlock fields.</paragraph>
                            <paragraph>A Transformer should call this method when it needs to collect
                                data for a common xBlock field that may also be used by other
                                transformers.  This minimizes storage usage across transformers.
                                Contrast this with each transformer collecting the same xBlock
                                data within its own transformer data storage.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>field_names</literal_strong> (<literal_emphasis>list</literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>string</literal_emphasis><literal_emphasis>)</literal_emphasis>) – xBlock fields whose values should be collected.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'FieldData\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.FieldData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="FieldData" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure FieldData" class="" classes="sig sig-object py" fullname="FieldData" ids="openedx.core.djangoapps.content.block_structure.block_structure.FieldData" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">FieldData</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Data structure to encapsulate collected fields.</paragraph>
                    <index entries="['single',\ 'class_field_names()\ (openedx.core.djangoapps.content.block_structure.block_structure.FieldData\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.FieldData.class_field_names',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="FieldData.class_field_names()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure FieldData class_field_names" class="FieldData" classes="sig sig-object py" fullname="FieldData.class_field_names" ids="openedx.core.djangoapps.content.block_structure.block_structure.FieldData.class_field_names" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">class_field_names</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns list of names of fields that are defined directly
                                on the class. Can be overridden by subclasses. All other
                                fields are assumed to be stored in the self.fields dict.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TransformerData\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.TransformerData',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TransformerData" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure TransformerData" class="" classes="sig sig-object py" fullname="TransformerData" ids="openedx.core.djangoapps.content.block_structure.block_structure.TransformerData" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TransformerData</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.FieldData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.FieldData"><literal classes="xref py py-class">FieldData</literal></reference></paragraph>
                    <paragraph>Data structure to encapsulate collected data for a transformer.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TransformerDataMap\ (class\ in\ openedx.core.djangoapps.content.block_structure.block_structure)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.TransformerDataMap',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TransformerDataMap" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure TransformerDataMap" class="" classes="sig sig-object py" fullname="TransformerDataMap" ids="openedx.core.djangoapps.content.block_structure.block_structure.TransformerDataMap" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.block_structure.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TransformerDataMap</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">dict</literal></paragraph>
                    <paragraph>A map of Transformer name to its corresponding TransformerData.
                        The map can be accessed by the Transformer’s name or the
                        Transformer’s class type.</paragraph>
                    <index entries="['single',\ 'get_or_create()\ (openedx.core.djangoapps.content.block_structure.block_structure.TransformerDataMap\ method)',\ 'openedx.core.djangoapps.content.block_structure.block_structure.TransformerDataMap.get_or_create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TransformerDataMap.get_or_create()" _toc_parts="openedx.core.djangoapps.content.block_structure.block_structure TransformerDataMap get_or_create" class="TransformerDataMap" classes="sig sig-object py" fullname="TransformerDataMap.get_or_create" ids="openedx.core.djangoapps.content.block_structure.block_structure.TransformerDataMap.get_or_create" module="openedx.core.djangoapps.content.block_structure.block_structure"><desc_name classes="sig-name descname" xml:space="preserve">get_or_create</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the TransformerData associated with the given
                                key.  If not found, creates and returns a new TransformerData
                                and maps it to the given key.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.exceptions openedx-core-djangoapps-content-block-structure-exceptions-module" names="openedx.core.djangoapps.content.block_structure.exceptions\ module">
            <title>openedx.core.djangoapps.content.block_structure.exceptions module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.exceptions',\ 'module-openedx.core.djangoapps.content.block_structure.exceptions',\ '',\ None]"></index>
            <paragraph>Application-specific exceptions raised by the block structure framework.</paragraph>
            <index entries="['single',\ 'BlockStructureException',\ 'openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="BlockStructureException" _toc_parts="openedx.core.djangoapps.content.block_structure.exceptions BlockStructureException" class="" classes="sig sig-object py" fullname="BlockStructureException" ids="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException" module="openedx.core.djangoapps.content.block_structure.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Base class for all Block Structure framework exceptions.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'BlockStructureNotFound',\ 'openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureNotFound',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="BlockStructureNotFound" _toc_parts="openedx.core.djangoapps.content.block_structure.exceptions BlockStructureNotFound" class="" classes="sig sig-object py" fullname="BlockStructureNotFound" ids="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureNotFound" module="openedx.core.djangoapps.content.block_structure.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureNotFound</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException" reftitle="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException"><literal classes="xref py py-class">BlockStructureException</literal></reference></paragraph>
                    <paragraph>Exception for when a Block Structure is not found.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TransformerDataIncompatible',\ 'openedx.core.djangoapps.content.block_structure.exceptions.TransformerDataIncompatible',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="TransformerDataIncompatible" _toc_parts="openedx.core.djangoapps.content.block_structure.exceptions TransformerDataIncompatible" class="" classes="sig sig-object py" fullname="TransformerDataIncompatible" ids="openedx.core.djangoapps.content.block_structure.exceptions.TransformerDataIncompatible" module="openedx.core.djangoapps.content.block_structure.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TransformerDataIncompatible</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException" reftitle="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException"><literal classes="xref py py-class">BlockStructureException</literal></reference></paragraph>
                    <paragraph>Exception for when the version of a Transformer’s data is not
                        compatible with the current version of the Transformer.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TransformerException',\ 'openedx.core.djangoapps.content.block_structure.exceptions.TransformerException',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="TransformerException" _toc_parts="openedx.core.djangoapps.content.block_structure.exceptions TransformerException" class="" classes="sig sig-object py" fullname="TransformerException" ids="openedx.core.djangoapps.content.block_structure.exceptions.TransformerException" module="openedx.core.djangoapps.content.block_structure.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TransformerException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException" reftitle="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException"><literal classes="xref py py-class">BlockStructureException</literal></reference></paragraph>
                    <paragraph>Exception class for Transformer related errors.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'UsageKeyNotInBlockStructure',\ 'openedx.core.djangoapps.content.block_structure.exceptions.UsageKeyNotInBlockStructure',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="UsageKeyNotInBlockStructure" _toc_parts="openedx.core.djangoapps.content.block_structure.exceptions UsageKeyNotInBlockStructure" class="" classes="sig sig-object py" fullname="UsageKeyNotInBlockStructure" ids="openedx.core.djangoapps.content.block_structure.exceptions.UsageKeyNotInBlockStructure" module="openedx.core.djangoapps.content.block_structure.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">UsageKeyNotInBlockStructure</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException" reftitle="openedx.core.djangoapps.content.block_structure.exceptions.BlockStructureException"><literal classes="xref py py-class">BlockStructureException</literal></reference></paragraph>
                    <paragraph>Exception for when a usage key is not found within a block structure.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.factory openedx-core-djangoapps-content-block-structure-factory-module" names="openedx.core.djangoapps.content.block_structure.factory\ module">
            <title>openedx.core.djangoapps.content.block_structure.factory module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.factory',\ 'module-openedx.core.djangoapps.content.block_structure.factory',\ '',\ None]"></index>
            <paragraph>Module for factory class for BlockStructure objects.</paragraph>
            <index entries="['single',\ 'BlockStructureFactory\ (class\ in\ openedx.core.djangoapps.content.block_structure.factory)',\ 'openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureFactory" _toc_parts="openedx.core.djangoapps.content.block_structure.factory BlockStructureFactory" class="" classes="sig sig-object py" fullname="BlockStructureFactory" ids="openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory" module="openedx.core.djangoapps.content.block_structure.factory"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.factory.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureFactory</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Factory class for BlockStructure objects.</paragraph>
                    <index entries="['single',\ 'create_from_modulestore()\ (openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_from_modulestore',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureFactory.create_from_modulestore()" _toc_parts="openedx.core.djangoapps.content.block_structure.factory BlockStructureFactory create_from_modulestore" class="BlockStructureFactory" classes="sig sig-object py" fullname="BlockStructureFactory.create_from_modulestore" ids="openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_from_modulestore" module="openedx.core.djangoapps.content.block_structure.factory"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_from_modulestore</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">modulestore</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Creates and returns a block structure from the modulestore
                                starting at the given root_block_usage_key.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>root_block_usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – of the block structure that is to be created.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>modulestore</literal_strong> (<literal_emphasis>ModuleStoreRead</literal_emphasis>) – contains the data for the xBlocks within the block
                                                    structure starting at root_block_usage_key.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>BlockStructureModulestoreData - The created block structure</term><definition><paragraph>with instantiated xBlocks from the given modulestore
                                                            starting at root_block_usage_key.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>xmodule.modulestore.exceptions.ItemNotFoundError if a block for</literal_strong> – root_block_usage_key is not found in the modulestore.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_from_store()\ (openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_from_store',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureFactory.create_from_store()" _toc_parts="openedx.core.djangoapps.content.block_structure.factory BlockStructureFactory create_from_store" class="BlockStructureFactory" classes="sig sig-object py" fullname="BlockStructureFactory.create_from_store" ids="openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_from_store" module="openedx.core.djangoapps.content.block_structure.factory"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_from_store</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure_store</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deserializes and returns the block structure starting at
                                root_block_usage_key from the given store, if it’s found in the store.</paragraph>
                            <paragraph>The given root_block_usage_key must equate the root_block_usage_key
                                previously passed to serialize_to_cache.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>root_block_usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – of the block structure that is to be deserialized from
                                                    the given cache.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure_store</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore" reftitle="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore"><literal_emphasis>BlockStructureStore</literal_emphasis></reference>) – store from which the block structure is to be
                                                    deserialized.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>BlockStructure - The deserialized block structure starting</term><definition><paragraph>at root_block_usage_key, if found in the cache.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>BlockStructureNotFound - If the root_block_usage_key is not found</literal_strong> – in the store.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_new()\ (openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_new',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureFactory.create_new()" _toc_parts="openedx.core.djangoapps.content.block_structure.factory BlockStructureFactory create_new" class="BlockStructureFactory" classes="sig sig-object py" fullname="BlockStructureFactory.create_new" ids="openedx.core.djangoapps.content.block_structure.factory.BlockStructureFactory.create_new" module="openedx.core.djangoapps.content.block_structure.factory"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_new</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_relations</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformer_data</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_data_map</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a new block structure for given the arguments.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.manager openedx-core-djangoapps-content-block-structure-manager-module" names="openedx.core.djangoapps.content.block_structure.manager\ module">
            <title>openedx.core.djangoapps.content.block_structure.manager module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.manager',\ 'module-openedx.core.djangoapps.content.block_structure.manager',\ '',\ None]"></index>
            <paragraph>Top-level module for the Block Structure framework with a class for managing
                BlockStructures.</paragraph>
            <index entries="['single',\ 'BlockStructureManager\ (class\ in\ openedx.core.djangoapps.content.block_structure.manager)',\ 'openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureManager" _toc_parts="openedx.core.djangoapps.content.block_structure.manager BlockStructureManager" class="" classes="sig sig-object py" fullname="BlockStructureManager" ids="openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager" module="openedx.core.djangoapps.content.block_structure.manager"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.manager.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureManager</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">modulestore</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cache</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Top-level class for managing Block Structures.</paragraph>
                    <index entries="['single',\ 'clear()\ (openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager\ method)',\ 'openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.clear',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureManager.clear()" _toc_parts="openedx.core.djangoapps.content.block_structure.manager BlockStructureManager clear" class="BlockStructureManager" classes="sig sig-object py" fullname="BlockStructureManager.clear" ids="openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.clear" module="openedx.core.djangoapps.content.block_structure.manager"><desc_name classes="sig-name descname" xml:space="preserve">clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Removes data for the block structure associated with the given
                                root block key.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_collected()\ (openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager\ method)',\ 'openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.get_collected',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureManager.get_collected()" _toc_parts="openedx.core.djangoapps.content.block_structure.manager BlockStructureManager get_collected" class="BlockStructureManager" classes="sig sig-object py" fullname="BlockStructureManager.get_collected" ids="openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.get_collected" module="openedx.core.djangoapps.content.block_structure.manager"><desc_name classes="sig-name descname" xml:space="preserve">get_collected</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the collected Block Structure for the root_block_usage_key,
                                getting block data from the cache and modulestore, as needed.</paragraph>
                            <paragraph>Details: The cache is updated if needed (if outdated or empty),
                                the modulestore is accessed if needed (at cache miss), and the
                                transformers data is collected if needed.</paragraph>
                            <paragraph>In the case of a cache miss, the function bypasses runtime access checks for the current
                                user. This is done to prevent inconsistencies in the data, which can occur when
                                certain blocks are inaccessible due to access restrictions.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>BlockStructureBlockData - A collected block structure,</term><definition><paragraph>starting at root_block_usage_key, with collected data
                                                            from each registered transformer.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_transformed()\ (openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager\ method)',\ 'openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.get_transformed',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureManager.get_transformed()" _toc_parts="openedx.core.djangoapps.content.block_structure.manager BlockStructureManager get_transformed" class="BlockStructureManager" classes="sig sig-object py" fullname="BlockStructureManager.get_transformed" ids="openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.get_transformed" module="openedx.core.djangoapps.content.block_structure.manager"><desc_name classes="sig-name descname" xml:space="preserve">get_transformed</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformers</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">starting_block_usage_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">collected_block_structure</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the transformed Block Structure for the root_block_usage_key,
                                starting at starting_block_usage_key, getting block data from the cache
                                and modulestore, as needed.</paragraph>
                            <paragraph>Details: Similar to the get_collected method, except the transformers’
                                transform methods are also called.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>transformers</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers" reftitle="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers"><literal_emphasis>BlockStructureTransformers</literal_emphasis></reference>) – transformers to apply.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>starting_block_usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – in the block structure that is to be transformed.
                                                    If None, root_block_usage_key is used.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>collected_block_structure</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure retrieved from a prior call to
                                                    get_collected.  Can be optionally provided if already available,
                                                    for optimization.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user</literal_strong> (<reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User"><literal_emphasis>django.contrib.auth.models.User</literal_emphasis></reference>) – which the block structure is to be transformed.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>BlockStructureBlockData - A transformed block structure,</term><definition><paragraph>starting at starting_block_usage_key.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_collected_if_needed()\ (openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager\ method)',\ 'openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.update_collected_if_needed',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureManager.update_collected_if_needed()" _toc_parts="openedx.core.djangoapps.content.block_structure.manager BlockStructureManager update_collected_if_needed" class="BlockStructureManager" classes="sig sig-object py" fullname="BlockStructureManager.update_collected_if_needed" ids="openedx.core.djangoapps.content.block_structure.manager.BlockStructureManager.update_collected_if_needed" module="openedx.core.djangoapps.content.block_structure.manager"><desc_name classes="sig-name descname" xml:space="preserve">update_collected_if_needed</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The store is updated with newly collected transformers data from
                                the modulestore, only if the data in the store is outdated.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.models openedx-core-djangoapps-content-block-structure-models-module" names="openedx.core.djangoapps.content.block_structure.models\ module">
            <title>openedx.core.djangoapps.content.block_structure.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.models',\ 'module-openedx.core.djangoapps.content.block_structure.models',\ '',\ None]"></index>
            <paragraph>Models used by the block structure framework.</paragraph>
            <index entries="['single',\ 'BlockStructureModel\ (class\ in\ openedx.core.djangoapps.content.block_structure.models)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureModel" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel" class="" classes="sig sig-object py" fullname="BlockStructureModel" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureModel</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">TimeStampedModel</literal></paragraph>
                    <paragraph>Model for storing Block Structure information.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'BlockStructureModel.DoesNotExist',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="BlockStructureModel.DoesNotExist" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel DoesNotExist" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.DoesNotExist" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.DoesNotExist" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'BlockStructureModel.MultipleObjectsReturned',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="BlockStructureModel.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel MultipleObjectsReturned" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.MultipleObjectsReturned" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.MultipleObjectsReturned" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'UNIQUENESS_FIELDS\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.UNIQUENESS_FIELDS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.UNIQUENESS_FIELDS" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel UNIQUENESS_FIELDS" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.UNIQUENESS_FIELDS" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.UNIQUENESS_FIELDS" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">UNIQUENESS_FIELDS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>['data_usage_key', 'data_version', 'data_edit_timestamp', 'transformers_schema_version', 'block_structure_schema_version']</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'VERSION_FIELDS\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.VERSION_FIELDS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.VERSION_FIELDS" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel VERSION_FIELDS" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.VERSION_FIELDS" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.VERSION_FIELDS" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">VERSION_FIELDS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>['data_version', 'data_edit_timestamp', 'transformers_schema_version', 'block_structure_schema_version']</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'block_structure_schema_version\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.block_structure_schema_version',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.block_structure_schema_version" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel block_structure_schema_version" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.block_structure_schema_version" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.block_structure_schema_version" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">block_structure_schema_version</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'created\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.created',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.created" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel created" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.created" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.created" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">created</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'data\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.data" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel data" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.data" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The descriptor for the file attribute on the model instance. Return a
                                FieldFile when accessed so you can write code like:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">&gt;&gt;&gt; from myapp.models import MyModel
&gt;&gt;&gt; instance = MyModel.objects.get(pk=1)
&gt;&gt;&gt; instance.file.size</literal_block>
                            <paragraph>Assign a file object on assignment so you can do:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">&gt;&gt;&gt; with open('/path/to/hello.world') as f:
...     instance.file = File(f)</literal_block>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'data_edit_timestamp\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_edit_timestamp',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.data_edit_timestamp" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel data_edit_timestamp" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.data_edit_timestamp" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_edit_timestamp" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">data_edit_timestamp</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'data_usage_key\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_usage_key',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.data_usage_key" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel data_usage_key" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.data_usage_key" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_usage_key" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">data_usage_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>DO NOT REUSE THIS CLASS. Provided for backwards compatibility only!</paragraph>
                            <paragraph>A placeholder class that provides a way to set the attribute on the model.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'data_version\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_version',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.data_version" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel data_version" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.data_version" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.data_version" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">data_version</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the entry associated with the given data_usage_key.
                                :raises BlockStructureNotFound if an entry for data_usage_key is not found.:</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_created()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_next_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get_next_by_created()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get_next_by_created" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get_next_by_created" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_next_by_created" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_modified()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_next_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get_next_by_modified()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get_next_by_modified" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get_next_by_modified" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_next_by_modified" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_created()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_previous_by_created',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get_previous_by_created()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get_previous_by_created" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get_previous_by_created" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_previous_by_created" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_created</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoCreatedField: created&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_modified()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_previous_by_modified',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get_previous_by_modified()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get_previous_by_modified" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get_previous_by_modified" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_previous_by_modified" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_modified</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;model_utils.fields.AutoLastModifiedField: modified&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_serialized_data()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_serialized_data',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.get_serialized_data()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel get_serialized_data" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.get_serialized_data" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.get_serialized_data" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">get_serialized_data</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the collected data for this instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.id" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel id" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.id" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.id" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'modified\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.modified',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.modified" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel modified" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.modified" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.modified" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">modified</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.objects" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel objects" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.objects" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.objects" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transformers_schema_version\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.transformers_schema_version',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureModel.transformers_schema_version" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel transformers_schema_version" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.transformers_schema_version" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.transformers_schema_version" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">transformers_schema_version</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'update_or_create()\ (openedx.core.djangoapps.content.block_structure.models.BlockStructureModel\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.update_or_create',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureModel.update_or_create()" _toc_parts="openedx.core.djangoapps.content.block_structure.models BlockStructureModel update_or_create" class="BlockStructureModel" classes="sig sig-object py" fullname="BlockStructureModel.update_or_create" ids="openedx.core.djangoapps.content.block_structure.models.BlockStructureModel.update_or_create" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">update_or_create</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">serialized_data</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updates or creates the BlockStructureModel entry
                                for the given data_usage_key in the kwargs,
                                uploading serialized_data as the content data.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CustomizableFileField\ (class\ in\ openedx.core.djangoapps.content.block_structure.models)',\ 'openedx.core.djangoapps.content.block_structure.models.CustomizableFileField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CustomizableFileField" _toc_parts="openedx.core.djangoapps.content.block_structure.models CustomizableFileField" class="" classes="sig sig-object py" fullname="CustomizableFileField" ids="openedx.core.djangoapps.content.block_structure.models.CustomizableFileField" module="openedx.core.djangoapps.content.block_structure.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CustomizableFileField</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">FileField</literal></paragraph>
                    <paragraph>Subclass of FileField that allows custom settings to not
                        be serialized (hard-coded) in migrations. Otherwise,
                        migrations include optional settings for storage (such as
                        the storage class and bucket name); we don’t want to
                        create new migration files for each configuration change.</paragraph>
                    <index entries="['single',\ 'deconstruct()\ (openedx.core.djangoapps.content.block_structure.models.CustomizableFileField\ method)',\ 'openedx.core.djangoapps.content.block_structure.models.CustomizableFileField.deconstruct',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomizableFileField.deconstruct()" _toc_parts="openedx.core.djangoapps.content.block_structure.models CustomizableFileField deconstruct" class="CustomizableFileField" classes="sig sig-object py" fullname="CustomizableFileField.deconstruct" ids="openedx.core.djangoapps.content.block_structure.models.CustomizableFileField.deconstruct" module="openedx.core.djangoapps.content.block_structure.models"><desc_name classes="sig-name descname" xml:space="preserve">deconstruct</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return enough information to recreate the field as a 4-tuple:</paragraph>
                            <block_quote>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>The name of the field on the model, if contribute_to_class() has
                                            been run.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>The import path of the field, including the class, e.g.
                                            django.db.models.IntegerField. This should be the most portable
                                            version, so less specific may be better.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>A list of positional arguments.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>A dict of keyword arguments.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </block_quote>
                            <paragraph>Note that the positional or keyword arguments must contain values of
                                the following types (including inner values of collection types):</paragraph>
                            <block_quote>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>None, bool, str, int, float, complex, set, frozenset, list, tuple,
                                            dict</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>UUID</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>datetime.datetime (naive), datetime.date</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>top-level classes, top-level functions - will be referenced by their
                                            full import path</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Storage instances - these have their own deconstruct() method</paragraph>
                                    </list_item>
                                </bullet_list>
                            </block_quote>
                            <paragraph>This is because the values here must be serialized into a text format
                                (possibly new Python code, possibly JSON) and these are the only types
                                with encoding handlers defined.</paragraph>
                            <paragraph>There’s no need to return the exact way the field was instantiated this
                                time, just ensure that the resulting field is the same - prefer keyword
                                arguments over positional ones, and omit parameters with their default
                                values.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.signals openedx-core-djangoapps-content-block-structure-signals-module" names="openedx.core.djangoapps.content.block_structure.signals\ module">
            <title>openedx.core.djangoapps.content.block_structure.signals module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.signals',\ 'module-openedx.core.djangoapps.content.block_structure.signals',\ '',\ None]"></index>
            <paragraph>Signal handlers for invalidating cached data.</paragraph>
            <index entries="['single',\ 'update_block_structure_on_course_publish()\ (in\ module\ openedx.core.djangoapps.content.block_structure.signals)',\ 'openedx.core.djangoapps.content.block_structure.signals.update_block_structure_on_course_publish',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_block_structure_on_course_publish()" _toc_parts="openedx.core.djangoapps.content.block_structure.signals update_block_structure_on_course_publish" class="" classes="sig sig-object py" fullname="update_block_structure_on_course_publish" ids="openedx.core.djangoapps.content.block_structure.signals.update_block_structure_on_course_publish" module="openedx.core.djangoapps.content.block_structure.signals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.signals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_block_structure_on_course_publish</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sender</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Catches the signal that a course has been published in the module
                        store and creates/updates the corresponding cache entry.
                        Ignores publish signals from content libraries.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.store openedx-core-djangoapps-content-block-structure-store-module" names="openedx.core.djangoapps.content.block_structure.store\ module">
            <title>openedx.core.djangoapps.content.block_structure.store module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.store',\ 'module-openedx.core.djangoapps.content.block_structure.store',\ '',\ None]"></index>
            <paragraph>Module for the Storage of BlockStructure objects.</paragraph>
            <index entries="['single',\ 'BlockStructureStore\ (class\ in\ openedx.core.djangoapps.content.block_structure.store)',\ 'openedx.core.djangoapps.content.block_structure.store.BlockStructureStore',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureStore" _toc_parts="openedx.core.djangoapps.content.block_structure.store BlockStructureStore" class="" classes="sig sig-object py" fullname="BlockStructureStore" ids="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore" module="openedx.core.djangoapps.content.block_structure.store"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.store.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureStore</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cache</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Storage for BlockStructure objects.</paragraph>
                    <index entries="['single',\ 'add()\ (openedx.core.djangoapps.content.block_structure.store.BlockStructureStore\ method)',\ 'openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.add',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureStore.add()" _toc_parts="openedx.core.djangoapps.content.block_structure.store BlockStructureStore add" class="BlockStructureStore" classes="sig sig-object py" fullname="BlockStructureStore.add" ids="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.add" module="openedx.core.djangoapps.content.block_structure.store"><desc_name classes="sig-name descname" xml:space="preserve">add</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Stores and caches a compressed and pickled serialization of
                                the given block structure.</paragraph>
                            <paragraph>The data stored includes the structure’s
                                block relations, transformer data, and block data.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructure"><literal_emphasis>BlockStructure</literal_emphasis></reference>) – that is to be cached and stored.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'delete()\ (openedx.core.djangoapps.content.block_structure.store.BlockStructureStore\ method)',\ 'openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.delete',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureStore.delete()" _toc_parts="openedx.core.djangoapps.content.block_structure.store BlockStructureStore delete" class="BlockStructureStore" classes="sig sig-object py" fullname="BlockStructureStore.delete" ids="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.delete" module="openedx.core.djangoapps.content.block_structure.store"><desc_name classes="sig-name descname" xml:space="preserve">delete</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deletes the block structure for the given root_block_usage_key
                                from the cache and storage.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>root_block_usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – of the block structure that is to be removed.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.core.djangoapps.content.block_structure.store.BlockStructureStore\ method)',\ 'openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureStore.get()" _toc_parts="openedx.core.djangoapps.content.block_structure.store BlockStructureStore get" class="BlockStructureStore" classes="sig sig-object py" fullname="BlockStructureStore.get" ids="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.get" module="openedx.core.djangoapps.content.block_structure.store"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deserializes and returns the block structure starting at
                                root_block_usage_key, if found in the cache or storage.</paragraph>
                            <paragraph>The given root_block_usage_key must equate the
                                root_block_usage_key previously passed to the <title_reference>add</title_reference> method.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>root_block_usage_key</literal_strong> (<literal_emphasis>UsageKey</literal_emphasis>) – root of the block structure that is to be retrieved
                                            from the store.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>BlockStructure - The deserialized block structure starting
                                            at root_block_usage_key, if found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>BlockStructureNotFound if the root_block_usage_key is not</literal_strong> – </paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>found.</literal_strong> – </paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_up_to_date()\ (openedx.core.djangoapps.content.block_structure.store.BlockStructureStore\ method)',\ 'openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.is_up_to_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureStore.is_up_to_date()" _toc_parts="openedx.core.djangoapps.content.block_structure.store BlockStructureStore is_up_to_date" class="BlockStructureStore" classes="sig sig-object py" fullname="BlockStructureStore.is_up_to_date" ids="openedx.core.djangoapps.content.block_structure.store.BlockStructureStore.is_up_to_date" module="openedx.core.djangoapps.content.block_structure.store"><desc_name classes="sig-name descname" xml:space="preserve">is_up_to_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root_block_usage_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">modulestore</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns whether the data in storage for the given key is
                                already up-to-date with the version in the given modulestore.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.tasks openedx-core-djangoapps-content-block-structure-tasks-module" names="openedx.core.djangoapps.content.block_structure.tasks\ module">
            <title>openedx.core.djangoapps.content.block_structure.tasks module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.tasks',\ 'module-openedx.core.djangoapps.content.block_structure.tasks',\ '',\ None]"></index>
            <paragraph>Asynchronous tasks related to the Course Blocks sub-application.</paragraph>
            <index entries="['single',\ 'block_structure_task()\ (in\ module\ openedx.core.djangoapps.content.block_structure.tasks)',\ 'openedx.core.djangoapps.content.block_structure.tasks.block_structure_task',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="block_structure_task()" _toc_parts="openedx.core.djangoapps.content.block_structure.tasks block_structure_task" class="" classes="sig sig-object py" fullname="block_structure_task" ids="openedx.core.djangoapps.content.block_structure.tasks.block_structure_task" module="openedx.core.djangoapps.content.block_structure.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">block_structure_task</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Decorator for block structure tasks.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.transformer openedx-core-djangoapps-content-block-structure-transformer-module" names="openedx.core.djangoapps.content.block_structure.transformer\ module">
            <title>openedx.core.djangoapps.content.block_structure.transformer module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.transformer',\ 'module-openedx.core.djangoapps.content.block_structure.transformer',\ '',\ None]"></index>
            <paragraph>This module provides the abstract base class for all Block Structure
                Transformers.</paragraph>
            <index entries="['single',\ 'BlockStructureTransformer\ (class\ in\ openedx.core.djangoapps.content.block_structure.transformer)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureTransformer" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer" class="" classes="sig sig-object py" fullname="BlockStructureTransformer" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.transformer.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Abstract base class for all block structure transformers.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureTransformer.READ_VERSION" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer READ_VERSION" class="BlockStructureTransformer" classes="sig sig-object py" fullname="BlockStructureTransformer.READ_VERSION" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.READ_VERSION" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>0</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="BlockStructureTransformer.WRITE_VERSION" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer WRITE_VERSION" class="BlockStructureTransformer" classes="sig sig-object py" fullname="BlockStructureTransformer.WRITE_VERSION" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.WRITE_VERSION" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>0</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformer.collect()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer collect" class="BlockStructureTransformer" classes="sig sig-object py" fullname="BlockStructureTransformer.collect" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.collect" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects and stores any xBlock and modulestore data into the
                                block_structure that’s necessary for later execution of the
                                transformer’s transform method. Transformers should store such
                                data in the block_structure using the following methods:</paragraph>
                            <block_quote>
                                <paragraph>set_transformer_data
                                    set_transformer_block_field
                                    request_xblock_fields</paragraph>
                            </block_quote>
                            <paragraph>Transformers can call block_structure.request_xblock_fields for
                                any common xBlock fields that should be collected by the
                                framework.</paragraph>
                            <paragraph>Any full block tree traversals should be implemented in this
                                collect phase, leaving the transform phase for fast and direct
                                access to a sub-block. If a block’s transform output is
                                dependent on its ancestors’ data, the ancestor’s data should be
                                percolated down to the descendants. So when a (non-root) block
                                is directly accessed in the transform, all of its relevant data
                                is readily available (without needing to access its ancestors).</paragraph>
                            <paragraph>Traversals of the block_structure can be implemented using the
                                following methods:</paragraph>
                            <block_quote>
                                <paragraph>topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureModulestoreData"><literal_emphasis>BlockStructureModulestoreData</literal_emphasis></reference>) – block structure that is to be modified with collected
                                            data to be cached for the transformer.</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformer.name()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer name" class="BlockStructureTransformer" classes="sig sig-object py" fullname="BlockStructureTransformer.name" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.name" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class. It is used to
                                identify the transformer’s cached data. So it should be unique
                                and not conflict with other transformers. Consider using the
                                same name that is used in the Transformer Registry. For example,
                                for Stevedore, it is specified in the setup.py file.</paragraph>
                            <paragraph>Once the transformer is in use and its data is cached, do not
                                modify this name value without consideration of backward
                                compatibility with previously collected data.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformer.transform()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer BlockStructureTransformer transform" class="BlockStructureTransformer" classes="sig sig-object py" fullname="BlockStructureTransformer.transform" ids="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer.transform" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">abstractmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the given block_structure for the given usage_info,
                                assuming the block_structure contains cached data from a prior
                                call to the collect method of the latest version of the
                                Transformer.</paragraph>
                            <paragraph>No access to the modulestore nor instantiation of xBlocks should
                                be performed during the execution of this method. However,
                                accesses to user-specific data (outside of the modulestore and
                                not via xBlocks) is permitted in order to apply the transform
                                for the given usage_info.</paragraph>
                            <paragraph>Note: The root of the given block_structure is not necessarily
                                the same as the root of the block_structure passed to the prior
                                collect method. The collect method is given the top-most root
                                of the structure, while the transform method may be called upon
                                any sub-structure or even a single block within the originally
                                collected structure.</paragraph>
                            <paragraph>A Transformer may choose to remove entire sub-structures during
                                the transform method and may do so using the remove_block and
                                filter_with_removal methods.</paragraph>
                            <paragraph>Amongst the many methods available for a block_structure, the
                                following methods are commonly used during transforms:</paragraph>
                            <block_quote>
                                <paragraph>get_xblock_field
                                    get_transformer_data
                                    get_transformer_block_field
                                    remove_block_traversal
                                    filter_with_removal
                                    filter_topological_traversal
                                    topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'FilteringTransformerMixin\ (class\ in\ openedx.core.djangoapps.content.block_structure.transformer)',\ 'openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="FilteringTransformerMixin" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer FilteringTransformerMixin" class="" classes="sig sig-object py" fullname="FilteringTransformerMixin" ids="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.transformer.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">FilteringTransformerMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>Transformers may optionally choose to implement this mixin if their
                        transform logic can be broken apart into a lambda for optimization of
                        combined tree traversals.</paragraph>
                    <paragraph>For performance reasons, developers should try to implement this mixin
                        whenever possible - with this alternative, traversal of the entire block
                        structure happens only once for all transformers that implement
                        FilteringTransformerMixin.</paragraph>
                    <index entries="['single',\ 'transform()\ (openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="FilteringTransformerMixin.transform()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer FilteringTransformerMixin transform" class="FilteringTransformerMixin" classes="sig sig-object py" fullname="FilteringTransformerMixin.transform" ids="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin.transform" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>By defining this method, FilteringTransformers can be run individually
                                if desired. In normal operations, the filters returned from multiple
                                transform_block_filters calls will be combined and used in a single
                                tree traversal.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform_block_filters()\ (openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin.transform_block_filters',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="FilteringTransformerMixin.transform_block_filters()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer FilteringTransformerMixin transform_block_filters" class="FilteringTransformerMixin" classes="sig sig-object py" fullname="FilteringTransformerMixin.transform_block_filters" ids="openedx.core.djangoapps.content.block_structure.transformer.FilteringTransformerMixin.transform_block_filters" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">abstractmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">transform_block_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>This is an alternative to the standard transform method.</paragraph>
                            <paragraph>Returns a list of filter functions to be used for filtering out
                                any unwanted blocks in the given block_structure.</paragraph>
                            <paragraph>In addition to the commonly used methods listed above, the following
                                methods are commonly used by implementations of transform_block_filters:</paragraph>
                            <block_quote>
                                <paragraph>create_universal_filter
                                    create_removal_filter</paragraph>
                            </block_quote>
                            <paragraph>Note: Transformers that implement this alternative should be
                                independent of all other registered transformers as they may not
                                be applied in the order in which they were listed in the registry.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" refid="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'combine_filters()\ (in\ module\ openedx.core.djangoapps.content.block_structure.transformer)',\ 'openedx.core.djangoapps.content.block_structure.transformer.combine_filters',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="combine_filters()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer combine_filters" class="" classes="sig sig-object py" fullname="combine_filters" ids="openedx.core.djangoapps.content.block_structure.transformer.combine_filters" module="openedx.core.djangoapps.content.block_structure.transformer"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.transformer.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">combine_filters</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filters</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.transformer_registry openedx-core-djangoapps-content-block-structure-transformer-registry-module" names="openedx.core.djangoapps.content.block_structure.transformer_registry\ module">
            <title>openedx.core.djangoapps.content.block_structure.transformer_registry module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.transformer_registry',\ 'module-openedx.core.djangoapps.content.block_structure.transformer_registry',\ '',\ None]"></index>
            <paragraph>Block Structure Transformer Registry implemented using the platform’s
                PluginManager.</paragraph>
            <index entries="['single',\ 'TransformerRegistry\ (class\ in\ openedx.core.djangoapps.content.block_structure.transformer_registry)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TransformerRegistry" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry" class="" classes="sig sig-object py" fullname="TransformerRegistry" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.transformer_registry.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TransformerRegistry</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">PluginManager</literal></paragraph>
                    <paragraph>Registry for all of the block structure transformers that have been
                        made available.</paragraph>
                    <paragraph>All block structure transformers should implement
                        <title_reference>BlockStructureTransformer</title_reference>.</paragraph>
                    <index entries="['single',\ 'NAMESPACE\ (openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.NAMESPACE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TransformerRegistry.NAMESPACE" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry NAMESPACE" class="TransformerRegistry" classes="sig sig-object py" fullname="TransformerRegistry.NAMESPACE" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.NAMESPACE" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_name classes="sig-name descname" xml:space="preserve">NAMESPACE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.block_structure_transformer'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'USE_PLUGIN_MANAGER\ (openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry\ attribute)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.USE_PLUGIN_MANAGER',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TransformerRegistry.USE_PLUGIN_MANAGER" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry USE_PLUGIN_MANAGER" class="TransformerRegistry" classes="sig sig-object py" fullname="TransformerRegistry.USE_PLUGIN_MANAGER" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.USE_PLUGIN_MANAGER" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_name classes="sig-name descname" xml:space="preserve">USE_PLUGIN_MANAGER</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'find_unregistered()\ (openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.find_unregistered',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TransformerRegistry.find_unregistered()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry find_unregistered" class="TransformerRegistry" classes="sig sig-object py" fullname="TransformerRegistry.find_unregistered" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.find_unregistered" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">find_unregistered</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformers</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Find and returns the names of all the transformers from the
                                given list that aren’t registered with the platform’s
                                PluginManager.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>of</literal_strong> (<literal_emphasis>transformers</literal_emphasis><literal_emphasis> (</literal_emphasis><literal_emphasis>[</literal_emphasis><reference internal="True" refid="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal_emphasis>BlockStructureTransformer</literal_emphasis></reference><literal_emphasis>] </literal_emphasis><literal_emphasis>- List</literal_emphasis>) – transformers to check in the registry.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>set([string]) - Set of names of a subset of the given</term><definition><paragraph>transformers that weren’t found in the registry.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_registered_transformers()\ (openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.get_registered_transformers',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TransformerRegistry.get_registered_transformers()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry get_registered_transformers" class="TransformerRegistry" classes="sig sig-object py" fullname="TransformerRegistry.get_registered_transformers" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.get_registered_transformers" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_registered_transformers</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a set of all registered transformers.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph><definition_list><definition_list_item><term>{BlockStructureTransformer} - All transformers that are</term><definition><paragraph>registered with the platform’s PluginManager.</paragraph></definition></definition_list_item></definition_list></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_write_version_hash()\ (openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.get_write_version_hash',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TransformerRegistry.get_write_version_hash()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformer_registry TransformerRegistry get_write_version_hash" class="TransformerRegistry" classes="sig sig-object py" fullname="TransformerRegistry.get_write_version_hash" ids="openedx.core.djangoapps.content.block_structure.transformer_registry.TransformerRegistry.get_write_version_hash" module="openedx.core.djangoapps.content.block_structure.transformer_registry"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_write_version_hash</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Decorator to cache the result of a function for the life of a process.</paragraph>
                            <paragraph>If the return value of the function for the provided arguments has not
                                yet been cached, the function will be calculated and cached. If called
                                later with the same arguments, the cached value is returned
                                (not reevaluated).
                                <reference refuri="https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize">https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize</reference></paragraph>
                            <paragraph>WARNING: Only use this process_cached decorator for caching data that
                                is constant throughout the lifetime of a gunicorn worker process,
                                is costly to compute, and is required often.  Otherwise, it can lead to
                                unwanted memory leakage.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure.transformers openedx-core-djangoapps-content-block-structure-transformers-module" names="openedx.core.djangoapps.content.block_structure.transformers\ module">
            <title>openedx.core.djangoapps.content.block_structure.transformers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure.transformers',\ 'module-openedx.core.djangoapps.content.block_structure.transformers',\ '',\ None]"></index>
            <paragraph>Module for a collection of BlockStructureTransformers.</paragraph>
            <index entries="['single',\ 'BlockStructureTransformers\ (class\ in\ openedx.core.djangoapps.content.block_structure.transformers)',\ 'openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BlockStructureTransformers" _toc_parts="openedx.core.djangoapps.content.block_structure.transformers BlockStructureTransformers" class="" classes="sig sig-object py" fullname="BlockStructureTransformers" ids="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers" module="openedx.core.djangoapps.content.block_structure.transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content.block_structure.transformers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BlockStructureTransformers</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">transformers</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>The BlockStructureTransformers class encapsulates an ordered list of block
                        structure transformers.  It uses the Transformer Registry to verify the
                        the registration status of added transformers and to collect their data.
                        It provides aggregate functionality for collection and ordered
                        transformation of the transformers.</paragraph>
                    <paragraph>Clients are expected to access the list of transformers through the
                        class’ interface rather than directly.</paragraph>
                    <index entries="['single',\ 'collect()\ (openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformers.collect()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformers BlockStructureTransformers collect" class="BlockStructureTransformers" classes="sig sig-object py" fullname="BlockStructureTransformers.collect" ids="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.collect" module="openedx.core.djangoapps.content.block_structure.transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects data for each registered transformer.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformers.transform()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformers BlockStructureTransformers transform" class="BlockStructureTransformers" classes="sig sig-object py" fullname="BlockStructureTransformers.transform" ids="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.transform" module="openedx.core.djangoapps.content.block_structure.transformers"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The given block structure is transformed by each transformer in the
                                collection. Tranformers with filters are combined and run first in a
                                single course tree traversal, then remaining transformers are run in
                                the order that they were added.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verify_versions()\ (openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers\ class\ method)',\ 'openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.verify_versions',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BlockStructureTransformers.verify_versions()" _toc_parts="openedx.core.djangoapps.content.block_structure.transformers BlockStructureTransformers verify_versions" class="BlockStructureTransformers" classes="sig sig-object py" fullname="BlockStructureTransformers.verify_versions" ids="openedx.core.djangoapps.content.block_structure.transformers.BlockStructureTransformers.verify_versions" module="openedx.core.djangoapps.content.block_structure.transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">verify_versions</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns whether the collected data in the block structure is
                                incompatible with the current version of the registered Transformers.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Raises</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>TransformerDataIncompatible with information about all outdated</literal_strong> – </paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>Transformers.</literal_strong> – </paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content.block_structure module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content.block_structure',\ 'module-openedx.core.djangoapps.content.block_structure',\ '',\ None]"></index>
            <paragraph>The block_structure django app provides an extensible framework for caching
                data of block structures from the modulestore.</paragraph>
            <paragraph>Dual-Phase. The framework is meant to be used in 2 phases.</paragraph>
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Collect Phase (for expensive and full-tree traversals) - In the
                            first phase, the “collect” phase, any and all data from the
                            modulestore should be collected and cached for later access to
                            the block structure.  Instantiating any and all xBlocks in the block
                            structure is also done at this phase, since that is also (currently)
                            a costly operation.</paragraph>
                        <paragraph>Any full tree traversals should also be done during this phase. For
                            example, if data for a block depends on its parents, the traversal
                            should happen during the collection phase and any required data
                            for the block should be percolated down the tree and stored as
                            aggregate values on the descendants.  This allows for faster and
                            direct access to blocks in the Transform phase.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Transform Phase (for fast access to blocks) - In the second
                            phase, the “transform” phase, only the previously collected and
                            cached data should be accessed. There should be no access to the
                            modulestore or instantiation of xBlocks in this phase.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <paragraph>To make this framework extensible, the Transformer and
                Extensibility design patterns are used. This django app only
                provides the underlying framework for Block Structure Transformers
                and a Transformer Registry.  Clients are expected to provide actual
                implementations of Transformers or add them to the extensible Registry.</paragraph>
            <paragraph>Transformers. As inspired by
                <reference refuri="http://www.ccs.neu.edu/home/riccardo/courses/csu370-fa07/lect18.pdf">http://www.ccs.neu.edu/home/riccardo/courses/csu370-fa07/lect18.pdf</reference>,
                a Block Structure Transformer takes in a block structure (or tree) and
                manipulates the structure and the data of its blocks according to its
                own requirements. Its output can then be used for further
                transformations by other transformers down the pipeline.</paragraph>
            <paragraph>Note: For performance and space optimization, our implementation
                differs from the paper in that our transformers mutate the block
                structure in-place rather than returning a modified copy of it.</paragraph>
            <paragraph>Block Structure. The BlockStructure and its family of classes
                provided with this framework are the base data types for accessing
                and manipulating block structures. BlockStructures are constructed
                using the BlockStructureFactory and then used as the currency across
                Transformers.</paragraph>
            <paragraph>Registry. Transformers are registered using the platform’s
                PluginManager (e.g., Stevedore). This is currently done by updating
                setup.py.  Only registered transformers are called during the Collect
                Phase.  And only registered transformers can be used during the
                Transform phase.  Exceptions to this rule are any nested transformers
                that are contained within higher-order transformers - as long as the
                higher-order transformers are registered and appropriately call the
                contained transformers within them.</paragraph>
            <paragraph>Note: A partial subset (as an ordered list) of the registered
                transformers can be requested during the Transform phase, allowing
                the client to manipulate exactly which transformers to call.</paragraph>
            <paragraph>Links to Other Block Structure Related Documentation:</paragraph>
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference refuri="https://openedx.atlassian.net/wiki/spaces/AC/pages/154861855/Block+Structure+Cache+Invalidation+Proposal">https://openedx.atlassian.net/wiki/spaces/AC/pages/154861855/Block+Structure+Cache+Invalidation+Proposal</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference refuri="https://openedx.atlassian.net/wiki/spaces/AC/pages/34734111/Course+Block+Transformers">https://openedx.atlassian.net/wiki/spaces/AC/pages/34734111/Course+Block+Transformers</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference refuri="https://openedx.atlassian.net/wiki/spaces/AC/pages/41910826/Course+Blocks+API+Storage+Cache+Requirements">https://openedx.atlassian.net/wiki/spaces/AC/pages/41910826/Course+Blocks+API+Storage+Cache+Requirements</reference></paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
    </section>
</document>
