<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.content_tagging.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-content-tagging-package" names="openedx.core.djangoapps.content_tagging\ package">
        <title>openedx.core.djangoapps.content_tagging package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers">openedx.core.djangoapps.content_tagging.helpers package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#module-openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers">openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent"><literal>TaggedContent</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.block_id" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.block_id"><literal>TaggedContent.block_id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.category" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.category"><literal>TaggedContent.category</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.children" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.children"><literal>TaggedContent.children</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.display_name" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.display_name"><literal>TaggedContent.display_name</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.object_tags" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.TaggedContent.object_tags"><literal>TaggedContent.object_tags</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.build_object_tree_with_objecttags" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.build_object_tree_with_objecttags"><literal>build_object_tree_with_objecttags()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.iterate_with_level" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#openedx.core.djangoapps.content_tagging.helpers.objecttag_export_helpers.iterate_with_level"><literal>iterate_with_level()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.helpers" internal="True" refuri="openedx.core.djangoapps.content_tagging.helpers#module-openedx.core.djangoapps.content_tagging.helpers">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content_tagging.models">openedx.core.djangoapps.content_tagging.models package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.models.base" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#module-openedx.core.djangoapps.content_tagging.models.base">openedx.core.djangoapps.content_tagging.models.base module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg"><literal>TaxonomyOrg</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.DoesNotExist" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.DoesNotExist"><literal>TaxonomyOrg.DoesNotExist</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.MultipleObjectsReturned" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.MultipleObjectsReturned"><literal>TaxonomyOrg.MultipleObjectsReturned</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.RelType" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.RelType"><literal>TaxonomyOrg.RelType</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_organizations" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_organizations"><literal>TaxonomyOrg.get_organizations()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_rel_type_display" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_rel_type_display"><literal>TaxonomyOrg.get_rel_type_display()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_relationships" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.get_relationships"><literal>TaxonomyOrg.get_relationships()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.id" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.id"><literal>TaxonomyOrg.id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.objects" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.objects"><literal>TaxonomyOrg.objects</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.org" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.org"><literal>TaxonomyOrg.org</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.org_id" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.org_id"><literal>TaxonomyOrg.org_id</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.rel_type" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.rel_type"><literal>TaxonomyOrg.rel_type</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.taxonomy" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.taxonomy"><literal>TaxonomyOrg.taxonomy</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.taxonomy_id" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.taxonomy_id"><literal>TaxonomyOrg.taxonomy_id</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.models" internal="True" refuri="openedx.core.djangoapps.content_tagging.models#module-openedx.core.djangoapps.content_tagging.models">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api">openedx.core.djangoapps.content_tagging.rest_api package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1">openedx.core.djangoapps.content_tagging.rest_api.v1 package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.v1.filters" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#module-openedx.core.djangoapps.content_tagging.rest_api.v1.filters">openedx.core.djangoapps.content_tagging.rest_api.v1.filters module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.v1.serializers" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#module-openedx.core.djangoapps.content_tagging.rest_api.v1.serializers">openedx.core.djangoapps.content_tagging.rest_api.v1.serializers module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.v1.urls" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#module-openedx.core.djangoapps.content_tagging.rest_api.v1.urls">openedx.core.djangoapps.content_tagging.rest_api.v1.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.v1.views" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#module-openedx.core.djangoapps.content_tagging.rest_api.v1.views">openedx.core.djangoapps.content_tagging.rest_api.v1.views module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.v1" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api.v1#module-openedx.core.djangoapps.content_tagging.rest_api.v1">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api.urls" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api#module-openedx.core.djangoapps.content_tagging.rest_api.urls">openedx.core.djangoapps.content_tagging.rest_api.urls module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.content_tagging.rest_api" internal="True" refuri="openedx.core.djangoapps.content_tagging.rest_api#module-openedx.core.djangoapps.content_tagging.rest_api">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.api openedx-core-djangoapps-content-tagging-api-module" names="openedx.core.djangoapps.content_tagging.api\ module">
            <title>openedx.core.djangoapps.content_tagging.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.api',\ 'module-openedx.core.djangoapps.content_tagging.api',\ '',\ None]"></index>
            <paragraph>Content Tagging APIs</paragraph>
            <index entries="['single',\ 'copy_object_tags()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.copy_object_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="copy_object_tags()" _toc_parts="openedx.core.djangoapps.content_tagging.api copy_object_tags" class="" classes="sig sig-object py" fullname="copy_object_tags" ids="openedx.core.djangoapps.content_tagging.api.copy_object_tags" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">copy_object_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">source_content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dest_content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Copies the permitted object tags on source_object_id to dest_object_id.</paragraph>
                    <paragraph>If an source object tag is not available for use on the dest_object_id, it will not be copied.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_taxonomy()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.create_taxonomy',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_taxonomy()" _toc_parts="openedx.core.djangoapps.content_tagging.api create_taxonomy" class="" classes="sig sig-object py" fullname="create_taxonomy" ids="openedx.core.djangoapps.content_tagging.api.create_taxonomy" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_taxonomy</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">description</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enabled</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allow_multiple</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allow_free_text</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">export_id</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Taxonomy</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Creates, saves, and returns a new Taxonomy with the given attributes.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'export_tags_in_csv_file()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.export_tags_in_csv_file',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="export_tags_in_csv_file()" _toc_parts="openedx.core.djangoapps.content_tagging.api export_tags_in_csv_file" class="" classes="sig sig-object py" fullname="export_tags_in_csv_file" ids="openedx.core.djangoapps.content_tagging.api.export_tags_in_csv_file" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">export_tags_in_csv_file</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">object_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file_dir</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file_name</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Writes a CSV file with tags and taxonomies of all blocks of <title_reference>object_id</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'generate_csv_rows()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.generate_csv_rows',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="generate_csv_rows()" _toc_parts="openedx.core.djangoapps.content_tagging.api generate_csv_rows" class="" classes="sig sig-object py" fullname="generate_csv_rows" ids="openedx.core.djangoapps.content_tagging.api.generate_csv_rows" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">generate_csv_rows</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">object_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">buffer</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Iterator<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Returns a CSV string with tags and taxonomies of all blocks of <title_reference>object_id</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_all_object_tags()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.get_all_object_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_all_object_tags()" _toc_parts="openedx.core.djangoapps.content_tagging.api get_all_object_tags" class="" classes="sig sig-object py" fullname="get_all_object_tags" ids="openedx.core.djangoapps.content_tagging.api.get_all_object_tags" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_all_object_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prefetch_orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">bool</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">tuple<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>int<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>int<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Taxonomy<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Get all the object tags applied to components in the given course/library.</paragraph>
                    <paragraph>Includes any tags applied to the course/library as a whole.
                        Returns a tuple with a dictionary of grouped object tag values for all blocks and a dictionary of taxonomies.</paragraph>
                    <paragraph>If <title_reference>prefetch_orgs</title_reference> is set, then the returned ObjectTag taxonomies will have their TaxonomyOrgs prefetched,
                        which makes checking permissions faster.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_taxonomies_for_org()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.get_taxonomies_for_org',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_taxonomies_for_org()" _toc_parts="openedx.core.djangoapps.content_tagging.api get_taxonomies_for_org" class="" classes="sig sig-object py" fullname="get_taxonomies_for_org" ids="openedx.core.djangoapps.content_tagging.api.get_taxonomies_for_org" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_taxonomies_for_org</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enabled</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">org_short_name</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/models/querysets/#django.db.models.query.QuerySet">QuerySet</reference></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Generates a list of the enabled Taxonomies available for the given org, sorted by name.</paragraph>
                    <paragraph>We return a QuerySet here for ease of use with Django Rest Framework and other query-based use cases.
                        So be sure to use <title_reference>Taxonomy.cast()</title_reference> to cast these instances to the appropriate subclass before use.</paragraph>
                    <paragraph>If no <title_reference>org</title_reference> is provided, then only Taxonomies which are available for _all_ Organizations are returned.</paragraph>
                    <paragraph>If you want the disabled Taxonomies, pass enabled=False.
                        If you want all Taxonomies (both enabled and disabled), pass enabled=None.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_unassigned_taxonomies()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.get_unassigned_taxonomies',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_unassigned_taxonomies()" _toc_parts="openedx.core.djangoapps.content_tagging.api get_unassigned_taxonomies" class="" classes="sig sig-object py" fullname="get_unassigned_taxonomies" ids="openedx.core.djangoapps.content_tagging.api.get_unassigned_taxonomies" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_unassigned_taxonomies</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enabled</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/models/querysets/#django.db.models.query.QuerySet">QuerySet</reference></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Generate a list of the enabled orphaned Taxomonies, i.e. that do not belong to any
                        organization. We don’t use <title_reference>TaxonomyOrg.get_relationships</title_reference> as that returns
                        Taxonomies which are available for all Organizations when no <title_reference>org</title_reference> is provided</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'import_course_tags_from_csv()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.import_course_tags_from_csv',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="import_course_tags_from_csv()" _toc_parts="openedx.core.djangoapps.content_tagging.api import_course_tags_from_csv" class="" classes="sig sig-object py" fullname="import_course_tags_from_csv" ids="openedx.core.djangoapps.content_tagging.api.import_course_tags_from_csv" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">import_course_tags_from_csv</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">csv_path</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Import tags from a csv file generated on export.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_all_object_tags()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.set_all_object_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_all_object_tags()" _toc_parts="openedx.core.djangoapps.content_tagging.api set_all_object_tags" class="" classes="sig sig-object py" fullname="set_all_object_tags" ids="openedx.core.djangoapps.content_tagging.api.set_all_object_tags" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_all_object_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">object_tags</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>int<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Sets the tags for the given content object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_exported_object_tags()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.set_exported_object_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_exported_object_tags()" _toc_parts="openedx.core.djangoapps.content_tagging.api set_exported_object_tags" class="" classes="sig sig-object py" fullname="set_exported_object_tags" ids="openedx.core.djangoapps.content_tagging.api.set_exported_object_tags" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_exported_object_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exported_tags</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>int<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Sets the tags for the given exported content object.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_taxonomy_orgs()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.set_taxonomy_orgs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_taxonomy_orgs()" _toc_parts="openedx.core.djangoapps.content_tagging.api set_taxonomy_orgs" class="" classes="sig sig-object py" fullname="set_taxonomy_orgs" ids="openedx.core.djangoapps.content_tagging.api.set_taxonomy_orgs" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_taxonomy_orgs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">taxonomy</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Taxonomy</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">all_orgs</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">relationship</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="True" reftitle="openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.RelType" refuri="openedx.core.djangoapps.content_tagging.models#openedx.core.djangoapps.content_tagging.models.base.TaxonomyOrg.RelType">RelType</reference></desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">TaxonomyOrg.RelType.OWNER</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Updates the list of orgs associated with the given taxonomy.</paragraph>
                    <paragraph>Currently, we only have an “owner” relationship, but there may be other types added in future.</paragraph>
                    <paragraph>When an org has an “owner” relationship with a taxonomy, that taxonomy is available for use by content in that org,
                        mies</paragraph>
                    <paragraph>If <title_reference>all_orgs</title_reference>, then the taxonomy is associated with all organizations, and the <title_reference>orgs</title_reference> parameter is ignored.</paragraph>
                    <paragraph>If not <title_reference>all_orgs</title_reference>, the taxonomy is associated with each org in the <title_reference>orgs</title_reference> list. If that list is empty, the
                        taxonomy is not associated with any orgs.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'tag_object()\ (in\ module\ openedx.core.djangoapps.content_tagging.api)',\ 'openedx.core.djangoapps.content_tagging.api.tag_object',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="tag_object()" _toc_parts="openedx.core.djangoapps.content_tagging.api tag_object" class="" classes="sig sig-object py" fullname="tag_object" ids="openedx.core.djangoapps.content_tagging.api.tag_object" module="openedx.core.djangoapps.content_tagging.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">tag_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">object_id: str, taxonomy: ~openedx_tagging.core.tagging.models.base.Taxonomy, tags: list[str], object_tag_class: type[~openedx_tagging.core.tagging.models.base.ObjectTag] = &lt;class 'openedx_tagging.core.tagging.models.base.ObjectTag'&gt;</desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Replaces the existing ObjectTag entries for the given taxonomy + object_id
                        with the given list of tags, if the taxonomy can be used by the given object_id.</paragraph>
                    <paragraph>This is a wrapper around oel_tagging.tag_object that adds emitting the <title_reference>CONTENT_OBJECT_ASSOCIATIONS_CHANGED</title_reference> event
                        when tagging an object.</paragraph>
                    <paragraph>tags: A list of the values of the tags from this taxonomy to apply.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>object_tag_class: Optional. Use a proxy subclass of ObjectTag for additional</term>
                            <definition>
                                <paragraph>validation. (e.g. only allow tagging certain types of objects.)</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph>Raised Tag.DoesNotExist if the proposed tags are invalid for this taxonomy.
                        Preserves existing (valid) tags, adds new (valid) tags, and removes omitted
                        (or invalid) tags.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.apps openedx-core-djangoapps-content-tagging-apps-module" names="openedx.core.djangoapps.content_tagging.apps\ module">
            <title>openedx.core.djangoapps.content_tagging.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.apps',\ 'module-openedx.core.djangoapps.content_tagging.apps',\ '',\ None]"></index>
            <paragraph>Define the content tagging Django App.</paragraph>
            <index entries="['single',\ 'ContentTaggingConfig\ (class\ in\ openedx.core.djangoapps.content_tagging.apps)',\ 'openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTaggingConfig" _toc_parts="openedx.core.djangoapps.content_tagging.apps ContentTaggingConfig" class="" classes="sig sig-object py" fullname="ContentTaggingConfig" ids="openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig" module="openedx.core.djangoapps.content_tagging.apps"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTaggingConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <paragraph>App config for the content tagging feature</paragraph>
                    <index entries="['single',\ 'default_auto_field\ (openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig\ attribute)',\ 'openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.default_auto_field',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTaggingConfig.default_auto_field" _toc_parts="openedx.core.djangoapps.content_tagging.apps ContentTaggingConfig default_auto_field" class="ContentTaggingConfig" classes="sig sig-object py" fullname="ContentTaggingConfig.default_auto_field" ids="openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.default_auto_field" module="openedx.core.djangoapps.content_tagging.apps"><desc_name classes="sig-name descname" xml:space="preserve">default_auto_field</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'django.db.models.BigAutoField'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig\ attribute)',\ 'openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTaggingConfig.name" _toc_parts="openedx.core.djangoapps.content_tagging.apps ContentTaggingConfig name" class="ContentTaggingConfig" classes="sig sig-object py" fullname="ContentTaggingConfig.name" ids="openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.name" module="openedx.core.djangoapps.content_tagging.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.content_tagging'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig\ method)',\ 'openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTaggingConfig.ready()" _toc_parts="openedx.core.djangoapps.content_tagging.apps ContentTaggingConfig ready" class="ContentTaggingConfig" classes="sig sig-object py" fullname="ContentTaggingConfig.ready" ids="openedx.core.djangoapps.content_tagging.apps.ContentTaggingConfig.ready" module="openedx.core.djangoapps.content_tagging.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override this method in subclasses to run code when Django starts.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.auth openedx-core-djangoapps-content-tagging-auth-module" names="openedx.core.djangoapps.content_tagging.auth\ module">
            <title>openedx.core.djangoapps.content_tagging.auth module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.auth',\ 'module-openedx.core.djangoapps.content_tagging.auth',\ '',\ None]"></index>
            <paragraph>Functions to validate the access in content tagging actions</paragraph>
            <index entries="['single',\ 'has_view_object_tags_access()\ (in\ module\ openedx.core.djangoapps.content_tagging.auth)',\ 'openedx.core.djangoapps.content_tagging.auth.has_view_object_tags_access',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="has_view_object_tags_access()" _toc_parts="openedx.core.djangoapps.content_tagging.auth has_view_object_tags_access" class="" classes="sig sig-object py" fullname="has_view_object_tags_access" ids="openedx.core.djangoapps.content_tagging.auth.has_view_object_tags_access" module="openedx.core.djangoapps.content_tagging.auth"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.auth.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">has_view_object_tags_access</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">object_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.handlers openedx-core-djangoapps-content-tagging-handlers-module" names="openedx.core.djangoapps.content_tagging.handlers\ module">
            <title>openedx.core.djangoapps.content_tagging.handlers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.handlers',\ 'module-openedx.core.djangoapps.content_tagging.handlers',\ '',\ None]"></index>
            <paragraph>Automatic tagging of content</paragraph>
            <index entries="['single',\ 'auto_tag_course()\ (in\ module\ openedx.core.djangoapps.content_tagging.handlers)',\ 'openedx.core.djangoapps.content_tagging.handlers.auto_tag_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="auto_tag_course()" _toc_parts="openedx.core.djangoapps.content_tagging.handlers auto_tag_course" class="" classes="sig sig-object py" fullname="auto_tag_course" ids="openedx.core.djangoapps.content_tagging.handlers.auto_tag_course" module="openedx.core.djangoapps.content_tagging.handlers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.handlers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">auto_tag_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Automatically tag course based on their metadata</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'auto_tag_library_block()\ (in\ module\ openedx.core.djangoapps.content_tagging.handlers)',\ 'openedx.core.djangoapps.content_tagging.handlers.auto_tag_library_block',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="auto_tag_library_block()" _toc_parts="openedx.core.djangoapps.content_tagging.handlers auto_tag_library_block" class="" classes="sig sig-object py" fullname="auto_tag_library_block" ids="openedx.core.djangoapps.content_tagging.handlers.auto_tag_library_block" module="openedx.core.djangoapps.content_tagging.handlers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.handlers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">auto_tag_library_block</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Automatically tag Library Blocks based on metadata</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'auto_tag_xblock()\ (in\ module\ openedx.core.djangoapps.content_tagging.handlers)',\ 'openedx.core.djangoapps.content_tagging.handlers.auto_tag_xblock',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="auto_tag_xblock()" _toc_parts="openedx.core.djangoapps.content_tagging.handlers auto_tag_xblock" class="" classes="sig sig-object py" fullname="auto_tag_xblock" ids="openedx.core.djangoapps.content_tagging.handlers.auto_tag_xblock" module="openedx.core.djangoapps.content_tagging.handlers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.handlers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">auto_tag_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Automatically tag XBlock based on their metadata</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'delete_tag_xblock()\ (in\ module\ openedx.core.djangoapps.content_tagging.handlers)',\ 'openedx.core.djangoapps.content_tagging.handlers.delete_tag_xblock',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_tag_xblock()" _toc_parts="openedx.core.djangoapps.content_tagging.handlers delete_tag_xblock" class="" classes="sig sig-object py" fullname="delete_tag_xblock" ids="openedx.core.djangoapps.content_tagging.handlers.delete_tag_xblock" module="openedx.core.djangoapps.content_tagging.handlers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.handlers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_tag_xblock</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Automatically delete XBlock auto tags.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'duplicate_tags()\ (in\ module\ openedx.core.djangoapps.content_tagging.handlers)',\ 'openedx.core.djangoapps.content_tagging.handlers.duplicate_tags',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="duplicate_tags()" _toc_parts="openedx.core.djangoapps.content_tagging.handlers duplicate_tags" class="" classes="sig sig-object py" fullname="duplicate_tags" ids="openedx.core.djangoapps.content_tagging.handlers.duplicate_tags" module="openedx.core.djangoapps.content_tagging.handlers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.handlers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">duplicate_tags</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Duplicates tags associated with an XBlock whenever the block is duplicated to a new location.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.rules openedx-core-djangoapps-content-tagging-rules-module" names="openedx.core.djangoapps.content_tagging.rules\ module">
            <title>openedx.core.djangoapps.content_tagging.rules module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.rules',\ 'module-openedx.core.djangoapps.content_tagging.rules',\ '',\ None]"></index>
            <paragraph>Django rules-based permissions for tagging</paragraph>
            <index entries="['single',\ 'get_admin_orgs()\ (in\ module\ openedx.core.djangoapps.content_tagging.rules)',\ 'openedx.core.djangoapps.content_tagging.rules.get_admin_orgs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_admin_orgs()" _toc_parts="openedx.core.djangoapps.content_tagging.rules get_admin_orgs" class="" classes="sig sig-object py" fullname="get_admin_orgs" ids="openedx.core.djangoapps.content_tagging.rules.get_admin_orgs" module="openedx.core.djangoapps.content_tagging.rules"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.rules.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_admin_orgs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference></desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Returns a list of orgs that the given user is an org-level staff, from the given list of orgs.</paragraph>
                    <paragraph>If no orgs are provided, check all orgs</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_user_orgs()\ (in\ module\ openedx.core.djangoapps.content_tagging.rules)',\ 'openedx.core.djangoapps.content_tagging.rules.get_user_orgs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_user_orgs()" _toc_parts="openedx.core.djangoapps.content_tagging.rules get_user_orgs" class="" classes="sig sig-object py" fullname="get_user_orgs" ids="openedx.core.djangoapps.content_tagging.rules.get_user_orgs" module="openedx.core.djangoapps.content_tagging.rules"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.rules.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_user_orgs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference></desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Return a list of orgs that the given user is a member of (instructor or content creator),
                        from the given list of orgs.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_org_admin()\ (in\ module\ openedx.core.djangoapps.content_tagging.rules)',\ 'openedx.core.djangoapps.content_tagging.rules.is_org_admin',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_org_admin()" _toc_parts="openedx.core.djangoapps.content_tagging.rules is_org_admin" class="" classes="sig sig-object py" fullname="is_org_admin" ids="openedx.core.djangoapps.content_tagging.rules.is_org_admin" module="openedx.core.djangoapps.content_tagging.rules"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.rules.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_org_admin</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference></desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Return True if the given user is an admin for any of the given orgs.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_org_user()\ (in\ module\ openedx.core.djangoapps.content_tagging.rules)',\ 'openedx.core.djangoapps.content_tagging.rules.is_org_user',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_org_user()" _toc_parts="openedx.core.djangoapps.content_tagging.rules is_org_user" class="" classes="sig sig-object py" fullname="is_org_user" ids="openedx.core.djangoapps.content_tagging.rules.is_org_user" module="openedx.core.djangoapps.content_tagging.rules"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.rules.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_org_user</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n"><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.User">User</reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/contrib/auth/#django.contrib.auth.models.AnonymousUser">AnonymousUser</reference></desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">orgs</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Return True if the given user is a member of any of the given orgs.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.tasks openedx-core-djangoapps-content-tagging-tasks-module" names="openedx.core.djangoapps.content_tagging.tasks\ module">
            <title>openedx.core.djangoapps.content_tagging.tasks module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.tasks',\ 'module-openedx.core.djangoapps.content_tagging.tasks',\ '',\ None]"></index>
            <paragraph>Defines asynchronous celery task for auto-tagging content</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.toggles openedx-core-djangoapps-content-tagging-toggles-module" names="openedx.core.djangoapps.content_tagging.toggles\ module">
            <title>openedx.core.djangoapps.content_tagging.toggles module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.toggles',\ 'module-openedx.core.djangoapps.content_tagging.toggles',\ '',\ None]"></index>
            <paragraph>Toggles for content tagging</paragraph>
            <index entries="['single',\ 'is_tagging_feature_disabled()\ (in\ module\ openedx.core.djangoapps.content_tagging.toggles)',\ 'openedx.core.djangoapps.content_tagging.toggles.is_tagging_feature_disabled',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_tagging_feature_disabled()" _toc_parts="openedx.core.djangoapps.content_tagging.toggles is_tagging_feature_disabled" class="" classes="sig sig-object py" fullname="is_tagging_feature_disabled" ids="openedx.core.djangoapps.content_tagging.toggles.is_tagging_feature_disabled" module="openedx.core.djangoapps.content_tagging.toggles"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.toggles.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_tagging_feature_disabled</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a boolean if tagging feature list page is disabled</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.types openedx-core-djangoapps-content-tagging-types-module" names="openedx.core.djangoapps.content_tagging.types\ module">
            <title>openedx.core.djangoapps.content_tagging.types module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.types',\ 'module-openedx.core.djangoapps.content_tagging.types',\ '',\ None]"></index>
            <paragraph>Types used by content tagging API and implementation</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.urls openedx-core-djangoapps-content-tagging-urls-module" names="openedx.core.djangoapps.content_tagging.urls\ module">
            <title>openedx.core.djangoapps.content_tagging.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.urls',\ 'module-openedx.core.djangoapps.content_tagging.urls',\ '',\ None]"></index>
            <paragraph>Content Tagging URLs</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging.utils openedx-core-djangoapps-content-tagging-utils-module" names="openedx.core.djangoapps.content_tagging.utils\ module">
            <title>openedx.core.djangoapps.content_tagging.utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging.utils',\ 'module-openedx.core.djangoapps.content_tagging.utils',\ '',\ None]"></index>
            <paragraph>Utils functions for tagging</paragraph>
            <index entries="['single',\ 'TaggingRulesCache\ (class\ in\ openedx.core.djangoapps.content_tagging.utils)',\ 'openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TaggingRulesCache" _toc_parts="openedx.core.djangoapps.content_tagging.utils TaggingRulesCache" class="" classes="sig sig-object py" fullname="TaggingRulesCache" ids="openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache" module="openedx.core.djangoapps.content_tagging.utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TaggingRulesCache</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Caches data required for computing rules for the duration of the request.</paragraph>
                    <index entries="['single',\ 'clear()\ (openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache\ method)',\ 'openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.clear',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TaggingRulesCache.clear()" _toc_parts="openedx.core.djangoapps.content_tagging.utils TaggingRulesCache clear" class="TaggingRulesCache" classes="sig sig-object py" fullname="TaggingRulesCache.clear" ids="openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.clear" module="openedx.core.djangoapps.content_tagging.utils"><desc_name classes="sig-name descname" xml:space="preserve">clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Clears the rules cache.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_library_orgs()\ (openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache\ method)',\ 'openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.get_library_orgs',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TaggingRulesCache.get_library_orgs()" _toc_parts="openedx.core.djangoapps.content_tagging.utils TaggingRulesCache get_library_orgs" class="TaggingRulesCache" classes="sig sig-object py" fullname="TaggingRulesCache.get_library_orgs" ids="openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.get_library_orgs" module="openedx.core.djangoapps.content_tagging.utils"><desc_name classes="sig-name descname" xml:space="preserve">get_library_orgs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">org_names</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Returns the Organizations that are associated with libraries that the given user has explicitly been granted
                                access to.</paragraph>
                            <paragraph>These library orgs are cached for the duration of the request.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_orgs()\ (openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache\ method)',\ 'openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.get_orgs',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TaggingRulesCache.get_orgs()" _toc_parts="openedx.core.djangoapps.content_tagging.utils TaggingRulesCache get_orgs" class="TaggingRulesCache" classes="sig sig-object py" fullname="TaggingRulesCache.get_orgs" ids="openedx.core.djangoapps.content_tagging.utils.TaggingRulesCache.get_orgs" module="openedx.core.djangoapps.content_tagging.utils"><desc_name classes="sig-name descname" xml:space="preserve">get_orgs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">org_names</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">list<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Organization<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                        <desc_content>
                            <paragraph>Returns the Organizations with the given name(s), or all Organizations if no names given.</paragraph>
                            <paragraph>Organization instances are cached for the duration of the request.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'check_taxonomy_context_key_org()\ (in\ module\ openedx.core.djangoapps.content_tagging.utils)',\ 'openedx.core.djangoapps.content_tagging.utils.check_taxonomy_context_key_org',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_taxonomy_context_key_org()" _toc_parts="openedx.core.djangoapps.content_tagging.utils check_taxonomy_context_key_org" class="" classes="sig sig-object py" fullname="check_taxonomy_context_key_org" ids="openedx.core.djangoapps.content_tagging.utils.check_taxonomy_context_key_org" module="openedx.core.djangoapps.content_tagging.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_taxonomy_context_key_org</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">taxonomy</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Taxonomy</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">bool</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Returns True if the given taxonomy can tag a object with the given context_key.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_content_key_from_string()\ (in\ module\ openedx.core.djangoapps.content_tagging.utils)',\ 'openedx.core.djangoapps.content_tagging.utils.get_content_key_from_string',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_content_key_from_string()" _toc_parts="openedx.core.djangoapps.content_tagging.utils get_content_key_from_string" class="" classes="sig sig-object py" fullname="get_content_key_from_string" ids="openedx.core.djangoapps.content_tagging.utils.get_content_key_from_string" module="openedx.core.djangoapps.content_tagging.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_content_key_from_string</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key_str</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Get content key from string</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_context_key_from_key()\ (in\ module\ openedx.core.djangoapps.content_tagging.utils)',\ 'openedx.core.djangoapps.content_tagging.utils.get_context_key_from_key',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_context_key_from_key()" _toc_parts="openedx.core.djangoapps.content_tagging.utils get_context_key_from_key" class="" classes="sig sig-object py" fullname="get_context_key_from_key" ids="openedx.core.djangoapps.content_tagging.utils.get_context_key_from_key" module="openedx.core.djangoapps.content_tagging.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_context_key_from_key</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">content_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>UsageKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CollectionKey<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>ContainerKey</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Returns the context key from a given content key.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_context_key_from_key_string()\ (in\ module\ openedx.core.djangoapps.content_tagging.utils)',\ 'openedx.core.djangoapps.content_tagging.utils.get_context_key_from_key_string',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_context_key_from_key_string()" _toc_parts="openedx.core.djangoapps.content_tagging.utils get_context_key_from_key_string" class="" classes="sig sig-object py" fullname="get_context_key_from_key_string" ids="openedx.core.djangoapps.content_tagging.utils.get_context_key_from_key_string" module="openedx.core.djangoapps.content_tagging.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.content_tagging.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_context_key_from_key_string</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key_str</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">LibraryLocatorV2<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>CourseKey</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Get context key from an key string</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.content_tagging module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.content_tagging',\ 'module-openedx.core.djangoapps.content_tagging',\ '',\ None]"></index>
        </section>
    </section>
</document>
