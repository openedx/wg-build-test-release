<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.credit.api.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-credit-api-package" names="openedx.core.djangoapps.credit.api\ package">
        <title>openedx.core.djangoapps.credit.api package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.credit.api.eligibility openedx-core-djangoapps-credit-api-eligibility-module" names="openedx.core.djangoapps.credit.api.eligibility\ module">
            <title>openedx.core.djangoapps.credit.api.eligibility module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.credit.api.eligibility',\ 'module-openedx.core.djangoapps.credit.api.eligibility',\ '',\ None]"></index>
            <paragraph>APIs for configuring credit eligibility requirements and tracking
                whether a user has satisfied those requirements.</paragraph>
            <index entries="['single',\ 'get_credit_requirement_status()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.get_credit_requirement_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_requirement_status()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility get_credit_requirement_status" class="" classes="sig sig-object py" fullname="get_credit_requirement_status" ids="openedx.core.djangoapps.credit.api.eligibility.get_credit_requirement_status" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_requirement_status</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">namespace</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve the user’s status for each credit requirement in the course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The identifier for course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The identifier of the user</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <rubric>Example</rubric>
                    <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; get_credit_requirement_status("course-v1-edX-DemoX-1T2015", "john")</doctest_block>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>[</term>
                                <definition>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>{</term>
                                            <definition>
                                                <paragraph>“namespace”: “proctored_exam”,
                                                    “name”: “i4x://edX/DemoX/proctoring-block/final_uuid”,
                                                    “display_name”: “Proctored Mid Term Exam”,
                                                    “criteria”: {},
                                                    “reason”: {},
                                                    “status”: “satisfied”,
                                                    “status_date”: “2015-06-26 11:07:42”,
                                                    “order”: 1,</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                    <paragraph>},
                                        {</paragraph>
                                    <block_quote>
                                        <paragraph>“namespace”: “grade”,
                                            “name”: “i4x://edX/DemoX/proctoring-block/final_uuid”,
                                            “display_name”: “Minimum Passing Grade”,
                                            “criteria”: {“min_grade”: 0.8},
                                            “reason”: {“final_grade”: 0.95},
                                            “status”: “satisfied”,
                                            “status_date”: “2015-06-26 11:07:44”,
                                            “order”: 2,</paragraph>
                                    </block_quote>
                                    <paragraph>},</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>]</paragraph>
                    </block_quote>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of requirement statuses</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_credit_requirements()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.get_credit_requirements',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_requirements()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility get_credit_requirements" class="" classes="sig sig-object py" fullname="get_credit_requirements" ids="openedx.core.djangoapps.credit.api.eligibility.get_credit_requirements" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_requirements</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">namespace</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get credit eligibility requirements of a given course and namespace.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The identifier for course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>namespace</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Namespace of requirements</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <rubric>Example</rubric>
                    <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; get_credit_requirements("course-v1-edX-DemoX-1T2015")
    {
        requirements =
        [
            {
                "namespace": "proctored_exam",
                "name": "i4x://edX/DemoX/proctoring-block/final_uuid",
                "display_name": "Final Exam",
                "criteria": {},
            },
            {
                "namespace": "grade",
                "name": "grade",
                "display_name": "Grade",
                "criteria": {"min_grade": 0.8},
            },
        ]
    }</doctest_block>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Dict of requirements in the given namespace</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_eligibilities_for_user()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.get_eligibilities_for_user',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_eligibilities_for_user()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility get_eligibilities_for_user" class="" classes="sig sig-object py" fullname="get_eligibilities_for_user" ids="openedx.core.djangoapps.credit.api.eligibility.get_eligibilities_for_user" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_eligibilities_for_user</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve all courses or particular course for which the user is eligible
                        for credit.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>unicode</literal_emphasis>) – Identifier of the user.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>unicode</literal_emphasis>) – Identifier of the course.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <rubric>Example</rubric>
                    <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; get_eligibilities_for_user("ron")
[
    {
        "course_key": "edX/Demo_101/Fall",
        "deadline": "2015-10-23"
    },
    {
        "course_key": "edX/Demo_201/Spring",
        "deadline": "2015-11-15"
    },
    ...
]</doctest_block>
                    <paragraph>Returns: list</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_credit_course()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.is_credit_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_credit_course()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility is_credit_course" class="" classes="sig sig-object py" fullname="is_credit_course" ids="openedx.core.djangoapps.credit.api.eligibility.is_credit_course" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_credit_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check whether the course has been configured for credit.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – Identifier of the course.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True iff this is a credit course.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_user_eligible_for_credit()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.is_user_eligible_for_credit',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_user_eligible_for_credit()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility is_user_eligible_for_credit" class="" classes="sig sig-object py" fullname="is_user_eligible_for_credit" ids="openedx.core.djangoapps.credit.api.eligibility.is_user_eligible_for_credit" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_user_eligible_for_credit</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a boolean indicating if the user is eligible for credit for
                        the given course</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The identifier for user</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The identifier for course</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if user is eligible for the course else False</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'remove_credit_requirement_status()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.remove_credit_requirement_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_credit_requirement_status()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility remove_credit_requirement_status" class="" classes="sig sig-object py" fullname="remove_credit_requirement_status" ids="openedx.core.djangoapps.credit.api.eligibility.remove_credit_requirement_status" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_credit_requirement_status</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">req_namespace</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">req_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove the user’s requirement status.</paragraph>
                    <paragraph>This will remove the record from the credit requirement status table.
                        The user will still be eligible for the credit in a course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Username of the user</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – Identifier for the course associated
                                            with the requirement.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>req_namespace</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Namespace of the requirement
                                            (e.g. “grade” or “reverification”)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>req_name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Name of the requirement
                                            (e.g. “grade” or the location of the ICRV XBlock)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_credit_requirement_status()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.set_credit_requirement_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_credit_requirement_status()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility set_credit_requirement_status" class="" classes="sig sig-object py" fullname="set_credit_requirement_status" ids="openedx.core.djangoapps.credit.api.eligibility.set_credit_requirement_status" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_credit_requirement_status</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">req_namespace</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">req_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">status</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'satisfied'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">reason</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update the user’s requirement status.</paragraph>
                    <paragraph>This will record whether the user satisfied or failed a particular requirement
                        in a course.  If the user has satisfied all requirements, the user will be marked
                        as eligible for credit in the course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – User object to set credit requirement for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – Identifier for the course associated with the requirement.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>req_namespace</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Namespace of the requirement (e.g. “grade” or “reverification”)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>req_name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Name of the requirement (e.g. “grade” or the location of the ICRV XBlock)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>status</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Status of the requirement (either “satisfied” or “failed”)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>reason</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – Reason of the status</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'set_credit_requirements()\ (in\ module\ openedx.core.djangoapps.credit.api.eligibility)',\ 'openedx.core.djangoapps.credit.api.eligibility.set_credit_requirements',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="set_credit_requirements()" _toc_parts="openedx.core.djangoapps.credit.api.eligibility set_credit_requirements" class="" classes="sig sig-object py" fullname="set_credit_requirements" ids="openedx.core.djangoapps.credit.api.eligibility.set_credit_requirements" module="openedx.core.djangoapps.credit.api.eligibility"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.eligibility.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">set_credit_requirements</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">requirements</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Add requirements to given course.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The identifier for course</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>requirements</literal_strong> (<literal_emphasis>list</literal_emphasis>) – List of requirements to be added</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <rubric>Example</rubric>
                    <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; set_credit_requirements(
        "course-v1-edX-DemoX-1T2015",
        [
            {
                "namespace": "proctored_exam",
                "name": "i4x://edX/DemoX/proctoring-block/final_uuid",
                "display_name": "Final Exam",
                "criteria": {},
            },
            {
                "namespace": "grade",
                "name": "grade",
                "display_name": "Grade",
                "criteria": {"min_grade": 0.8},
            },
        ])</doctest_block>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.InvalidCreditRequirements" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.InvalidCreditRequirements"><literal_strong>InvalidCreditRequirements</literal_strong></reference> – </paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.credit.api.provider openedx-core-djangoapps-credit-api-provider-module" names="openedx.core.djangoapps.credit.api.provider\ module">
            <title>openedx.core.djangoapps.credit.api.provider module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.credit.api.provider',\ 'module-openedx.core.djangoapps.credit.api.provider',\ '',\ None]"></index>
            <paragraph>API for initiating and tracking requests for credit from a provider.</paragraph>
            <index entries="['single',\ 'check_keys_exist()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.check_keys_exist',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_keys_exist()" _toc_parts="openedx.core.djangoapps.credit.api.provider check_keys_exist" class="" classes="sig sig-object py" fullname="check_keys_exist" ids="openedx.core.djangoapps.credit.api.provider.check_keys_exist" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_keys_exist</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">shared_secret_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">provider_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Verify that a key is available for single or multiple key support scenarios.</paragraph>
                    <paragraph>Raise CreditProviderNotConfigured if no key available.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_credit_request()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.create_credit_request',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_credit_request()" _toc_parts="openedx.core.djangoapps.credit.api.provider create_credit_request" class="" classes="sig sig-object py" fullname="create_credit_request" ids="openedx.core.djangoapps.credit.api.provider.create_credit_request" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_credit_request</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">provider_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Initiate a request for credit from a credit provider.</paragraph>
                    <paragraph>This will return the parameters that the user’s browser will need to POST
                        to the credit provider.  It does NOT calculate the signature.</paragraph>
                    <paragraph>Only users who are eligible for credit (have satisfied all credit requirements) are allowed to make requests.</paragraph>
                    <paragraph>A provider can be configured either with <emphasis>integration enabled</emphasis> or not.
                        If automatic integration is disabled, this method will simply return
                        a URL to the credit provider and method set to “GET”, so the student can
                        visit the URL and request credit directly.  No database record will be created
                        to track these requests.</paragraph>
                    <paragraph>If automatic integration <emphasis>is</emphasis> enabled, then this will also return the parameters
                        that the user’s browser will need to POST to the credit provider.
                        These parameters will be digitally signed using a secret key shared with the credit provider.</paragraph>
                    <paragraph>A database record will be created to track the request with a 32-character UUID.
                        The returned dictionary can be used by the user’s browser to send a POST request to the credit provider.</paragraph>
                    <paragraph>If a pending request already exists, this function should return a request description with the same UUID.
                        (Other parameters, such as the user’s full name may be different than the original request).</paragraph>
                    <paragraph>If a completed request (either accepted or rejected) already exists, this function will
                        raise an exception.  Users are not allowed to make additional requests once a request
                        has been completed.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The identifier for the course.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>provider_id</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The identifier of the credit provider.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The user initiating the request.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns: dict</paragraph>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.UserIsNotEligible" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.UserIsNotEligible"><literal_strong>UserIsNotEligible</literal_strong></reference> – The user has not satisfied eligibility requirements for credit.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.CreditProviderNotConfigured" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.CreditProviderNotConfigured"><literal_strong>CreditProviderNotConfigured</literal_strong></reference> – The credit provider has not been configured for this course.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.RequestAlreadyCompleted" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.RequestAlreadyCompleted"><literal_strong>RequestAlreadyCompleted</literal_strong></reference> – The user has already submitted a request and received a response
                                                from the credit provider.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Example Usage:</term>
                            <definition>
                                <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; create_credit_request(course.id, "hogwarts", "ron")
{
    "url": "https://credit.example.com/request",
    "method": "POST",
    "parameters": {
        "request_uuid": "557168d0f7664fe59097106c67c3f847",
        "timestamp": 1434631630,
        "course_org": "HogwartsX",
        "course_num": "Potions101",
        "course_run": "1T2015",
        "final_grade": "0.95",
        "user_username": "ron",
        "user_email": "ron@example.com",
        "user_full_name": "Ron Weasley",
        "user_mailing_address": "",
        "user_country": "US",
        "signature": "cRCNjkE4IzY+erIjRwOQCpRILgOvXx4q2qvx141BCqI="
    }
}</doctest_block>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_credit_provider_info()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.get_credit_provider_info',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_provider_info()" _toc_parts="openedx.core.djangoapps.credit.api.provider get_credit_provider_info" class="" classes="sig sig-object py" fullname="get_credit_provider_info" ids="openedx.core.djangoapps.credit.api.provider.get_credit_provider_info" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_provider_info</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">provider_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <definition_list>
                        <definition_list_item>
                            <term>Retrieve the ‘CreditProvider’ model data against provided</term>
                            <definition>
                                <paragraph>credit provider.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>provider_id</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The identifier for the credit provider</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns: ‘CreditProvider’ data dictionary</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Example Usage:</term>
                            <definition>
                                <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; get_credit_provider_info("hogwarts")
{
    "provider_id": "hogwarts",
    "display_name": "Hogwarts School of Witchcraft and Wizardry",
    "provider_url": "https://credit.example.com/",
    "provider_status_url": "https://credit.example.com/status/",
    "provider_description: "A new model for the Witchcraft and Wizardry School System.",
    "enable_integration": False,
    "fulfillment_instructions": "
        &lt;p&gt;In order to fulfill credit, Hogwarts School of Witchcraft and Wizardry requires learners to:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;Sample instruction abc&lt;/li&gt;
        &lt;li&gt;Sample instruction xyz&lt;/li&gt;
        &lt;/ul&gt;",
    "thumbnail_url": "https://credit.example.com/logo.png"
}</doctest_block>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_credit_providers()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.get_credit_providers',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_providers()" _toc_parts="openedx.core.djangoapps.credit.api.provider get_credit_providers" class="" classes="sig sig-object py" fullname="get_credit_providers" ids="openedx.core.djangoapps.credit.api.provider.get_credit_providers" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_providers</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">providers_list</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve all available credit providers or filter on given providers_list.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>providers_list</literal_strong> (<literal_emphasis>list</literal_emphasis><literal_emphasis> of </literal_emphasis><literal_emphasis>strings</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – contains list of ids of credit providers</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>None.</literal_strong> (<literal_emphasis>or</literal_emphasis>)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of credit providers represented as dictionaries</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Response Values:</term>
                            <definition>
                                <doctest_block classes="doctest" xml:space="preserve">&gt;&gt;&gt; get_credit_providers(['hogwarts'])
[
    {
        "id": "hogwarts",
        "name": "Hogwarts School of Witchcraft and Wizardry",
        "url": "https://credit.example.com/",
        "status_url": "https://credit.example.com/status/",
        "description: "A new model for the Witchcraft and Wizardry School System.",
        "enable_integration": false,
        "fulfillment_instructions": "
        &lt;p&gt;In order to fulfill credit, Hogwarts School of Witchcraft and Wizardry requires learners to:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;Sample instruction abc&lt;/li&gt;
        &lt;li&gt;Sample instruction xyz&lt;/li&gt;
        &lt;/ul&gt;",
    },
    ...
]</doctest_block>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_credit_request_status()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.get_credit_request_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_request_status()" _toc_parts="openedx.core.djangoapps.credit.api.provider get_credit_request_status" class="" classes="sig sig-object py" fullname="get_credit_request_status" ids="openedx.core.djangoapps.credit.api.provider.get_credit_request_status" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_request_status</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the credit request status.</paragraph>
                    <paragraph>This function returns the status of credit request of user for given course.
                        It returns the latest request status for the any credit provider.
                        The valid status are ‘pending’, ‘approved’ or ‘rejected’.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The username of user</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – The course locator key</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A dictionary of credit request user has made if any</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_credit_requests_for_user()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.get_credit_requests_for_user',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_credit_requests_for_user()" _toc_parts="openedx.core.djangoapps.credit.api.provider get_credit_requests_for_user" class="" classes="sig sig-object py" fullname="get_credit_requests_for_user" ids="openedx.core.djangoapps.credit.api.provider.get_credit_requests_for_user" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_credit_requests_for_user</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">username</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve the status of a credit request.</paragraph>
                    <paragraph>Returns either “pending”, “approved”, or “rejected”</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>username</literal_strong> (<literal_emphasis>unicode</literal_emphasis>) – The username of the user who initiated the requests.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns: list</paragraph>
                    <paragraph>Example Usage:
                        &gt;&gt;&gt; get_credit_request_status_for_user(“bob”)
                        [</paragraph>
                    <block_quote>
                        <definition_list>
                            <definition_list_item>
                                <term>{</term>
                                <definition>
                                    <paragraph>“uuid”: “557168d0f7664fe59097106c67c3f847”,
                                        “timestamp”: 1434631630,
                                        “course_key”: “course-v1:HogwartsX+Potions101+1T2015”,
                                        “provider”: {</paragraph>
                                    <block_quote>
                                        <paragraph>“id”: “HogwartsX”,
                                            “display_name”: “Hogwarts School of Witchcraft and Wizardry”,</paragraph>
                                    </block_quote>
                                    <paragraph>},
                                        “status”: “pending”  # or “approved” or “rejected”</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>}</paragraph>
                    </block_quote>
                    <paragraph>]</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'update_credit_request_status()\ (in\ module\ openedx.core.djangoapps.credit.api.provider)',\ 'openedx.core.djangoapps.credit.api.provider.update_credit_request_status',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="update_credit_request_status()" _toc_parts="openedx.core.djangoapps.credit.api.provider update_credit_request_status" class="" classes="sig sig-object py" fullname="update_credit_request_status" ids="openedx.core.djangoapps.credit.api.provider.update_credit_request_status" module="openedx.core.djangoapps.credit.api.provider"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credit.api.provider.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">update_credit_request_status</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request_uuid</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">provider_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">status</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update the status of a credit request.</paragraph>
                    <paragraph>Approve or reject a request for a student to receive credit in a course
                        from a particular credit provider.</paragraph>
                    <paragraph>This function does NOT check that the status update is authorized.
                        The caller needs to handle authentication and authorization (checking the signature
                        of the message received from the credit provider)</paragraph>
                    <paragraph>The function is idempotent; if the request has already been updated to the status,
                        the function does nothing.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>request_uuid</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The unique identifier for the credit request.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>provider_id</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Identifier for the credit provider.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>status</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Either “approved” or “rejected”</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns: None</paragraph>
                    <field_list>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.CreditRequestNotFound" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.CreditRequestNotFound"><literal_strong>CreditRequestNotFound</literal_strong></reference> – No request exists that is associated with the given provider.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><reference internal="True" reftitle="openedx.core.djangoapps.credit.exceptions.InvalidCreditStatus" refuri="openedx.core.djangoapps.credit#openedx.core.djangoapps.credit.exceptions.InvalidCreditStatus"><literal_strong>InvalidCreditStatus</literal_strong></reference> – The status is not either “approved” or “rejected”.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.credit.api module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.credit.api',\ 'module-openedx.core.djangoapps.credit.api',\ '',\ None]"></index>
            <paragraph>Credit Python API.</paragraph>
            <paragraph>This module aggregates the API functions from the eligibility and provider APIs.</paragraph>
        </section>
    </section>
</document>
