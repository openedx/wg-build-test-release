<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.credentials.tasks.v1.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-credentials-tasks-v1-package" names="openedx.core.djangoapps.credentials.tasks.v1\ package">
        <title>openedx.core.djangoapps.credentials.tasks.v1 package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.credentials.tasks.v1.tasks openedx-core-djangoapps-credentials-tasks-v1-tasks-module" names="openedx.core.djangoapps.credentials.tasks.v1.tasks\ module">
            <title>openedx.core.djangoapps.credentials.tasks.v1.tasks module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.credentials.tasks.v1.tasks',\ 'module-openedx.core.djangoapps.credentials.tasks.v1.tasks',\ '',\ None]"></index>
            <paragraph>This file contains Celery tasks and utility functions supporting the Credentials IDA.</paragraph>
            <index entries="['single',\ 'certstr()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.certstr',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="certstr()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks certstr" class="" classes="sig sig-object py" fullname="certstr" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.certstr" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">certstr</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cert</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'gradestr()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.gradestr',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="gradestr()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks gradestr" class="" classes="sig sig-object py" fullname="gradestr" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.gradestr" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">gradestr</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">grade</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_course_run_in_a_program()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.is_course_run_in_a_program',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_course_run_in_a_program()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks is_course_run_in_a_program" class="" classes="sig sig-object py" fullname="is_course_run_in_a_program" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.is_course_run_in_a_program" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_course_run_in_a_program</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns true if the given course key is in any program at all. This functionality depends on data to be present in
                        the program cache. We don’t have an easy way to determine if a course run is in a program, so we must search through
                        each program (on a site-by-site basis).</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_run_key</literal_strong> (<literal_emphasis>CourseLocator</literal_emphasis>) – The course run key used we are using to verify program membership</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A boolean describing if the course run is part of a program</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'log_dry_run()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.log_dry_run',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="log_dry_run()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks log_dry_run" class="" classes="sig sig-object py" fullname="log_dry_run" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.log_dry_run" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">log_dry_run</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">certs</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">grades</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Give a preview of what certs/grades we will handle.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'paged_query()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.paged_query',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="paged_query()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks paged_query" class="" classes="sig sig-object py" fullname="paged_query" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.paged_query" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">paged_query</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">queryset</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">delay</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">page_size</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A generator that iterates through a queryset but only resolves chunks of it at once, to avoid overwhelming memory
                        with a giant query. Also adds an optional delay between yields, to help with load.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'send_grade_if_interesting()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.send_grade_if_interesting',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="send_grade_if_interesting()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks send_grade_if_interesting" class="" classes="sig sig-object py" fullname="send_grade_if_interesting" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.send_grade_if_interesting" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">send_grade_if_interesting</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">mode</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">status</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">letter_grade</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">percent_grade</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">grade_last_updated</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">verbose</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Checks if a grade is interesting to Credentials and schedules a Celery task if so. This is Credentials business
                        logic that has bled into the LMS. We want to filter here in order to not flood our task queue with a bunch of
                        signals, so we put up with it.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal_emphasis>User</literal_emphasis></reference>) – User associated with this grade update</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_run_key</literal_strong> (<literal_emphasis>CourseLocator</literal_emphasis>) – The course run key associated with this grade update</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>mode</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The “mode” for the specific course run (e.g. “verified”, “audit”, etc.)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>status</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The status of the Certificate associated with this grade update</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>letter_grade</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The letter grade associated with this grade update (e.g. “A”, “B”, or “pass” or “fail”)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>percent_grade</literal_strong> (<literal_emphasis>float</literal_emphasis>) – A number representing the learner’s grade in this course run</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>grade_last_updated</literal_strong> (<literal_emphasis>DateTime</literal_emphasis>) – DateTime object representing the last time the (percent) grade was updated in the
                                            LMS.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>verbose</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – A value determining the logging level desired for this grade update</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'send_notifications()\ (in\ module\ openedx.core.djangoapps.credentials.tasks.v1.tasks)',\ 'openedx.core.djangoapps.credentials.tasks.v1.tasks.send_notifications',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="send_notifications()" _toc_parts="openedx.core.djangoapps.credentials.tasks.v1.tasks send_notifications" class="" classes="sig sig-object py" fullname="send_notifications" ids="openedx.core.djangoapps.credentials.tasks.v1.tasks.send_notifications" module="openedx.core.djangoapps.credentials.tasks.v1.tasks"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.credentials.tasks.v1.tasks.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">send_notifications</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">certs</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">grades</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site_config</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">delay</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">page_size</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">100</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">verbose</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">notify_programs</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">revoke_program_certs</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Utility function responsible for bootstrapping certificate and grade updates to the Credentials IDA. We do this by
                        invoking existing code paths that should force the LMS to (re-)send data to Credentials.</paragraph>
                    <paragraph>First, we directly call our Django signal handlers responsible for updating the status of certificates throughout
                        the system. This will trigger attempts to send certificate status information to the Credentials IDA.</paragraph>
                    <paragraph>Then, we call a utility function (<title_reference>send_grade_if_interesting</title_reference>) that is responsible for determining if the
                        Credentials IDA cares about this particular grade update for a learner.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>certs</literal_strong> (<literal_emphasis>QuerySet</literal_emphasis>) – A collection of course certificates associated with the users we need to update</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>grades</literal_strong> (<literal_emphasis>QuerySet</literal_emphasis>) – A collection of grades associated with the users we need to update</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>site_config</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.site_configuration.models.SiteConfiguration" refuri="openedx.core.djangoapps.site_configuration#openedx.core.djangoapps.site_configuration.models.SiteConfiguration"><literal_emphasis>SiteConfiguration</literal_emphasis></reference>) – Optional, may be None. The site associated with the users we need to update.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>delay</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Delay (in seconds) to wait between queries</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>page_size</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Number of records to process from the certs or grades QuerySet at once. Used to handle load.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>verbose</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Used to determine level of logging output during grade updates</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>notify_programs</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Used to determine if an update should be sent to Credentials</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>revoke_program_certs</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Used to determine if the system should attempt revoking program certificates during
                                            this run of the <title_reference>notify_credentials</title_reference> management command</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.credentials.tasks.v1 module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.credentials.tasks.v1',\ 'module-openedx.core.djangoapps.credentials.tasks.v1',\ '',\ None]"></index>
        </section>
    </section>
</document>
