<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.ccxcon.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-ccxcon-package" names="openedx.core.djangoapps.ccxcon\ package">
        <title>openedx.core.djangoapps.ccxcon package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon.api openedx-core-djangoapps-ccxcon-api-module" names="openedx.core.djangoapps.ccxcon.api\ module">
            <title>openedx.core.djangoapps.ccxcon.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon.api',\ 'module-openedx.core.djangoapps.ccxcon.api',\ '',\ None]"></index>
            <paragraph>Module containing API functions for the CCXCon</paragraph>
            <index entries="['single',\ 'CCXConnServerError',\ 'openedx.core.djangoapps.ccxcon.api.CCXConnServerError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CCXConnServerError" _toc_parts="openedx.core.djangoapps.ccxcon.api CCXConnServerError" class="" classes="sig sig-object py" fullname="CCXConnServerError" ids="openedx.core.djangoapps.ccxcon.api.CCXConnServerError" module="openedx.core.djangoapps.ccxcon.api"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXConnServerError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Custom exception to be raised in case there is any
                        issue with the request to the server</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_info_to_ccxcon()\ (in\ module\ openedx.core.djangoapps.ccxcon.api)',\ 'openedx.core.djangoapps.ccxcon.api.course_info_to_ccxcon',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_info_to_ccxcon()" _toc_parts="openedx.core.djangoapps.ccxcon.api course_info_to_ccxcon" class="" classes="sig sig-object py" fullname="course_info_to_ccxcon" ids="openedx.core.djangoapps.ccxcon.api.course_info_to_ccxcon" module="openedx.core.djangoapps.ccxcon.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_info_to_ccxcon</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function that gathers informations about the course and
                        makes a post request to a CCXCon with the data.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_key</literal_strong> (<literal_emphasis>CourseLocator</literal_emphasis>) – the master course key</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_oauth_client()\ (in\ module\ openedx.core.djangoapps.ccxcon.api)',\ 'openedx.core.djangoapps.ccxcon.api.get_oauth_client',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_oauth_client()" _toc_parts="openedx.core.djangoapps.ccxcon.api get_oauth_client" class="" classes="sig sig-object py" fullname="get_oauth_client" ids="openedx.core.djangoapps.ccxcon.api.get_oauth_client" module="openedx.core.djangoapps.ccxcon.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_oauth_client</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">server_token_url</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">client_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">client_secret</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function that creates an oauth client and fetches a token.
                        It intentionally doesn’t handle errors.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>server_token_url</literal_strong> (<literal_emphasis>str</literal_emphasis>) – server URL where to get an authentication token</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>client_id</literal_strong> (<literal_emphasis>str</literal_emphasis>) – oauth client ID</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>client_secret</literal_strong> (<literal_emphasis>str</literal_emphasis>) – oauth client secret</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>an instance of OAuth2Session with a token</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>OAuth2Session</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_valid_url()\ (in\ module\ openedx.core.djangoapps.ccxcon.api)',\ 'openedx.core.djangoapps.ccxcon.api.is_valid_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_valid_url()" _toc_parts="openedx.core.djangoapps.ccxcon.api is_valid_url" class="" classes="sig sig-object py" fullname="is_valid_url" ids="openedx.core.djangoapps.ccxcon.api.is_valid_url" module="openedx.core.djangoapps.ccxcon.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_valid_url</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">url</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Helper function used to check if a string is a valid url.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>url</literal_strong> (<literal_emphasis>str</literal_emphasis>) – the url string to be validated</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>whether the url is valid or not</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon.apps openedx-core-djangoapps-ccxcon-apps-module" names="openedx.core.djangoapps.ccxcon.apps\ module">
            <title>openedx.core.djangoapps.ccxcon.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon.apps',\ 'module-openedx.core.djangoapps.ccxcon.apps',\ '',\ None]"></index>
            <paragraph>Configuration for CCX connector</paragraph>
            <index entries="['single',\ 'CCXConnectorConfig\ (class\ in\ openedx.core.djangoapps.ccxcon.apps)',\ 'openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXConnectorConfig" _toc_parts="openedx.core.djangoapps.ccxcon.apps CCXConnectorConfig" class="" classes="sig sig-object py" fullname="CCXConnectorConfig" ids="openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig" module="openedx.core.djangoapps.ccxcon.apps"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXConnectorConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig\ attribute)',\ 'openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXConnectorConfig.name" _toc_parts="openedx.core.djangoapps.ccxcon.apps CCXConnectorConfig name" class="CCXConnectorConfig" classes="sig sig-object py" fullname="CCXConnectorConfig.name" ids="openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.name" module="openedx.core.djangoapps.ccxcon.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.ccxcon'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ready()\ (openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig\ method)',\ 'openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.ready',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CCXConnectorConfig.ready()" _toc_parts="openedx.core.djangoapps.ccxcon.apps CCXConnectorConfig ready" class="CCXConnectorConfig" classes="sig sig-object py" fullname="CCXConnectorConfig.ready" ids="openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.ready" module="openedx.core.djangoapps.ccxcon.apps"><desc_name classes="sig-name descname" xml:space="preserve">ready</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override this method in subclasses to run code when Django starts.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verbose_name\ (openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig\ attribute)',\ 'openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.verbose_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXConnectorConfig.verbose_name" _toc_parts="openedx.core.djangoapps.ccxcon.apps CCXConnectorConfig verbose_name" class="CCXConnectorConfig" classes="sig sig-object py" fullname="CCXConnectorConfig.verbose_name" ids="openedx.core.djangoapps.ccxcon.apps.CCXConnectorConfig.verbose_name" module="openedx.core.djangoapps.ccxcon.apps"><desc_name classes="sig-name descname" xml:space="preserve">verbose_name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'CCX Connector'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon.models openedx-core-djangoapps-ccxcon-models-module" names="openedx.core.djangoapps.ccxcon.models\ module">
            <title>openedx.core.djangoapps.ccxcon.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon.models',\ 'module-openedx.core.djangoapps.ccxcon.models',\ '',\ None]"></index>
            <paragraph>Models for the ccxcon</paragraph>
            <index entries="['single',\ 'CCXCon\ (class\ in\ openedx.core.djangoapps.ccxcon.models)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CCXCon" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon" class="" classes="sig sig-object py" fullname="CCXCon" ids="openedx.core.djangoapps.ccxcon.models.CCXCon" module="openedx.core.djangoapps.ccxcon.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.ccxcon.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CCXCon</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Model</literal></paragraph>
                    <paragraph>Definition of the CCXCon model.
                        Stores the url and the oauth key to access the REST APIs on the CCX Connector.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'CCXCon.DoesNotExist',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CCXCon.DoesNotExist" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon DoesNotExist" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.DoesNotExist" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.DoesNotExist" module="openedx.core.djangoapps.ccxcon.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CCXCon.MultipleObjectsReturned',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CCXCon.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon MultipleObjectsReturned" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.MultipleObjectsReturned" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.MultipleObjectsReturned" module="openedx.core.djangoapps.ccxcon.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.id" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon id" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.id" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.id" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'oauth_client_id\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.oauth_client_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.oauth_client_id" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon oauth_client_id" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.oauth_client_id" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.oauth_client_id" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">oauth_client_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'oauth_client_secret\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.oauth_client_secret',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.oauth_client_secret" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon oauth_client_secret" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.oauth_client_secret" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.oauth_client_secret" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">oauth_client_secret</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'objects\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.objects',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.objects" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon objects" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.objects" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.objects" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">objects</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;django.db.models.manager.Manager object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'title\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.title',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.title" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon title" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.title" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.title" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">title</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'url\ (openedx.core.djangoapps.ccxcon.models.CCXCon\ attribute)',\ 'openedx.core.djangoapps.ccxcon.models.CCXCon.url',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CCXCon.url" _toc_parts="openedx.core.djangoapps.ccxcon.models CCXCon url" class="CCXCon" classes="sig sig-object py" fullname="CCXCon.url" ids="openedx.core.djangoapps.ccxcon.models.CCXCon.url" module="openedx.core.djangoapps.ccxcon.models"><desc_name classes="sig-name descname" xml:space="preserve">url</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon.signals openedx-core-djangoapps-ccxcon-signals-module" names="openedx.core.djangoapps.ccxcon.signals\ module">
            <title>openedx.core.djangoapps.ccxcon.signals module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon.signals',\ 'module-openedx.core.djangoapps.ccxcon.signals',\ '',\ None]"></index>
            <paragraph>Signal handler for posting course updated to CCXCon</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon.tasks openedx-core-djangoapps-ccxcon-tasks-module" names="openedx.core.djangoapps.ccxcon.tasks\ module">
            <title>openedx.core.djangoapps.ccxcon.tasks module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon.tasks',\ 'module-openedx.core.djangoapps.ccxcon.tasks',\ '',\ None]"></index>
            <paragraph>This file contains celery tasks for ccxcon</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.ccxcon module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.ccxcon',\ 'module-openedx.core.djangoapps.ccxcon',\ '',\ None]"></index>
            <paragraph>The ccxcon app contains the models and the APIs to  interact
                with the <title_reference>CCX Connector</title_reference>, an application external to openedx
                that is used to interact with the CCX and their master courses.</paragraph>
            <paragraph>The ccxcon app needs to be placed in <title_reference>openedx.core.djangoapps</title_reference>
                because it will be used both in CMS and LMS.</paragraph>
        </section>
    </section>
</document>
