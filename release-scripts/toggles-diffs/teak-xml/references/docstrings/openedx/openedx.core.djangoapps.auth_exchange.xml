<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.auth_exchange.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-auth-exchange-package" names="openedx.core.djangoapps.auth_exchange\ package">
        <title>openedx.core.djangoapps.auth_exchange package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.auth_exchange.forms openedx-core-djangoapps-auth-exchange-forms-module" names="openedx.core.djangoapps.auth_exchange.forms\ module">
            <title>openedx.core.djangoapps.auth_exchange.forms module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.auth_exchange.forms',\ 'module-openedx.core.djangoapps.auth_exchange.forms',\ '',\ None]"></index>
            <paragraph>Forms to support third-party to first-party OAuth 2.0 access token exchange</paragraph>
            <index entries="['single',\ 'AccessTokenExchangeForm\ (class\ in\ openedx.core.djangoapps.auth_exchange.forms)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AccessTokenExchangeForm" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm" class="" classes="sig sig-object py" fullname="AccessTokenExchangeForm" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm" module="openedx.core.djangoapps.auth_exchange.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AccessTokenExchangeForm</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">oauth2_adapter</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Form</literal></paragraph>
                    <paragraph>Form for access token exchange endpoint</paragraph>
                    <index entries="['single',\ 'OAUTH2_PROVIDER\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.OAUTH2_PROVIDER',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeForm.OAUTH2_PROVIDER" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm OAUTH2_PROVIDER" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.OAUTH2_PROVIDER" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.OAUTH2_PROVIDER" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">OAUTH2_PROVIDER</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'DEFAULT_SCOPES': {'email': 'Know your email address', 'profile': 'Know your name and username', 'read': 'Read access', 'write': 'Write access'}, 'ERROR_RESPONSE_WITH_SCOPES': True, 'OAUTH2_VALIDATOR_CLASS': 'openedx.core.djangoapps.oauth_dispatch.dot_overrides.validators.EdxOAuth2Validator', 'REFRESH_TOKEN_EXPIRE_SECONDS': 7776000, 'REQUEST_APPROVAL_PROMPT': 'auto_even_if_expired', 'SCOPES': {'certificates:read': 'Retrieve your course certificates', 'email': 'Know your email address', 'grades:read': 'Retrieve your grades for your enrolled courses', 'profile': 'Know your name and username', 'read': 'Read access', 'tpa:read': 'Retrieve your third-party authentication username mapping', 'user_id': 'Know your user identifier', 'write': 'Write access'}, 'SCOPES_BACKEND_CLASS': 'openedx.core.djangoapps.oauth_dispatch.scopes.ApplicationModelScopes'}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'base_fields\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.base_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeForm.base_fields" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm base_fields" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.base_fields" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.base_fields" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">base_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'access_token': &lt;django.forms.fields.CharField object&gt;, 'client_id': &lt;django.forms.fields.CharField object&gt;, 'scope': &lt;openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean()\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeForm.clean()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm clean" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.clean" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Hook for doing any extra form-wide cleaning after Field.clean() has been
                                called on every field. Any ValidationError raised by this method will
                                not be associated with a particular field; it will have a special-case
                                association with the field named ‘__all__’.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_access_token()\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_access_token',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeForm.clean_access_token()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm clean_access_token" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.clean_access_token" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_access_token" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_access_token</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates and returns the “access_token” field.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_client_id()\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_client_id',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeForm.clean_client_id()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm clean_client_id" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.clean_client_id" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_client_id" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_client_id</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates and returns the “client_id” field.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean_scope()\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_scope',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeForm.clean_scope()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm clean_scope" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.clean_scope" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.clean_scope" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">clean_scope</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The scope is assembled by combining all the set flags into a single
                                integer value which we can later check again for set bits.
                                If <emphasis>no</emphasis> scope is set, we return the default scope which is the first
                                defined scope in <literal classes="xref py py-attr">provider.constants.SCOPES</literal>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'declared_fields\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.declared_fields',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeForm.declared_fields" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm declared_fields" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.declared_fields" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.declared_fields" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">declared_fields</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>{'access_token': &lt;django.forms.fields.CharField object&gt;, 'client_id': &lt;django.forms.fields.CharField object&gt;, 'scope': &lt;openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField object&gt;}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'media\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ property)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.media',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="AccessTokenExchangeForm.media" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm media" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.media" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.media" module="openedx.core.djangoapps.auth_exchange.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">media</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Return all media required to render the widgets on this form.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'scope_choices\ (openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.scope_choices',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeForm.scope_choices" _toc_parts="openedx.core.djangoapps.auth_exchange.forms AccessTokenExchangeForm scope_choices" class="AccessTokenExchangeForm" classes="sig sig-object py" fullname="AccessTokenExchangeForm.scope_choices" ids="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm.scope_choices" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">scope_choices</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>dict_items([('read', 'Read access'), ('write', 'Write access'), ('email', 'Know your email address'), ('profile', 'Know your name and username'), ('certificates:read', 'Retrieve your course certificates'), ('grades:read', 'Retrieve your grades for your enrolled courses'), ('tpa:read', 'Retrieve your third-party authentication username mapping'), ('user_id', 'Know your user identifier')])</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'OAuthValidationError',\ 'openedx.core.djangoapps.auth_exchange.forms.OAuthValidationError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="OAuthValidationError" _toc_parts="openedx.core.djangoapps.auth_exchange.forms OAuthValidationError" class="" classes="sig sig-object py" fullname="OAuthValidationError" ids="openedx.core.djangoapps.auth_exchange.forms.OAuthValidationError" module="openedx.core.djangoapps.auth_exchange.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">OAuthValidationError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Exception to throw inside <reference internal="True" refid="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm" reftitle="openedx.core.djangoapps.auth_exchange.forms.AccessTokenExchangeForm"><literal classes="xref py py-class">AccessTokenExchangeForm</literal></reference> if any OAuth2 related errors
                        are encountered such as invalid grant type, invalid client, etc.
                        <reference internal="True" refid="openedx.core.djangoapps.auth_exchange.forms.OAuthValidationError" reftitle="openedx.core.djangoapps.auth_exchange.forms.OAuthValidationError"><literal classes="xref py py-attr">OAuthValidationError</literal></reference> expects a dictionary outlining the OAuth error
                        as its first argument when instantiating.
                        :example:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">class GrantValidationForm(AccessTokenExchangeForm):
    grant_type = forms.CharField()
    def clean_grant(self):
        if not self.cleaned_data.get('grant_type') == 'code':
            raise OAuthValidationError({
                'error': 'invalid_grant',
                'error_description': "%s is not a valid grant type" % (
                    self.cleaned_data.get('grant_type'))
            })</literal_block>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ScopeChoiceField\ (class\ in\ openedx.core.djangoapps.auth_exchange.forms)',\ 'openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ScopeChoiceField" _toc_parts="openedx.core.djangoapps.auth_exchange.forms ScopeChoiceField" class="" classes="sig sig-object py" fullname="ScopeChoiceField" ids="openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField" module="openedx.core.djangoapps.auth_exchange.forms"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.forms.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ScopeChoiceField</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="keyword-only-separator o"><abbreviation explanation="Keyword-only parameters separator (PEP 3102)">*</abbreviation></desc_sig_operator></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">choices</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">()</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ChoiceField</literal></paragraph>
                    <paragraph>Custom form field that seperates values on space</paragraph>
                    <index entries="['single',\ 'to_python()\ (openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.to_python',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ScopeChoiceField.to_python()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms ScopeChoiceField to_python" class="ScopeChoiceField" classes="sig sig-object py" fullname="ScopeChoiceField.to_python" ids="openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.to_python" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">to_python</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a string.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'validate()\ (openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField\ method)',\ 'openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.validate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ScopeChoiceField.validate()" _toc_parts="openedx.core.djangoapps.auth_exchange.forms ScopeChoiceField validate" class="ScopeChoiceField" classes="sig sig-object py" fullname="ScopeChoiceField.validate" ids="openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.validate" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">validate</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validates that the input is a list or tuple.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'widget\ (openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.widget',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ScopeChoiceField.widget" _toc_parts="openedx.core.djangoapps.auth_exchange.forms ScopeChoiceField widget" class="ScopeChoiceField" classes="sig sig-object py" fullname="ScopeChoiceField.widget" ids="openedx.core.djangoapps.auth_exchange.forms.ScopeChoiceField.widget" module="openedx.core.djangoapps.auth_exchange.forms"><desc_name classes="sig-name descname" xml:space="preserve">widget</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>alias of <literal classes="xref py py-class">SelectMultiple</literal></paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.auth_exchange.views openedx-core-djangoapps-auth-exchange-views-module" names="openedx.core.djangoapps.auth_exchange.views\ module">
            <title>openedx.core.djangoapps.auth_exchange.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.auth_exchange.views',\ 'module-openedx.core.djangoapps.auth_exchange.views',\ '',\ None]"></index>
            <paragraph>Views to support exchange of authentication credentials.
                The following are currently implemented:</paragraph>
            <block_quote>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>AccessTokenExchangeView:
                            3rd party (social-auth) OAuth 2.0 access token -&gt; 1st party (open-edx) OAuth 2.0 access token</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>LoginWithAccessTokenView:
                            1st party (open-edx) OAuth 2.0 access token -&gt; session cookie</paragraph>
                    </list_item>
                </enumerated_list>
            </block_quote>
            <index entries="['single',\ 'AccessTokenExchangeBase\ (class\ in\ openedx.core.djangoapps.auth_exchange.views)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AccessTokenExchangeBase" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase" class="" classes="sig sig-object py" fullname="AccessTokenExchangeBase" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase" module="openedx.core.djangoapps.auth_exchange.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">AccessTokenExchangeBase</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal></paragraph>
                    <paragraph>View for token exchange from 3rd party OAuth access token to 1st party
                        OAuth access token.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Note: This base class was originally created to support multiple libraries,</term>
                            <definition>
                                <paragraph>but we currently only support django-oauth-toolkit (DOT).</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <index entries="['single',\ 'allowed_methods\ (openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.allowed_methods',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeBase.allowed_methods" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase allowed_methods" class="AccessTokenExchangeBase" classes="sig sig-object py" fullname="AccessTokenExchangeBase.allowed_methods" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.allowed_methods" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">allowed_methods</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>['POST']</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AccessTokenExchangeBase.authentication_classes" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase authentication_classes" class="AccessTokenExchangeBase" classes="sig sig-object py" fullname="AccessTokenExchangeBase.authentication_classes" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.authentication_classes" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>[]</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'dispatch()\ (openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.dispatch',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeBase.dispatch()" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase dispatch" class="AccessTokenExchangeBase" classes="sig sig-object py" fullname="AccessTokenExchangeBase.dispatch" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.dispatch" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">dispatch</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph><title_reference>.dispatch()</title_reference> is pretty much the same as Django’s regular dispatch,
                                but with extra hooks for startup, finalize, and exception handling.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'exchange_access_token()\ (openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.exchange_access_token',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeBase.exchange_access_token()" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase exchange_access_token" class="AccessTokenExchangeBase" classes="sig sig-object py" fullname="AccessTokenExchangeBase.exchange_access_token" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.exchange_access_token" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">exchange_access_token</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scope</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">client</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Exchange third party credentials for an edx access token, and return a
                                serialized access token response.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AccessTokenExchangeBase.post()" _toc_parts="openedx.core.djangoapps.auth_exchange.views AccessTokenExchangeBase post" class="AccessTokenExchangeBase" classes="sig sig-object py" fullname="AccessTokenExchangeBase.post" ids="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase.post" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">_backend</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Handle POST requests to get a first-party access token.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'DOTAccessTokenExchangeView\ (class\ in\ openedx.core.djangoapps.auth_exchange.views)',\ 'openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DOTAccessTokenExchangeView" _toc_parts="openedx.core.djangoapps.auth_exchange.views DOTAccessTokenExchangeView" class="" classes="sig sig-object py" fullname="DOTAccessTokenExchangeView" ids="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView" module="openedx.core.djangoapps.auth_exchange.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DOTAccessTokenExchangeView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" refid="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase" reftitle="openedx.core.djangoapps.auth_exchange.views.AccessTokenExchangeBase"><literal classes="xref py py-class">AccessTokenExchangeBase</literal></reference>, <literal classes="xref py py-class">TokenView</literal></paragraph>
                    <paragraph>View for token exchange from 3rd party OAuth access token to 1st party
                        OAuth access token.  Uses django-oauth-toolkit (DOT) to manage access
                        tokens.</paragraph>
                    <index entries="['single',\ 'access_token_response()\ (openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.access_token_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DOTAccessTokenExchangeView.access_token_response()" _toc_parts="openedx.core.djangoapps.auth_exchange.views DOTAccessTokenExchangeView access_token_response" class="DOTAccessTokenExchangeView" classes="sig sig-object py" fullname="DOTAccessTokenExchangeView.access_token_response" ids="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.access_token_response" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">access_token_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Wrap an access token in an appropriate response</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'create_access_token()\ (openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.create_access_token',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DOTAccessTokenExchangeView.create_access_token()" _toc_parts="openedx.core.djangoapps.auth_exchange.views DOTAccessTokenExchangeView create_access_token" class="DOTAccessTokenExchangeView" classes="sig sig-object py" fullname="DOTAccessTokenExchangeView.create_access_token" ids="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.create_access_token" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">create_access_token</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scopes</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">client</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create and return a new access token.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'error_response()\ (openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.error_response',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DOTAccessTokenExchangeView.error_response()" _toc_parts="openedx.core.djangoapps.auth_exchange.views DOTAccessTokenExchangeView error_response" class="DOTAccessTokenExchangeView" classes="sig sig-object py" fullname="DOTAccessTokenExchangeView.error_response" ids="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.error_response" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">error_response</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">form_errors</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return an error response consisting of the errors in the form</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'oauth2_adapter\ (openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.oauth2_adapter',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="DOTAccessTokenExchangeView.oauth2_adapter" _toc_parts="openedx.core.djangoapps.auth_exchange.views DOTAccessTokenExchangeView oauth2_adapter" class="DOTAccessTokenExchangeView" classes="sig sig-object py" fullname="DOTAccessTokenExchangeView.oauth2_adapter" ids="openedx.core.djangoapps.auth_exchange.views.DOTAccessTokenExchangeView.oauth2_adapter" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">oauth2_adapter</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>&lt;openedx.core.djangoapps.oauth_dispatch.adapters.dot.DOTAdapter object&gt;</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'LoginWithAccessTokenView\ (class\ in\ openedx.core.djangoapps.auth_exchange.views)',\ 'openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="LoginWithAccessTokenView" _toc_parts="openedx.core.djangoapps.auth_exchange.views LoginWithAccessTokenView" class="" classes="sig sig-object py" fullname="LoginWithAccessTokenView" ids="openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView" module="openedx.core.djangoapps.auth_exchange.views"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.auth_exchange.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">LoginWithAccessTokenView</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">APIView</literal></paragraph>
                    <paragraph>View for exchanging an access token for session cookies</paragraph>
                    <index entries="['single',\ 'authentication_classes\ (openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.authentication_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="LoginWithAccessTokenView.authentication_classes" _toc_parts="openedx.core.djangoapps.auth_exchange.views LoginWithAccessTokenView authentication_classes" class="LoginWithAccessTokenView" classes="sig sig-object py" fullname="LoginWithAccessTokenView.authentication_classes" ids="openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.authentication_classes" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">authentication_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser'&gt;, &lt;class 'edx_rest_framework_extensions.auth.jwt.authentication.JwtAuthentication'&gt;)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'permission_classes\ (openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView\ attribute)',\ 'openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.permission_classes',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="LoginWithAccessTokenView.permission_classes" _toc_parts="openedx.core.djangoapps.auth_exchange.views LoginWithAccessTokenView permission_classes" class="LoginWithAccessTokenView" classes="sig sig-object py" fullname="LoginWithAccessTokenView.permission_classes" ids="openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.permission_classes" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">permission_classes</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>(&lt;class 'rest_framework.permissions.IsAuthenticated'&gt;,)</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'post()\ (openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView\ method)',\ 'openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.post',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="LoginWithAccessTokenView.post()" _toc_parts="openedx.core.djangoapps.auth_exchange.views LoginWithAccessTokenView post" class="LoginWithAccessTokenView" classes="sig sig-object py" fullname="LoginWithAccessTokenView.post" ids="openedx.core.djangoapps.auth_exchange.views.LoginWithAccessTokenView.post" module="openedx.core.djangoapps.auth_exchange.views"><desc_name classes="sig-name descname" xml:space="preserve">post</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Handler for the POST method to this view.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.auth_exchange module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.auth_exchange',\ 'module-openedx.core.djangoapps.auth_exchange',\ '',\ None]"></index>
        </section>
    </section>
</document>
