<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.features.content_type_gating.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-features-content-type-gating-package" names="openedx.features.content_type_gating\ package">
        <title>openedx.features.content_type_gating package</title>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.features.content_type_gating.apps openedx-features-content-type-gating-apps-module" names="openedx.features.content_type_gating.apps\ module">
            <title>openedx.features.content_type_gating.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.apps',\ 'module-openedx.features.content_type_gating.apps',\ '',\ None]"></index>
            <paragraph>Define the content_type_gating Django App.</paragraph>
            <index entries="['single',\ 'ContentTypeGatingConfig\ (class\ in\ openedx.features.content_type_gating.apps)',\ 'openedx.features.content_type_gating.apps.ContentTypeGatingConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingConfig" _toc_parts="openedx.features.content_type_gating.apps ContentTypeGatingConfig" class="" classes="sig sig-object py" fullname="ContentTypeGatingConfig" ids="openedx.features.content_type_gating.apps.ContentTypeGatingConfig" module="openedx.features.content_type_gating.apps"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <index entries="['single',\ 'name\ (openedx.features.content_type_gating.apps.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.apps.ContentTypeGatingConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.name" _toc_parts="openedx.features.content_type_gating.apps ContentTypeGatingConfig name" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.name" ids="openedx.features.content_type_gating.apps.ContentTypeGatingConfig.name" module="openedx.features.content_type_gating.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.features.content_type_gating'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.block_transformers openedx-features-content-type-gating-block-transformers-module" names="openedx.features.content_type_gating.block_transformers\ module">
            <title>openedx.features.content_type_gating.block_transformers module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.block_transformers',\ 'module-openedx.features.content_type_gating.block_transformers',\ '',\ None]"></index>
            <paragraph>Content Type Gate Transformer implementation.
                Limits access for certain users to certain types of content.</paragraph>
            <index entries="['single',\ 'ContentTypeGateTransformer\ (class\ in\ openedx.features.content_type_gating.block_transformers)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGateTransformer" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer" class="" classes="sig sig-object py" fullname="ContentTypeGateTransformer" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer" module="openedx.features.content_type_gating.block_transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.block_transformers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGateTransformer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer" refuri="openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.transformer.BlockStructureTransformer"><literal classes="xref py py-class">BlockStructureTransformer</literal></reference></paragraph>
                    <paragraph>A transformer that adds a partition condition for all graded content
                        so that the content is only visible to verified users.</paragraph>
                    <paragraph>This transformer requires that the UserPartitionTransformer also be included in your transformer list.</paragraph>
                    <index entries="['single',\ 'READ_VERSION\ (openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer\ attribute)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.READ_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGateTransformer.READ_VERSION" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer READ_VERSION" class="ContentTypeGateTransformer" classes="sig sig-object py" fullname="ContentTypeGateTransformer.READ_VERSION" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.READ_VERSION" module="openedx.features.content_type_gating.block_transformers"><desc_name classes="sig-name descname" xml:space="preserve">READ_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'WRITE_VERSION\ (openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer\ attribute)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.WRITE_VERSION',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGateTransformer.WRITE_VERSION" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer WRITE_VERSION" class="ContentTypeGateTransformer" classes="sig sig-object py" fullname="ContentTypeGateTransformer.WRITE_VERSION" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.WRITE_VERSION" module="openedx.features.content_type_gating.block_transformers"><desc_name classes="sig-name descname" xml:space="preserve">WRITE_VERSION</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>1</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'collect()\ (openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer\ class\ method)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.collect',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGateTransformer.collect()" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer collect" class="ContentTypeGateTransformer" classes="sig sig-object py" fullname="ContentTypeGateTransformer.collect" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.collect" module="openedx.features.content_type_gating.block_transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">collect</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Collects any information that’s necessary to execute this
                                transformer’s transform method.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name()\ (openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer\ class\ method)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.name',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGateTransformer.name()" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer name" class="ContentTypeGateTransformer" classes="sig sig-object py" fullname="ContentTypeGateTransformer.name" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.name" module="openedx.features.content_type_gating.block_transformers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unique identifier for the transformer’s class;
                                same identifier used in setup.py.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'transform()\ (openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer\ method)',\ 'openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.transform',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGateTransformer.transform()" _toc_parts="openedx.features.content_type_gating.block_transformers ContentTypeGateTransformer transform" class="ContentTypeGateTransformer" classes="sig sig-object py" fullname="ContentTypeGateTransformer.transform" ids="openedx.features.content_type_gating.block_transformers.ContentTypeGateTransformer.transform" module="openedx.features.content_type_gating.block_transformers"><desc_name classes="sig-name descname" xml:space="preserve">transform</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">usage_info</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_structure</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transforms the given block_structure for the given usage_info,
                                assuming the block_structure contains cached data from a prior
                                call to the collect method of the latest version of the
                                Transformer.</paragraph>
                            <paragraph>No access to the modulestore nor instantiation of xBlocks should
                                be performed during the execution of this method. However,
                                accesses to user-specific data (outside of the modulestore and
                                not via xBlocks) is permitted in order to apply the transform
                                for the given usage_info.</paragraph>
                            <paragraph>Note: The root of the given block_structure is not necessarily
                                the same as the root of the block_structure passed to the prior
                                collect method. The collect method is given the top-most root
                                of the structure, while the transform method may be called upon
                                any sub-structure or even a single block within the originally
                                collected structure.</paragraph>
                            <paragraph>A Transformer may choose to remove entire sub-structures during
                                the transform method and may do so using the remove_block and
                                filter_with_removal methods.</paragraph>
                            <paragraph>Amongst the many methods available for a block_structure, the
                                following methods are commonly used during transforms:</paragraph>
                            <block_quote>
                                <paragraph>get_xblock_field
                                    get_transformer_data
                                    get_transformer_block_field
                                    remove_block_traversal
                                    filter_with_removal
                                    filter_topological_traversal
                                    topological_traversal
                                    post_order_traversal</paragraph>
                            </block_quote>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>usage_info</literal_strong> (<literal_emphasis>any negotiated type</literal_emphasis>) – that is passed to the block_structure and forwarded to all
                                                    requested Transformers in order to apply a
                                                    usage-specific transform. For example, an instance of
                                                    usage_info would contain a user object for which the
                                                    transform should be applied.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>block_structure</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData" refuri="openedx.core.djangoapps.content.block_structure#openedx.core.djangoapps.content.block_structure.block_structure.BlockStructureBlockData"><literal_emphasis>BlockStructureBlockData</literal_emphasis></reference>) – block structure, with already collected data for the
                                                    transformer, that is to be transformed in place.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.field_override openedx-features-content-type-gating-field-override-module" names="openedx.features.content_type_gating.field_override\ module">
            <title>openedx.features.content_type_gating.field_override module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.field_override',\ 'module-openedx.features.content_type_gating.field_override',\ '',\ None]"></index>
            <paragraph>FieldOverride that forces graded components to be only accessible to
                students in the Unlocked Group of the ContentTypeGating partition.</paragraph>
            <index entries="['single',\ 'ContentTypeGatingFieldOverride\ (class\ in\ openedx.features.content_type_gating.field_override)',\ 'openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingFieldOverride" _toc_parts="openedx.features.content_type_gating.field_override ContentTypeGatingFieldOverride" class="" classes="sig sig-object py" fullname="ContentTypeGatingFieldOverride" ids="openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride" module="openedx.features.content_type_gating.field_override"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.field_override.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingFieldOverride</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fallback_field_data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="lms.djangoapps.courseware.field_overrides.FieldOverrideProvider" refuri="../lms/lms.djangoapps.courseware#lms.djangoapps.courseware.field_overrides.FieldOverrideProvider"><literal classes="xref py py-class">FieldOverrideProvider</literal></reference></paragraph>
                    <paragraph>A concrete implementation of
                        <literal classes="xref py py-class">FieldOverrideProvider</literal> which forces
                        graded content to only be accessible to the Full Access group</paragraph>
                    <index entries="['single',\ 'enabled_for()\ (openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride\ class\ method)',\ 'openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride.enabled_for',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingFieldOverride.enabled_for()" _toc_parts="openedx.features.content_type_gating.field_override ContentTypeGatingFieldOverride enabled_for" class="ContentTypeGatingFieldOverride" classes="sig sig-object py" fullname="ContentTypeGatingFieldOverride.enabled_for" ids="openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride.enabled_for" module="openedx.features.content_type_gating.field_override"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">enabled_for</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Check our stackable config for this specific course</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get()\ (openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride\ method)',\ 'openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingFieldOverride.get()" _toc_parts="openedx.features.content_type_gating.field_override ContentTypeGatingFieldOverride get" class="ContentTypeGatingFieldOverride" classes="sig sig-object py" fullname="ContentTypeGatingFieldOverride.get" ids="openedx.features.content_type_gating.field_override.ContentTypeGatingFieldOverride.get" module="openedx.features.content_type_gating.field_override"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Look for an override value for the field named <title_reference>name</title_reference> in <title_reference>block</title_reference>.
                                Returns the overridden value or <title_reference>default</title_reference> if no override is found.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.helpers openedx-features-content-type-gating-helpers-module" names="openedx.features.content_type_gating.helpers\ module">
            <title>openedx.features.content_type_gating.helpers module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.helpers',\ 'module-openedx.features.content_type_gating.helpers',\ '',\ None]"></index>
            <paragraph>Helper functions used by both content_type_gating and course_duration_limits.</paragraph>
            <index entries="['single',\ 'correct_modes_for_fbe()\ (in\ module\ openedx.features.content_type_gating.helpers)',\ 'openedx.features.content_type_gating.helpers.correct_modes_for_fbe',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="correct_modes_for_fbe()" _toc_parts="openedx.features.content_type_gating.helpers correct_modes_for_fbe" class="" classes="sig sig-object py" fullname="correct_modes_for_fbe" ids="openedx.features.content_type_gating.helpers.correct_modes_for_fbe" module="openedx.features.content_type_gating.helpers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.helpers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">correct_modes_for_fbe</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">enrollment</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>If CONTENT_TYPE_GATING is enabled use the following logic to determine whether
                        enabled_for_enrollment should be false</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'enrollment_date_for_fbe()\ (in\ module\ openedx.features.content_type_gating.helpers)',\ 'openedx.features.content_type_gating.helpers.enrollment_date_for_fbe',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="enrollment_date_for_fbe()" _toc_parts="openedx.features.content_type_gating.helpers enrollment_date_for_fbe" class="" classes="sig sig-object py" fullname="enrollment_date_for_fbe" ids="openedx.features.content_type_gating.helpers.enrollment_date_for_fbe" module="openedx.features.content_type_gating.helpers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.helpers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">enrollment_date_for_fbe</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Gets the enrollment date for the given user and course, if FBE is enabled.</paragraph>
                    <paragraph>One of course_key or course must be provided.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None if FBE is disabled for either this user or course
                                    The enrollment creation date if an enrollment exists
                                    now() if no enrollment.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'has_full_access_role_in_masquerade()\ (in\ module\ openedx.features.content_type_gating.helpers)',\ 'openedx.features.content_type_gating.helpers.has_full_access_role_in_masquerade',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="has_full_access_role_in_masquerade()" _toc_parts="openedx.features.content_type_gating.helpers has_full_access_role_in_masquerade" class="" classes="sig sig-object py" fullname="has_full_access_role_in_masquerade" ids="openedx.features.content_type_gating.helpers.has_full_access_role_in_masquerade" module="openedx.features.content_type_gating.helpers"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.helpers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">has_full_access_role_in_masquerade</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>The roles of the masquerade user are used to determine whether the content gate displays.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>True if we are masquerading as a full-access generic user
                                    False if we are masquerading as a non-full-access generic user
                                    None if we are not masquerading or masquerading as a specific student that should go through normal checks</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.models openedx-features-content-type-gating-models-module" names="openedx.features.content_type_gating.models\ module">
            <title>openedx.features.content_type_gating.models module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.models',\ 'module-openedx.features.content_type_gating.models',\ '',\ None]"></index>
            <paragraph>Content Type Gating Configuration Models</paragraph>
            <index entries="['single',\ 'ContentTypeGatingConfig\ (class\ in\ openedx.features.content_type_gating.models)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingConfig" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig" class="" classes="sig sig-object py" fullname="ContentTypeGatingConfig" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig" module="openedx.features.content_type_gating.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="openedx.core.djangoapps.config_model_utils.models.StackedConfigurationModel" refuri="openedx.core.djangoapps.config_model_utils#openedx.core.djangoapps.config_model_utils.models.StackedConfigurationModel"><literal classes="xref py py-class">StackedConfigurationModel</literal></reference></paragraph>
                    <paragraph>A ConfigurationModel used to manage configuration for Content Type Gating (Feature Based Enrollments).</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'ContentTypeGatingConfig.DoesNotExist',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ContentTypeGatingConfig.DoesNotExist" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig DoesNotExist" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.DoesNotExist" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.DoesNotExist" module="openedx.features.content_type_gating.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'ContentTypeGatingConfig.MultipleObjectsReturned',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="ContentTypeGatingConfig.MultipleObjectsReturned" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig MultipleObjectsReturned" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.MultipleObjectsReturned" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.MultipleObjectsReturned" module="openedx.features.content_type_gating.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'STACKABLE_FIELDS\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.STACKABLE_FIELDS',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.STACKABLE_FIELDS" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig STACKABLE_FIELDS" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.STACKABLE_FIELDS" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.STACKABLE_FIELDS" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">STACKABLE_FIELDS</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>('enabled', 'enabled_as_of', 'studio_override_enabled')</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'change_date\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.change_date',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.change_date" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig change_date" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.change_date" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.change_date" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">change_date</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.changed_by',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.changed_by" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig changed_by" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.changed_by" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.changed_by" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by_id\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.changed_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.changed_by_id" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig changed_by_id" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.changed_by_id" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.changed_by_id" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'clean()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.clean',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.clean()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig clean" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.clean" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.clean" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">clean</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Hook for doing any extra model-wide validation after clean() has been
                                called on every field by self.clean_fields. Any ValidationError raised
                                by this method will not be associated with a particular field; it will
                                have a special-case association with the field defined by NON_FIELD_ERRORS.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.course',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.course" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig course" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.course" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.course" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">course</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'course_id\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.course_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.course_id" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig course_id" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.course_id" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.course_id" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">course_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.enabled" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig enabled" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.enabled" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled_as_of\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_as_of',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.enabled_as_of" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig enabled_as_of" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.enabled_as_of" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_as_of" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled_as_of</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled_as_of_datetime()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_as_of_datetime',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.enabled_as_of_datetime()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig enabled_as_of_datetime" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.enabled_as_of_datetime" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_as_of_datetime" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled_as_of_datetime</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">target_datetime</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether this Content Type Gating configuration context is enabled as of a date and time.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong>target_datetime</literal_strong> (<literal classes="xref py py-class">datetime.datetime</literal>) – The datetime that <literal>enabled_as_of</literal> must be equal to or before</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled_for_course()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ class\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_for_course',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.enabled_for_course()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig enabled_for_course" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.enabled_for_course" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_for_course" module="openedx.features.content_type_gating.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">enabled_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">target_datetime</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether Content Type Gating is enabled for this course as of a particular date.</paragraph>
                            <paragraph>Content Type Gating is enabled for a course on a date if it is enabled either specifically,
                                or via a containing context, such as the org, site, or globally, and if the configuration
                                is specified to be <literal>enabled_as_of</literal> before <literal>target_datetime</literal>.</paragraph>
                            <paragraph>Only one of enrollment and (user, course_key) may be specified at a time.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> – The CourseKey of the course being queried.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>target_datetime</literal_strong> – The datetime to checked enablement as of. Defaults to the current date and time.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled_for_enrollment()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ class\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_for_enrollment',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.enabled_for_enrollment()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig enabled_for_enrollment" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.enabled_for_enrollment" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.enabled_for_enrollment" module="openedx.features.content_type_gating.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">enabled_for_enrollment</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return whether Content Type Gating is enabled for this enrollment.</paragraph>
                            <paragraph>Content Type Gating is enabled for an enrollment if it is enabled for
                                the course being enrolled in (either specifically, or via a containing context,
                                such as the org, site, or globally), and if the configuration is specified to be
                                <literal>enabled_as_of</literal> before the enrollment was created.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>user</literal_strong> – The user being queried.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>course_key</literal_strong> – The CourseKey of the course being queried.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_change_date()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.get_next_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.get_next_by_change_date()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig get_next_by_change_date" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.get_next_by_change_date" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.get_next_by_change_date" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_change_date()\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ method)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.get_previous_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingConfig.get_previous_by_change_date()" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig get_previous_by_change_date" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.get_previous_by_change_date" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.get_previous_by_change_date" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.id" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig id" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.id" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.id" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'org\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.org',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.org" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig org" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.org" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.org" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">org</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'org_course\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.org_course',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.org_course" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig org_course" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.org_course" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.org_course" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">org_course</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'site\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.site',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.site" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig site" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.site" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.site" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">site</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'site_id\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.site_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.site_id" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig site_id" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.site_id" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.site_id" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">site_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'studio_override_enabled\ (openedx.features.content_type_gating.models.ContentTypeGatingConfig\ attribute)',\ 'openedx.features.content_type_gating.models.ContentTypeGatingConfig.studio_override_enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingConfig.studio_override_enabled" _toc_parts="openedx.features.content_type_gating.models ContentTypeGatingConfig studio_override_enabled" class="ContentTypeGatingConfig" classes="sig sig-object py" fullname="ContentTypeGatingConfig.studio_override_enabled" ids="openedx.features.content_type_gating.models.ContentTypeGatingConfig.studio_override_enabled" module="openedx.features.content_type_gating.models"><desc_name classes="sig-name descname" xml:space="preserve">studio_override_enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.partitions openedx-features-content-type-gating-partitions-module" names="openedx.features.content_type_gating.partitions\ module">
            <title>openedx.features.content_type_gating.partitions module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.partitions',\ 'module-openedx.features.content_type_gating.partitions',\ '',\ None]"></index>
            <paragraph>Define the ContentTypeGatingPartition and ContentTypeGatingPartitionScheme.</paragraph>
            <paragraph>These are used together to allow course content to be blocked for a subset
                of audit learners.</paragraph>
            <index entries="['single',\ 'ContentTypeGatingPartition\ (class\ in\ openedx.features.content_type_gating.partitions)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartition',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingPartition" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartition" class="" classes="sig sig-object py" fullname="ContentTypeGatingPartition" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartition" module="openedx.features.content_type_gating.partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.partitions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingPartition</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">description</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">groups</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scheme</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parameters</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">active</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">scheme_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'random'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">UserPartition</literal></paragraph>
                    <paragraph>A custom UserPartition which allows us to override the access denied messaging in regards
                        to gated content.</paragraph>
                    <index entries="['single',\ 'access_denied_fragment()\ (openedx.features.content_type_gating.partitions.ContentTypeGatingPartition\ method)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartition.access_denied_fragment',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingPartition.access_denied_fragment()" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartition access_denied_fragment" class="ContentTypeGatingPartition" classes="sig sig-object py" fullname="ContentTypeGatingPartition.access_denied_fragment" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartition.access_denied_fragment" module="openedx.features.content_type_gating.partitions"><desc_name classes="sig-name descname" xml:space="preserve">access_denied_fragment</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_group</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allowed_groups</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return an html fragment that should be displayed to the user when they are not allowed to access
                                content managed by this partition, or None if there is no applicable message.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>block</literal_strong> (<literal classes="xref py py-class">XBlock</literal>) – The content being managed</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal classes="xref py py-class">User</literal></reference>) – The user who was denied access</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user_group</literal_strong> (<literal classes="xref py py-class">Group</literal>) – The current Group the user is in</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>allowed_groups</literal_strong> (list of <literal classes="xref py py-class">Group</literal>) – The groups who are allowed to see the content</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <paragraph>Returns: <literal classes="xref py py-class">Fragment</literal></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'access_denied_message()\ (openedx.features.content_type_gating.partitions.ContentTypeGatingPartition\ method)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartition.access_denied_message',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingPartition.access_denied_message()" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartition access_denied_message" class="ContentTypeGatingPartition" classes="sig sig-object py" fullname="ContentTypeGatingPartition.access_denied_message" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartition.access_denied_message" module="openedx.features.content_type_gating.partitions"><desc_name classes="sig-name descname" xml:space="preserve">access_denied_message</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_group</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allowed_groups</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a message that should be displayed to the user when they are not allowed to access
                                content managed by this partition, or None if there is no applicable message.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>block_key</literal_strong> (<literal classes="xref py py-class">BlockUsageLocator</literal>) – The content being managed</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user</literal_strong> (<reference internal="True" reftitle="openedx.core.djangoapps.django_comment_common.comment_client.user.User" refuri="openedx.core.djangoapps.django_comment_common.comment_client#openedx.core.djangoapps.django_comment_common.comment_client.user.User"><literal classes="xref py py-class">User</literal></reference>) – The user who was denied access</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>user_group</literal_strong> (<literal classes="xref py py-class">Group</literal>) – The current Group the user is in</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>allowed_groups</literal_strong> (list of <literal classes="xref py py-class">Group</literal>) – The groups who are allowed to see the content</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <paragraph>Returns: str</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ContentTypeGatingPartitionScheme\ (class\ in\ openedx.features.content_type_gating.partitions)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingPartitionScheme" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartitionScheme" class="" classes="sig sig-object py" fullname="ContentTypeGatingPartitionScheme" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme" module="openedx.features.content_type_gating.partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.partitions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingPartitionScheme</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>This scheme implements the Content Type Gating permission partitioning.</paragraph>
                    <paragraph>This partitioning is roughly the same as the verified/audit split, but also allows for individual
                        schools or courses to specify particular learner subsets by email that are allowed to access
                        the gated content despite not being verified users.</paragraph>
                    <index entries="['single',\ 'create_user_partition()\ (openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme\ class\ method)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.create_user_partition',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingPartitionScheme.create_user_partition()" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartitionScheme create_user_partition" class="ContentTypeGatingPartitionScheme" classes="sig sig-object py" fullname="ContentTypeGatingPartitionScheme.create_user_partition" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.create_user_partition" module="openedx.features.content_type_gating.partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">create_user_partition</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">description</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">groups</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parameters</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">active</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a custom UserPartition to support dynamic groups.</paragraph>
                            <paragraph>A Partition has an id, name, scheme, description, parameters, and a list
                                of groups. The id is intended to be unique within the context where these
                                are used. (e.g., for partitions of users within a course, the ids should
                                be unique per-course). The scheme is used to assign users into groups.
                                The parameters field is used to save extra parameters e.g., location of
                                the course ID for this partition scheme.</paragraph>
                            <paragraph>Partitions can be marked as inactive by setting the “active” flag to False.
                                Any group access rule referencing inactive partitions will be ignored
                                when performing access checks.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_group_for_user()\ (openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme\ class\ method)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.get_group_for_user',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingPartitionScheme.get_group_for_user()" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartitionScheme get_group_for_user" class="ContentTypeGatingPartitionScheme" classes="sig sig-object py" fullname="ContentTypeGatingPartitionScheme.get_group_for_user" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.get_group_for_user" module="openedx.features.content_type_gating.partitions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_group_for_user</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_partition</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the Group for the specified user.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'read_only\ (openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme\ attribute)',\ 'openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.read_only',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ContentTypeGatingPartitionScheme.read_only" _toc_parts="openedx.features.content_type_gating.partitions ContentTypeGatingPartitionScheme read_only" class="ContentTypeGatingPartitionScheme" classes="sig sig-object py" fullname="ContentTypeGatingPartitionScheme.read_only" ids="openedx.features.content_type_gating.partitions.ContentTypeGatingPartitionScheme.read_only" module="openedx.features.content_type_gating.partitions"><desc_name classes="sig-name descname" xml:space="preserve">read_only</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_content_gating_partition()\ (in\ module\ openedx.features.content_type_gating.partitions)',\ 'openedx.features.content_type_gating.partitions.create_content_gating_partition',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_content_gating_partition()" _toc_parts="openedx.features.content_type_gating.partitions create_content_gating_partition" class="" classes="sig sig-object py" fullname="create_content_gating_partition" ids="openedx.features.content_type_gating.partitions.create_content_gating_partition" module="openedx.features.content_type_gating.partitions"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.partitions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_content_gating_partition</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create and return the Content Gating user partition.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating.services openedx-features-content-type-gating-services-module" names="openedx.features.content_type_gating.services\ module">
            <title>openedx.features.content_type_gating.services module</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating.services',\ 'module-openedx.features.content_type_gating.services',\ '',\ None]"></index>
            <paragraph>Content Type Gating service.</paragraph>
            <index entries="['single',\ 'ContentTypeGatingService\ (class\ in\ openedx.features.content_type_gating.services)',\ 'openedx.features.content_type_gating.services.ContentTypeGatingService',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ContentTypeGatingService" _toc_parts="openedx.features.content_type_gating.services ContentTypeGatingService" class="" classes="sig sig-object py" fullname="ContentTypeGatingService" ids="openedx.features.content_type_gating.services.ContentTypeGatingService" module="openedx.features.content_type_gating.services"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.features.content_type_gating.services.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ContentTypeGatingService</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Content Type Gating uses Block Transformers to gate sections of the course outline
                        and field overrides to gate course content.
                        This service was created as a helper class for handling timed exams that contain content type gated problems.</paragraph>
                    <index entries="['single',\ 'check_children_for_content_type_gating_paywall()\ (openedx.features.content_type_gating.services.ContentTypeGatingService\ method)',\ 'openedx.features.content_type_gating.services.ContentTypeGatingService.check_children_for_content_type_gating_paywall',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ContentTypeGatingService.check_children_for_content_type_gating_paywall()" _toc_parts="openedx.features.content_type_gating.services ContentTypeGatingService check_children_for_content_type_gating_paywall" class="ContentTypeGatingService" classes="sig sig-object py" fullname="ContentTypeGatingService.check_children_for_content_type_gating_paywall" ids="openedx.features.content_type_gating.services.ContentTypeGatingService.check_children_for_content_type_gating_paywall" module="openedx.features.content_type_gating.services"><desc_name classes="sig-name descname" xml:space="preserve">check_children_for_content_type_gating_paywall</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">item</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong>item</literal_strong> (<literal_emphasis>xblock such as a sequence</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>vertical block</literal_emphasis>)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong>course_id</literal_strong> (<literal_emphasis>CourseLocator</literal_emphasis>)</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <definition_list>
                                <definition_list_item>
                                    <term>If:</term>
                                    <definition>
                                        <paragraph>This xblock contains problems which this user cannot load due to content type gating</paragraph>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>Then:</term>
                                    <definition>
                                        <paragraph>Return the first content type gating paywall (Fragment)</paragraph>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>Else:</term>
                                    <definition>
                                        <paragraph>Return None</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.features.content_type_gating module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.features.content_type_gating',\ 'module-openedx.features.content_type_gating',\ '',\ None]"></index>
        </section>
    </section>
</document>
