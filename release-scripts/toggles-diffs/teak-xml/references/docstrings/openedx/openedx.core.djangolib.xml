<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangolib.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangolib-package" names="openedx.core.djangolib\ package">
        <title>openedx.core.djangolib package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangolib.testing">openedx.core.djangolib.testing package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangolib.testing#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangolib.testing.utils" internal="True" refuri="openedx.core.djangolib.testing#module-openedx.core.djangolib.testing.utils">openedx.core.djangolib.testing.utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin"><literal>CacheIsolationMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.CACHES" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.CACHES"><literal>CacheIsolationMixin.CACHES</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.ENABLED_CACHES" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.ENABLED_CACHES"><literal>CacheIsolationMixin.ENABLED_CACHES</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.clear_caches" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.clear_caches"><literal>CacheIsolationMixin.clear_caches()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.end_cache_isolation" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.end_cache_isolation"><literal>CacheIsolationMixin.end_cache_isolation()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.setUp" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.setUp"><literal>CacheIsolationMixin.setUp()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.setUpClass" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.setUpClass"><literal>CacheIsolationMixin.setUpClass()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.start_cache_isolation" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.start_cache_isolation"><literal>CacheIsolationMixin.start_cache_isolation()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationMixin.tearDownClass" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationMixin.tearDownClass"><literal>CacheIsolationMixin.tearDownClass()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.CacheIsolationTestCase" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.CacheIsolationTestCase"><literal>CacheIsolationTestCase</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.FilteredQueryCountMixin" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.FilteredQueryCountMixin"><literal>FilteredQueryCountMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.FilteredQueryCountMixin.assertNumQueries" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.FilteredQueryCountMixin.assertNumQueries"><literal>FilteredQueryCountMixin.assertNumQueries()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.get_mock_request" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.get_mock_request"><literal>get_mock_request()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.skip_unless_cms" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.skip_unless_cms"><literal>skip_unless_cms()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.djangolib.testing.utils.skip_unless_lms" internal="True" refuri="openedx.core.djangolib.testing#openedx.core.djangolib.testing.utils.skip_unless_lms"><literal>skip_unless_lms()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangolib.testing" internal="True" refuri="openedx.core.djangolib.testing#module-openedx.core.djangolib.testing">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangolib.default_auth_classes openedx-core-djangolib-default-auth-classes-module" names="openedx.core.djangolib.default_auth_classes\ module">
            <title>openedx.core.djangolib.default_auth_classes module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.default_auth_classes',\ 'module-openedx.core.djangolib.default_auth_classes',\ '',\ None]"></index>
            <paragraph>Default Authentication classes that are ONLY meant to be used by
                DEFAULT_AUTHENTICATION_CLASSES for observability purposes.</paragraph>
            <index entries="['single',\ 'DefaultJwtAuthentication\ (class\ in\ openedx.core.djangolib.default_auth_classes)',\ 'openedx.core.djangolib.default_auth_classes.DefaultJwtAuthentication',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DefaultJwtAuthentication" _toc_parts="openedx.core.djangolib.default_auth_classes DefaultJwtAuthentication" class="" classes="sig sig-object py" fullname="DefaultJwtAuthentication" ids="openedx.core.djangolib.default_auth_classes.DefaultJwtAuthentication" module="openedx.core.djangolib.default_auth_classes"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.default_auth_classes.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DefaultJwtAuthentication</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">JwtAuthentication</literal></paragraph>
                    <paragraph>Default JwtAuthentication with observability</paragraph>
                    <paragraph>Note that the plan is to add JwtAuthentication as a default, but it
                        is not yet used. This class will be used during the transition.</paragraph>
                    <index entries="['single',\ 'authenticate()\ (openedx.core.djangolib.default_auth_classes.DefaultJwtAuthentication\ method)',\ 'openedx.core.djangolib.default_auth_classes.DefaultJwtAuthentication.authenticate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DefaultJwtAuthentication.authenticate()" _toc_parts="openedx.core.djangolib.default_auth_classes DefaultJwtAuthentication authenticate" class="DefaultJwtAuthentication" classes="sig sig-object py" fullname="DefaultJwtAuthentication.authenticate" ids="openedx.core.djangolib.default_auth_classes.DefaultJwtAuthentication.authenticate" module="openedx.core.djangolib.default_auth_classes"><desc_name classes="sig-name descname" xml:space="preserve">authenticate</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a two-tuple of <title_reference>User</title_reference> and token if a valid signature has been
                                supplied using JWT-based authentication.  Otherwise returns <title_reference>None</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'DefaultSessionAuthentication\ (class\ in\ openedx.core.djangolib.default_auth_classes)',\ 'openedx.core.djangolib.default_auth_classes.DefaultSessionAuthentication',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DefaultSessionAuthentication" _toc_parts="openedx.core.djangolib.default_auth_classes DefaultSessionAuthentication" class="" classes="sig sig-object py" fullname="DefaultSessionAuthentication" ids="openedx.core.djangolib.default_auth_classes.DefaultSessionAuthentication" module="openedx.core.djangolib.default_auth_classes"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.default_auth_classes.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DefaultSessionAuthentication</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">SessionAuthentication</literal></paragraph>
                    <paragraph>Default SessionAuthentication with observability</paragraph>
                    <index entries="['single',\ 'authenticate()\ (openedx.core.djangolib.default_auth_classes.DefaultSessionAuthentication\ method)',\ 'openedx.core.djangolib.default_auth_classes.DefaultSessionAuthentication.authenticate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DefaultSessionAuthentication.authenticate()" _toc_parts="openedx.core.djangolib.default_auth_classes DefaultSessionAuthentication authenticate" class="DefaultSessionAuthentication" classes="sig sig-object py" fullname="DefaultSessionAuthentication.authenticate" ids="openedx.core.djangolib.default_auth_classes.DefaultSessionAuthentication.authenticate" module="openedx.core.djangolib.default_auth_classes"><desc_name classes="sig-name descname" xml:space="preserve">authenticate</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns a <title_reference>User</title_reference> if the request session currently has a logged in user.
                                Otherwise returns <title_reference>None</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.fields openedx-core-djangolib-fields-module" names="openedx.core.djangolib.fields\ module">
            <title>openedx.core.djangolib.fields module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.fields',\ 'module-openedx.core.djangolib.fields',\ '',\ None]"></index>
            <paragraph>Custom Django fields.</paragraph>
            <index entries="['single',\ 'BigAutoField\ (class\ in\ openedx.core.djangolib.fields)',\ 'openedx.core.djangolib.fields.BigAutoField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="BigAutoField" _toc_parts="openedx.core.djangolib.fields BigAutoField" class="" classes="sig sig-object py" fullname="BigAutoField" ids="openedx.core.djangolib.fields.BigAutoField" module="openedx.core.djangolib.fields"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.fields.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">BigAutoField</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AutoField</literal></paragraph>
                    <paragraph>AutoField that uses BigIntegers.</paragraph>
                    <paragraph>This exists in Django as of version 1.10.</paragraph>
                    <index entries="['single',\ 'db_type()\ (openedx.core.djangolib.fields.BigAutoField\ method)',\ 'openedx.core.djangolib.fields.BigAutoField.db_type',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BigAutoField.db_type()" _toc_parts="openedx.core.djangolib.fields BigAutoField db_type" class="BigAutoField" classes="sig sig-object py" fullname="BigAutoField.db_type" ids="openedx.core.djangolib.fields.BigAutoField.db_type" module="openedx.core.djangolib.fields"><desc_name classes="sig-name descname" xml:space="preserve">db_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">connection</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The type of the field to insert into the database.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'rel_db_type()\ (openedx.core.djangolib.fields.BigAutoField\ method)',\ 'openedx.core.djangolib.fields.BigAutoField.rel_db_type',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="BigAutoField.rel_db_type()" _toc_parts="openedx.core.djangolib.fields BigAutoField rel_db_type" class="BigAutoField" classes="sig sig-object py" fullname="BigAutoField.rel_db_type" ids="openedx.core.djangolib.fields.BigAutoField.rel_db_type" module="openedx.core.djangolib.fields"><desc_name classes="sig-name descname" xml:space="preserve">rel_db_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">connection</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>The type to be used by relations pointing to this field.</paragraph>
                            <paragraph>Not used until Django 1.10.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CharNullField\ (class\ in\ openedx.core.djangolib.fields)',\ 'openedx.core.djangolib.fields.CharNullField',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CharNullField" _toc_parts="openedx.core.djangolib.fields CharNullField" class="" classes="sig sig-object py" fullname="CharNullField" ids="openedx.core.djangolib.fields.CharNullField" module="openedx.core.djangolib.fields"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.fields.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CharNullField</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">db_collation</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">CharField</literal></paragraph>
                    <paragraph>CharField that stores NULL but returns ‘’</paragraph>
                    <index entries="['single',\ 'description\ (openedx.core.djangolib.fields.CharNullField\ attribute)',\ 'openedx.core.djangolib.fields.CharNullField.description',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CharNullField.description" _toc_parts="openedx.core.djangolib.fields CharNullField description" class="CharNullField" classes="sig sig-object py" fullname="CharNullField.description" ids="openedx.core.djangolib.fields.CharNullField.description" module="openedx.core.djangolib.fields"><desc_name classes="sig-name descname" xml:space="preserve">description</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>"CharField that stores NULL but returns ''"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_db_prep_value()\ (openedx.core.djangolib.fields.CharNullField\ method)',\ 'openedx.core.djangolib.fields.CharNullField.get_db_prep_value',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CharNullField.get_db_prep_value()" _toc_parts="openedx.core.djangolib.fields CharNullField get_db_prep_value" class="CharNullField" classes="sig sig-object py" fullname="CharNullField.get_db_prep_value" ids="openedx.core.djangolib.fields.CharNullField.get_db_prep_value" module="openedx.core.djangolib.fields"><desc_name classes="sig-name descname" xml:space="preserve">get_db_prep_value</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">connection</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prepared</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Converts value to a backend-specific value.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'to_python()\ (openedx.core.djangolib.fields.CharNullField\ method)',\ 'openedx.core.djangolib.fields.CharNullField.to_python',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CharNullField.to_python()" _toc_parts="openedx.core.djangolib.fields CharNullField to_python" class="CharNullField" classes="sig sig-object py" fullname="CharNullField.to_python" ids="openedx.core.djangolib.fields.CharNullField.to_python" module="openedx.core.djangolib.fields"><desc_name classes="sig-name descname" xml:space="preserve">to_python</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Converts the value into the correct Python object.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.js_utils openedx-core-djangolib-js-utils-module" names="openedx.core.djangolib.js_utils\ module">
            <title>openedx.core.djangolib.js_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.js_utils',\ 'module-openedx.core.djangolib.js_utils',\ '',\ None]"></index>
            <paragraph>Utilities for dealing with Javascript and JSON.</paragraph>
            <index entries="['single',\ 'dump_js_escaped_json()\ (in\ module\ openedx.core.djangolib.js_utils)',\ 'openedx.core.djangolib.js_utils.dump_js_escaped_json',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="dump_js_escaped_json()" _toc_parts="openedx.core.djangolib.js_utils dump_js_escaped_json" class="" classes="sig sig-object py" fullname="dump_js_escaped_json" ids="openedx.core.djangolib.js_utils.dump_js_escaped_json" module="openedx.core.djangolib.js_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.js_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">dump_js_escaped_json</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cls=&lt;class 'openedx.core.lib.json_utils.EdxJSONEncoder'&gt;</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>JSON dumps and escapes objects that are safe to be embedded in JavaScript.</paragraph>
                    <paragraph>Use this for anything but strings (e.g. dicts, tuples, lists, bools, and
                        numbers).  For strings, use js_escaped_string.</paragraph>
                    <paragraph>The output of this method is also usable as plain-old JSON.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Usage:</term>
                            <definition>
                                <paragraph>Used as follows in a Mako template inside a &lt;SCRIPT&gt; tag:</paragraph>
                                <literal_block force="False" language="default" linenos="False" xml:space="preserve">var json_obj = ${obj | n, dump_js_escaped_json}</literal_block>
                                <paragraph>If you must use the cls argument, then use as follows:</paragraph>
                                <literal_block force="False" language="default" linenos="False" xml:space="preserve">var json_obj = ${dump_js_escaped_json(obj, cls) | n}</literal_block>
                                <paragraph>Use the “n” Mako filter above.  It is possible that the default filter
                                    may include html escaping in the future, and this ensures proper
                                    escaping.</paragraph>
                                <paragraph>Ensure ascii in json.dumps (ensure_ascii=True) allows safe skipping of
                                    Mako’s default filter decode.utf8.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>obj</literal_strong> – The object soon to become a JavaScript escaped JSON string.  The
                                            object can be anything but strings (e.g. dicts, tuples, lists, bools, and
                                            numbers).</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>cls</literal_strong> (<literal_emphasis>class</literal_emphasis>) – The JSON encoder class (defaults to EdxJSONEncoder).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>(string) Escaped encoded JSON.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'js_escaped_string()\ (in\ module\ openedx.core.djangolib.js_utils)',\ 'openedx.core.djangolib.js_utils.js_escaped_string',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="js_escaped_string()" _toc_parts="openedx.core.djangolib.js_utils js_escaped_string" class="" classes="sig sig-object py" fullname="js_escaped_string" ids="openedx.core.djangolib.js_utils.js_escaped_string" module="openedx.core.djangolib.js_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.js_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">js_escaped_string</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">string_for_js</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Mako filter that escapes text for use in a JavaScript string.</paragraph>
                    <paragraph>If None is provided, returns an empty string.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Usage:</term>
                            <definition>
                                <paragraph>Used as follows in a Mako template inside a &lt;SCRIPT&gt; tag:</paragraph>
                                <literal_block force="False" language="default" linenos="False" xml:space="preserve">var my_string_for_js = "${my_string_for_js | n, js_escaped_string}"</literal_block>
                                <paragraph>The surrounding quotes for the string must be included.</paragraph>
                                <paragraph>Use the “n” Mako filter above.  It is possible that the default filter
                                    may include html escaping in the future, and this ensures proper
                                    escaping.</paragraph>
                                <paragraph>Mako’s default filter decode.utf8 is applied here since this default
                                    filter is skipped in the Mako template with “n”.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>string_for_js</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Text to be properly escaped for use in a
                                    JavaScript string.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>(string) Text properly escaped for use in a JavaScript string as
                                    unicode.  Returns empty string if argument is None.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.markup openedx-core-djangolib-markup-module" names="openedx.core.djangolib.markup\ module">
            <title>openedx.core.djangolib.markup module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.markup',\ 'module-openedx.core.djangolib.markup',\ '',\ None]"></index>
            <paragraph>Utilities for use in Mako markup.</paragraph>
            <index entries="['single',\ 'HTML()\ (in\ module\ openedx.core.djangolib.markup)',\ 'openedx.core.djangolib.markup.HTML',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="HTML()" _toc_parts="openedx.core.djangolib.markup HTML" class="" classes="sig sig-object py" fullname="HTML" ids="openedx.core.djangolib.markup.HTML" module="openedx.core.djangolib.markup"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.markup.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">HTML</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">html</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Mark a string as already HTML, so that it won’t be escaped before output.</paragraph>
                    <paragraph>Use this function when formatting HTML into other strings.  It must be
                        used in conjunction with <literal>Text()</literal>, and both <literal>HTML()</literal> and <literal>Text()</literal>
                        must be closed before any calls to <literal>format()</literal>:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">&lt;%page expression_filter="h"/&gt;
&lt;%!
from django.utils.translation import gettext as _

from openedx.core.djangolib.markup import HTML, Text
%&gt;
${Text(_("Write &amp; send {start}email{end}")).format(
    start=HTML("&lt;a href='mailto:{}'&gt;").format(user.email),
    end=HTML("&lt;/a&gt;"),
)}</literal_block>
                </desc_content>
            </desc>
            <index entries="['single',\ 'clean_dangerous_html()\ (in\ module\ openedx.core.djangolib.markup)',\ 'openedx.core.djangolib.markup.clean_dangerous_html',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clean_dangerous_html()" _toc_parts="openedx.core.djangolib.markup clean_dangerous_html" class="" classes="sig sig-object py" fullname="clean_dangerous_html" ids="openedx.core.djangolib.markup.clean_dangerous_html" module="openedx.core.djangolib.markup"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.markup.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clean_dangerous_html</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">html</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <definition_list>
                        <definition_list_item>
                            <term>Mark a string as already HTML and remove unsafe tags, so that it won’t be escaped before output.</term>
                            <definition>
                                <paragraph>Usage:
                                    &lt;%page expression_filter=”h”/&gt;
                                    &lt;%!
                                    from openedx.core.djangolib.markup import clean_dangerous_html
                                    %&gt;
                                    ${course_details.overview | n, clean_dangerous_html}</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'strip_all_tags_but_br()\ (in\ module\ openedx.core.djangolib.markup)',\ 'openedx.core.djangolib.markup.strip_all_tags_but_br',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="strip_all_tags_but_br()" _toc_parts="openedx.core.djangolib.markup strip_all_tags_but_br" class="" classes="sig sig-object py" fullname="strip_all_tags_but_br" ids="openedx.core.djangolib.markup.strip_all_tags_but_br" module="openedx.core.djangolib.markup"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.markup.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">strip_all_tags_but_br</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">string_to_strip</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Strips all tags from a string except &lt;br/&gt; and marks as HTML.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Usage:</term>
                            <definition>
                                <paragraph>&lt;%page expression_filter=”h”/&gt;
                                    &lt;%!
                                    from openedx.core.djangolib.markup import strip_all_tags_but_br
                                    %&gt;
                                    ${accomplishment_course_title | n, strip_all_tags_but_br}</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.model_mixins openedx-core-djangolib-model-mixins-module" names="openedx.core.djangolib.model_mixins\ module">
            <title>openedx.core.djangolib.model_mixins module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.model_mixins',\ 'module-openedx.core.djangolib.model_mixins',\ '',\ None]"></index>
            <paragraph>Custom Django Model mixins.</paragraph>
            <index entries="['single',\ 'DeletableByUserValue\ (class\ in\ openedx.core.djangolib.model_mixins)',\ 'openedx.core.djangolib.model_mixins.DeletableByUserValue',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DeletableByUserValue" _toc_parts="openedx.core.djangolib.model_mixins DeletableByUserValue" class="" classes="sig sig-object py" fullname="DeletableByUserValue" ids="openedx.core.djangolib.model_mixins.DeletableByUserValue" module="openedx.core.djangolib.model_mixins"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.model_mixins.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DeletableByUserValue</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>This mixin allows inheriting models to delete instances of the model
                        associated with some specified user.</paragraph>
                    <index entries="['single',\ 'delete_by_user_value()\ (openedx.core.djangolib.model_mixins.DeletableByUserValue\ class\ method)',\ 'openedx.core.djangolib.model_mixins.DeletableByUserValue.delete_by_user_value',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="DeletableByUserValue.delete_by_user_value()" _toc_parts="openedx.core.djangolib.model_mixins DeletableByUserValue delete_by_user_value" class="DeletableByUserValue" classes="sig sig-object py" fullname="DeletableByUserValue.delete_by_user_value" ids="openedx.core.djangolib.model_mixins.DeletableByUserValue.delete_by_user_value" module="openedx.core.djangolib.model_mixins"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">delete_by_user_value</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Deletes instances of this model where <literal>field</literal> equals <literal>value</literal>.</paragraph>
                            <definition_list>
                                <definition_list_item>
                                    <term>e.g.</term>
                                    <definition>
                                        <paragraph><literal>delete_by_user_value(value='learner@example.com', field='email')</literal></paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                            <paragraph>Returns True if any instances were deleted.
                                Returns False otherwise.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'DeprecatedModelMixin\ (class\ in\ openedx.core.djangolib.model_mixins)',\ 'openedx.core.djangolib.model_mixins.DeprecatedModelMixin',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DeprecatedModelMixin" _toc_parts="openedx.core.djangolib.model_mixins DeprecatedModelMixin" class="" classes="sig sig-object py" fullname="DeprecatedModelMixin" ids="openedx.core.djangolib.model_mixins.DeprecatedModelMixin" module="openedx.core.djangolib.model_mixins"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.model_mixins.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DeprecatedModelMixin</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Used to make a class unusable in practice, but leave database tables intact.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.oauth2_retirement_utils openedx-core-djangolib-oauth2-retirement-utils-module" names="openedx.core.djangolib.oauth2_retirement_utils\ module">
            <title>openedx.core.djangolib.oauth2_retirement_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.oauth2_retirement_utils',\ 'module-openedx.core.djangolib.oauth2_retirement_utils',\ '',\ None]"></index>
            <paragraph>Removes user PII from OAuth2 models.</paragraph>
            <index entries="['single',\ 'ModelRetirer\ (class\ in\ openedx.core.djangolib.oauth2_retirement_utils)',\ 'openedx.core.djangolib.oauth2_retirement_utils.ModelRetirer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ModelRetirer" _toc_parts="openedx.core.djangolib.oauth2_retirement_utils ModelRetirer" class="" classes="sig sig-object py" fullname="ModelRetirer" ids="openedx.core.djangolib.oauth2_retirement_utils.ModelRetirer" module="openedx.core.djangolib.oauth2_retirement_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.oauth2_retirement_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ModelRetirer</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">models_to_retire</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Given a list of model names, provides methods for deleting instances of
                        those models.</paragraph>
                    <index entries="['single',\ 'retire_user_by_id()\ (openedx.core.djangolib.oauth2_retirement_utils.ModelRetirer\ method)',\ 'openedx.core.djangolib.oauth2_retirement_utils.ModelRetirer.retire_user_by_id',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ModelRetirer.retire_user_by_id()" _toc_parts="openedx.core.djangolib.oauth2_retirement_utils ModelRetirer retire_user_by_id" class="ModelRetirer" classes="sig sig-object py" fullname="ModelRetirer.retire_user_by_id" ids="openedx.core.djangolib.oauth2_retirement_utils.ModelRetirer.retire_user_by_id" module="openedx.core.djangolib.oauth2_retirement_utils"><desc_name classes="sig-name descname" xml:space="preserve">retire_user_by_id</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'retire_dot_oauth2_models()\ (in\ module\ openedx.core.djangolib.oauth2_retirement_utils)',\ 'openedx.core.djangolib.oauth2_retirement_utils.retire_dot_oauth2_models',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="retire_dot_oauth2_models()" _toc_parts="openedx.core.djangolib.oauth2_retirement_utils retire_dot_oauth2_models" class="" classes="sig sig-object py" fullname="retire_dot_oauth2_models" ids="openedx.core.djangolib.oauth2_retirement_utils.retire_dot_oauth2_models" module="openedx.core.djangolib.oauth2_retirement_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.oauth2_retirement_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">retire_dot_oauth2_models</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib.translation_utils openedx-core-djangolib-translation-utils-module" names="openedx.core.djangolib.translation_utils\ module">
            <title>openedx.core.djangolib.translation_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib.translation_utils',\ 'module-openedx.core.djangolib.translation_utils',\ '',\ None]"></index>
            <paragraph>i18n utility functions</paragraph>
            <index entries="['single',\ 'translate_date()\ (in\ module\ openedx.core.djangolib.translation_utils)',\ 'openedx.core.djangolib.translation_utils.translate_date',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="translate_date()" _toc_parts="openedx.core.djangolib.translation_utils translate_date" class="" classes="sig sig-object py" fullname="translate_date" ids="openedx.core.djangolib.translation_utils.translate_date" module="openedx.core.djangolib.translation_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangolib.translation_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">translate_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">date</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">language</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">date_format</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'DATE_FORMAT'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Converts the provided date object into a string, while translating
                        its value for the given language.  Both the format of the date
                        as well as its values (i.e., name of the Month) are translated.</paragraph>
                    <paragraph>If language is Spainish, then the entire date string is returned in
                        lowercase. This is used to work around a bug in the Spanish django
                        month translations.
                        See EDUCATOR-2328 for more details.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>For example:</term>
                            <definition>
                                <paragraph>date = datetime.datetime(2017, 12, 23)
                                    date_in_spanish = translate_date(date, ‘es’)
                                    assert date_in_spanish == ‘23 de deciembre de 2017’</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangolib module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangolib',\ 'module-openedx.core.djangolib',\ '',\ None]"></index>
        </section>
    </section>
</document>
