<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.djangoapps.catalog.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-djangoapps-catalog-package" names="openedx.core.djangoapps.catalog\ package">
        <title>openedx.core.djangoapps.catalog package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.catalog.management">openedx.core.djangoapps.catalog.management package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#subpackages" internal="True" refuri="openedx.core.djangoapps.catalog.management#subpackages">Subpackages</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3"><reference anchorname="" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands">openedx.core.djangoapps.catalog.management.commands package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#submodules" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.catalog.management.commands.cache_programs" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands#module-openedx.core.djangoapps.catalog.management.commands.cache_programs">openedx.core.djangoapps.catalog.management.commands.cache_programs module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.catalog.management.commands.create_catalog_integrations" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands#module-openedx.core.djangoapps.catalog.management.commands.create_catalog_integrations">openedx.core.djangoapps.catalog.management.commands.create_catalog_integrations module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.catalog.management.commands.sync_course_runs" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands#module-openedx.core.djangoapps.catalog.management.commands.sync_course_runs">openedx.core.djangoapps.catalog.management.commands.sync_course_runs module</reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4"><reference anchorname="#module-openedx.core.djangoapps.catalog.management.commands" internal="True" refuri="openedx.core.djangoapps.catalog.management.commands#module-openedx.core.djangoapps.catalog.management.commands">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.djangoapps.catalog.management" internal="True" refuri="openedx.core.djangoapps.catalog.management#module-openedx.core.djangoapps.catalog.management">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.api openedx-core-djangoapps-catalog-api-module" names="openedx.core.djangoapps.catalog.api\ module">
            <title>openedx.core.djangoapps.catalog.api module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.api',\ 'module-openedx.core.djangoapps.catalog.api',\ '',\ None]"></index>
            <paragraph>Python APIs exposed by the catalog app to other in-process apps.</paragraph>
            <index entries="['single',\ 'get_course_run_details()\ (in\ module\ openedx.core.djangoapps.catalog.api)',\ 'openedx.core.djangoapps.catalog.api.get_course_run_details',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_run_details()" _toc_parts="openedx.core.djangoapps.catalog.api get_course_run_details" class="" classes="sig sig-object py" fullname="get_course_run_details" ids="openedx.core.djangoapps.catalog.api.get_course_run_details" module="openedx.core.djangoapps.catalog.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_run_details</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields_list</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieves course run details for a given course run key.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Params:</term>
                            <definition>
                                <paragraph>course_key (CourseKey): The identifier for the course.
                                    fields_list (List, string): A list of fields (as strings) of values we want returned.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>dict containing response from the Discovery API that includes the fields specified in <title_reference>fields_list</title_reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_run_key_for_program_from_cache()\ (in\ module\ openedx.core.djangoapps.catalog.api)',\ 'openedx.core.djangoapps.catalog.api.get_course_run_key_for_program_from_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_run_key_for_program_from_cache()" _toc_parts="openedx.core.djangoapps.catalog.api get_course_run_key_for_program_from_cache" class="" classes="sig sig-object py" fullname="get_course_run_key_for_program_from_cache" ids="openedx.core.djangoapps.catalog.api.get_course_run_key_for_program_from_cache" module="openedx.core.djangoapps.catalog.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_run_key_for_program_from_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieves a list of Course Run Keys from the Program.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Params:</term>
                            <definition>
                                <paragraph>program (dict): A dictionary from the program cache containing the data for a program.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A set of Course Run Keys.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>(set)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_by_type()\ (in\ module\ openedx.core.djangoapps.catalog.api)',\ 'openedx.core.djangoapps.catalog.api.get_programs_by_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_by_type()" _toc_parts="openedx.core.djangoapps.catalog.api get_programs_by_type" class="" classes="sig sig-object py" fullname="get_programs_by_type" ids="openedx.core.djangoapps.catalog.api.get_programs_by_type" module="openedx.core.djangoapps.catalog.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_by_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program_type_slug</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieves a list of programs for the site whose type’s slug matches the parameter.
                        Slug is used is used as a consistent value to check since ProgramType.name is
                        a field that gets translated.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Params:</term>
                            <definition>
                                <paragraph>site (Site): The corresponding Site object to fetch programs for.
                                    program_type_slug (string): The type slug that matching programs must have.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of programs (dicts) for the given site with the given type slug</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_from_cache_by_uuid()\ (in\ module\ openedx.core.djangoapps.catalog.api)',\ 'openedx.core.djangoapps.catalog.api.get_programs_from_cache_by_uuid',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_from_cache_by_uuid()" _toc_parts="openedx.core.djangoapps.catalog.api get_programs_from_cache_by_uuid" class="" classes="sig sig-object py" fullname="get_programs_from_cache_by_uuid" ids="openedx.core.djangoapps.catalog.api.get_programs_from_cache_by_uuid" module="openedx.core.djangoapps.catalog.api"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.api.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_from_cache_by_uuid</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">uuids</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieves the programs for the provided UUIDS. Relies on
                        the Program cache, if it is not updated or data is missing the result
                        will be missing data or empty.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Params:</term>
                            <definition>
                                <paragraph>uuids (list): A list of Program UUIDs to get Program data for from the cache.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dictionaries representing programs.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>(list)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.apps openedx-core-djangoapps-catalog-apps-module" names="openedx.core.djangoapps.catalog.apps\ module">
            <title>openedx.core.djangoapps.catalog.apps module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.apps',\ 'module-openedx.core.djangoapps.catalog.apps',\ '',\ None]"></index>
            <paragraph>Configuration for Catalog</paragraph>
            <index entries="['single',\ 'CatalogConfig\ (class\ in\ openedx.core.djangoapps.catalog.apps)',\ 'openedx.core.djangoapps.catalog.apps.CatalogConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CatalogConfig" _toc_parts="openedx.core.djangoapps.catalog.apps CatalogConfig" class="" classes="sig sig-object py" fullname="CatalogConfig" ids="openedx.core.djangoapps.catalog.apps.CatalogConfig" module="openedx.core.djangoapps.catalog.apps"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.apps.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CatalogConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_module</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">AppConfig</literal></paragraph>
                    <index entries="['single',\ 'name\ (openedx.core.djangoapps.catalog.apps.CatalogConfig\ attribute)',\ 'openedx.core.djangoapps.catalog.apps.CatalogConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogConfig.name" _toc_parts="openedx.core.djangoapps.catalog.apps CatalogConfig name" class="CatalogConfig" classes="sig sig-object py" fullname="CatalogConfig.name" ids="openedx.core.djangoapps.catalog.apps.CatalogConfig.name" module="openedx.core.djangoapps.catalog.apps"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.core.djangoapps.catalog'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'verbose_name\ (openedx.core.djangoapps.catalog.apps.CatalogConfig\ attribute)',\ 'openedx.core.djangoapps.catalog.apps.CatalogConfig.verbose_name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogConfig.verbose_name" _toc_parts="openedx.core.djangoapps.catalog.apps CatalogConfig verbose_name" class="CatalogConfig" classes="sig sig-object py" fullname="CatalogConfig.verbose_name" ids="openedx.core.djangoapps.catalog.apps.CatalogConfig.verbose_name" module="openedx.core.djangoapps.catalog.apps"><desc_name classes="sig-name descname" xml:space="preserve">verbose_name</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'Catalog'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.cache openedx-core-djangoapps-catalog-cache-module" names="openedx.core.djangoapps.catalog.cache\ module">
            <title>openedx.core.djangoapps.catalog.cache module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.cache',\ 'module-openedx.core.djangoapps.catalog.cache',\ '',\ None]"></index>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.constants openedx-core-djangoapps-catalog-constants-module" names="openedx.core.djangoapps.catalog.constants\ module">
            <title>openedx.core.djangoapps.catalog.constants module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.constants',\ 'module-openedx.core.djangoapps.catalog.constants',\ '',\ None]"></index>
            <paragraph>Constants associated with catalog</paragraph>
            <index entries="['single',\ 'PathwayType\ (class\ in\ openedx.core.djangoapps.catalog.constants)',\ 'openedx.core.djangoapps.catalog.constants.PathwayType',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="PathwayType" _toc_parts="openedx.core.djangoapps.catalog.constants PathwayType" class="" classes="sig sig-object py" fullname="PathwayType" ids="openedx.core.djangoapps.catalog.constants.PathwayType" module="openedx.core.djangoapps.catalog.constants"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.constants.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PathwayType</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Enum</literal></paragraph>
                    <paragraph>Allowed values for pathway_type.</paragraph>
                    <index entries="['single',\ 'CREDIT\ (openedx.core.djangoapps.catalog.constants.PathwayType\ attribute)',\ 'openedx.core.djangoapps.catalog.constants.PathwayType.CREDIT',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PathwayType.CREDIT" _toc_parts="openedx.core.djangoapps.catalog.constants PathwayType CREDIT" class="PathwayType" classes="sig sig-object py" fullname="PathwayType.CREDIT" ids="openedx.core.djangoapps.catalog.constants.PathwayType.CREDIT" module="openedx.core.djangoapps.catalog.constants"><desc_name classes="sig-name descname" xml:space="preserve">CREDIT</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'credit'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'INDUSTRY\ (openedx.core.djangoapps.catalog.constants.PathwayType\ attribute)',\ 'openedx.core.djangoapps.catalog.constants.PathwayType.INDUSTRY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PathwayType.INDUSTRY" _toc_parts="openedx.core.djangoapps.catalog.constants PathwayType INDUSTRY" class="PathwayType" classes="sig sig-object py" fullname="PathwayType.INDUSTRY" ids="openedx.core.djangoapps.catalog.constants.PathwayType.INDUSTRY" module="openedx.core.djangoapps.catalog.constants"><desc_name classes="sig-name descname" xml:space="preserve">INDUSTRY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'industry'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.models openedx-core-djangoapps-catalog-models-module" names="openedx.core.djangoapps.catalog.models\ module">
            <title>openedx.core.djangoapps.catalog.models module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.models',\ 'module-openedx.core.djangoapps.catalog.models',\ '',\ None]"></index>
            <paragraph>Models governing integration with the catalog service.</paragraph>
            <index entries="['single',\ 'CatalogIntegration\ (class\ in\ openedx.core.djangoapps.catalog.models)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CatalogIntegration" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration" class="" classes="sig sig-object py" fullname="CatalogIntegration" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration" module="openedx.core.djangoapps.catalog.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.models.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CatalogIntegration</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">ConfigurationModel</literal></paragraph>
                    <paragraph>Manages configuration for connecting to the catalog service and using its API.</paragraph>
                    <comment xml:space="preserve">no_pii:</comment>
                    <index entries="['single',\ 'API_NAME\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.API_NAME',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.API_NAME" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration API_NAME" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.API_NAME" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.API_NAME" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">API_NAME</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'catalog'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CACHE_KEY\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.CACHE_KEY',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.CACHE_KEY" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration CACHE_KEY" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.CACHE_KEY" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.CACHE_KEY" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">CACHE_KEY</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'catalog.api.data'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CatalogIntegration.DoesNotExist',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.DoesNotExist',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CatalogIntegration.DoesNotExist" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration DoesNotExist" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.DoesNotExist" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.DoesNotExist" module="openedx.core.djangoapps.catalog.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">DoesNotExist</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'CatalogIntegration.MultipleObjectsReturned',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.MultipleObjectsReturned',\ '',\ None]"></index>
                    <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                        <desc_signature _toc_name="CatalogIntegration.MultipleObjectsReturned" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration MultipleObjectsReturned" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.MultipleObjectsReturned" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.MultipleObjectsReturned" module="openedx.core.djangoapps.catalog.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">MultipleObjectsReturned</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.MultipleObjectsReturned"><literal classes="xref py py-class">MultipleObjectsReturned</literal></reference></paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cache_ttl\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.cache_ttl',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.cache_ttl" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration cache_ttl" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.cache_ttl" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.cache_ttl" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">cache_ttl</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'change_date\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.change_date',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.change_date" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration change_date" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.change_date" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.change_date" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">change_date</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.changed_by',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.changed_by" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration changed_by" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.changed_by" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.changed_by" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Accessor to the related object on the forward side of a many-to-one or
                                one-to-one (via ForwardOneToOneDescriptor subclass) relation.</paragraph>
                            <paragraph>In the example:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">class Child(Model):
    parent = ForeignKey(Parent, related_name='children')</literal_block>
                            <paragraph><literal>Child.parent</literal> is a <literal>ForwardManyToOneDescriptor</literal> instance.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'changed_by_id\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.changed_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.changed_by_id" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration changed_by_id" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.changed_by_id" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.changed_by_id" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">changed_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'enabled\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.enabled',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.enabled" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration enabled" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.enabled" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.enabled" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_internal_api_url()\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ method)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.get_internal_api_url',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CatalogIntegration.get_internal_api_url()" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration get_internal_api_url" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.get_internal_api_url" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.get_internal_api_url" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">get_internal_api_url</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the internal Catalog API URL associated with the request’s site.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_next_by_change_date()\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ method)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.get_next_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CatalogIntegration.get_next_by_change_date()" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration get_next_by_change_date" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.get_next_by_change_date" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.get_next_by_change_date" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">get_next_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=True</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_previous_by_change_date()\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ method)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.get_previous_by_change_date',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CatalogIntegration.get_previous_by_change_date()" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration get_previous_by_change_date" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.get_previous_by_change_date" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.get_previous_by_change_date" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">get_previous_by_change_date</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">*</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">field=&lt;django.db.models.fields.DateTimeField: change_date&gt;</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_next=False</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">**kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_service_user()\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ method)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.get_service_user',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CatalogIntegration.get_service_user()" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration get_service_user" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.get_service_user" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.get_service_user" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">get_service_user</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'id\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.id" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration id" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.id" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.id" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'internal_api_url\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.internal_api_url',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.internal_api_url" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration internal_api_url" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.internal_api_url" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.internal_api_url" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">internal_api_url</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_cache_enabled\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ property)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.is_cache_enabled',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="CatalogIntegration.is_cache_enabled" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration is_cache_enabled" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.is_cache_enabled" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.is_cache_enabled" module="openedx.core.djangoapps.catalog.models"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_cache_enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether responses from the catalog API will be cached.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'long_term_cache_ttl\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.long_term_cache_ttl',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.long_term_cache_ttl" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration long_term_cache_ttl" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.long_term_cache_ttl" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.long_term_cache_ttl" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">long_term_cache_ttl</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'page_size\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.page_size',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.page_size" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration page_size" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.page_size" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.page_size" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">page_size</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'service_username\ (openedx.core.djangoapps.catalog.models.CatalogIntegration\ attribute)',\ 'openedx.core.djangoapps.catalog.models.CatalogIntegration.service_username',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CatalogIntegration.service_username" _toc_parts="openedx.core.djangoapps.catalog.models CatalogIntegration service_username" class="CatalogIntegration" classes="sig sig-object py" fullname="CatalogIntegration.service_username" ids="openedx.core.djangoapps.catalog.models.CatalogIntegration.service_username" module="openedx.core.djangoapps.catalog.models"><desc_name classes="sig-name descname" xml:space="preserve">service_username</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A wrapper for a deferred-loading field. When the value is read from this
                                object the first time, the query is executed.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.urls openedx-core-djangoapps-catalog-urls-module" names="openedx.core.djangoapps.catalog.urls\ module">
            <title>openedx.core.djangoapps.catalog.urls module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.urls',\ 'module-openedx.core.djangoapps.catalog.urls',\ '',\ None]"></index>
            <paragraph>Defines the URL routes for this app.</paragraph>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.utils openedx-core-djangoapps-catalog-utils-module" names="openedx.core.djangoapps.catalog.utils\ module">
            <title>openedx.core.djangoapps.catalog.utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.utils',\ 'module-openedx.core.djangoapps.catalog.utils',\ '',\ None]"></index>
            <paragraph>Helper functions for working with the catalog service.</paragraph>
            <index entries="['single',\ 'check_catalog_integration_and_get_user()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.check_catalog_integration_and_get_user',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="check_catalog_integration_and_get_user()" _toc_parts="openedx.core.djangoapps.catalog.utils check_catalog_integration_and_get_user" class="" classes="sig sig-object py" fullname="check_catalog_integration_and_get_user" ids="openedx.core.djangoapps.catalog.utils.check_catalog_integration_and_get_user" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">check_catalog_integration_and_get_user</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">error_message_field</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Checks that catalog integration is enabled, and if so, attempts to get and
                        return the service user.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>error_message_field</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The field that will be attempted to be
                                    retrieved when calling the api client. Used for the error message.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph><paragraph>The catalog integration service user if it exists, else None
                                        The catalog integration Object</paragraph><block_quote><paragraph>Note: (This is necessary for future calls of functions using this method)</paragraph></block_quote></paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>Tuple of</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'child_programs()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.child_programs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="child_programs()" _toc_parts="openedx.core.djangoapps.catalog.utils child_programs" class="" classes="sig sig-object py" fullname="child_programs" ids="openedx.core.djangoapps.catalog.utils.child_programs" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">child_programs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a program, recursively find all child programs related
                        to this program through its curricula.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_run_keys_for_program()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.course_run_keys_for_program',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_run_keys_for_program()" _toc_parts="openedx.core.djangoapps.catalog.utils course_run_keys_for_program" class="" classes="sig sig-object py" fullname="course_run_keys_for_program" ids="openedx.core.djangoapps.catalog.utils.course_run_keys_for_program" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_run_keys_for_program</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_program</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>All of the course run keys associated with this <literal>parent_program</literal>, either
                        via its <literal>curriculum</literal> field (looking at both the curriculum’s courses
                        and child programs), or through the many-to-many <literal>courses</literal> field on the program.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_uuids_for_program()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.course_uuids_for_program',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_uuids_for_program()" _toc_parts="openedx.core.djangoapps.catalog.utils course_uuids_for_program" class="" classes="sig sig-object py" fullname="course_uuids_for_program" ids="openedx.core.djangoapps.catalog.utils.course_uuids_for_program" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_uuids_for_program</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent_program</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>All of the course uuids associated with this <literal>parent_program</literal>, either
                        via its <literal>curriculum</literal> field (looking at both the curriculum’s courses
                        and child programs), or through the many-to-many <literal>courses</literal> field on the program.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'format_price()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.format_price',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="format_price()" _toc_parts="openedx.core.djangoapps.catalog.utils format_price" class="" classes="sig sig-object py" fullname="format_price" ids="openedx.core.djangoapps.catalog.utils.format_price" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">format_price</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">price</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">symbol</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'$'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">code</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'USD'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Format the price to have the appropriate currency and digits..</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>price</literal_strong> – The price amount.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>symbol</literal_strong> – The symbol for the price (default: $)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>code</literal_strong> – The currency code to be appended to the price (default: USD)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A formatted price string, i.e. ‘$10 USD’, ‘$10.52 USD’.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_catalog_api_base_url()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_catalog_api_base_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_catalog_api_base_url()" _toc_parts="openedx.core.djangoapps.catalog.utils get_catalog_api_base_url" class="" classes="sig sig-object py" fullname="get_catalog_api_base_url" ids="openedx.core.djangoapps.catalog.utils.get_catalog_api_base_url" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_catalog_api_base_url</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a base API url used to make Catalog API requests.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_catalog_api_client()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_catalog_api_client',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_catalog_api_client()" _toc_parts="openedx.core.djangoapps.catalog.utils get_catalog_api_client" class="" classes="sig sig-object py" fullname="get_catalog_api_client" ids="openedx.core.djangoapps.catalog.utils.get_catalog_api_client" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_catalog_api_client</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">user</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns an API client which can be used to make Catalog API requests.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_data()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_data()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_data" class="" classes="sig sig-object py" fullname="get_course_data" ids="openedx.core.djangoapps.catalog.utils.get_course_data" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_str</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">querystring</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve information about the course with the given course key.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_key_str</literal_strong> – key for the course about which we are retrieving information.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>fields</literal_strong> (<literal_emphasis>List</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>string</literal_emphasis>) – The given fields that you want to retrieve from API response.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>querystring</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – Optional query string parameters.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>dict with details about specified course.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_run_data()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_run_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_run_data()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_run_data" class="" classes="sig sig-object py" fullname="get_course_run_data" ids="openedx.core.djangoapps.catalog.utils.get_course_run_data" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_run_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve information about the course run with the given course run id.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_run_id</literal_strong> – key for the course run about which we are retrieving information.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>fields</literal_strong> (<literal_emphasis>List</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>string</literal_emphasis>) – The given fields that you want to retrieve from API response.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>dict with details about specified course run.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_run_details()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_run_details',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_run_details()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_run_details" class="" classes="sig sig-object py" fullname="get_course_run_details" ids="openedx.core.djangoapps.catalog.utils.get_course_run_details" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_run_details</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve information about the course run with the given id</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>course_run_key</literal_strong> – key for the course_run about which we are retrieving information</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>dict with language, start date, end date, and max_effort details about specified course run</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_runs()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_runs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_runs()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_runs" class="" classes="sig sig-object py" fullname="get_course_runs" ids="openedx.core.djangoapps.catalog.utils.get_course_runs" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_runs</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve all the course runs from the catalog service.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dict with each record representing a course run.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_runs_for_course()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_runs_for_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_runs_for_course()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_runs_for_course" class="" classes="sig sig-object py" fullname="get_course_runs_for_course" ids="openedx.core.djangoapps.catalog.utils.get_course_runs_for_course" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_runs_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_uuid</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_uuid_for_course()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_course_uuid_for_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_uuid_for_course()" _toc_parts="openedx.core.djangoapps.catalog.utils get_course_uuid_for_course" class="" classes="sig sig-object py" fullname="get_course_uuid_for_course" ids="openedx.core.djangoapps.catalog.utils.get_course_uuid_for_course" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_uuid_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_key</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve the Course UUID for a given course key</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>course_run_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis>) – A Key for a Course run that will be pulled apart to get just the information</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>Course</literal_strong> (<literal_emphasis>required for a</literal_emphasis>)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Course UUID and None if it was not retrieved.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>UUID</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_currency_data()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_currency_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_currency_data()" _toc_parts="openedx.core.djangoapps.catalog.utils get_currency_data" class="" classes="sig sig-object py" fullname="get_currency_data" ids="openedx.core.djangoapps.catalog.utils.get_currency_data" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_currency_data</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve currency data from the catalog service.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dict, representing program types.
                                    dict, if a specific program type is requested.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_fulfillable_course_runs_for_entitlement()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_fulfillable_course_runs_for_entitlement',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_fulfillable_course_runs_for_entitlement()" _toc_parts="openedx.core.djangoapps.catalog.utils get_fulfillable_course_runs_for_entitlement" class="" classes="sig sig-object py" fullname="get_fulfillable_course_runs_for_entitlement" ids="openedx.core.djangoapps.catalog.utils.get_fulfillable_course_runs_for_entitlement" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_fulfillable_course_runs_for_entitlement</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entitlement</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_runs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Looks through the list of course runs and returns the course runs that can
                        be applied to the entitlement.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>entitlement</literal_strong> (<literal_emphasis>CourseEntitlement</literal_emphasis>) – The CourseEntitlement to which a</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>applied.</literal_strong> (<literal_emphasis>course run is to be</literal_emphasis>)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_runs</literal_strong> (<literal_emphasis>list</literal_emphasis>) – List of course run that we would like to apply</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>entitlement.</literal_strong> (<literal_emphasis>to the</literal_emphasis>)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of sessions that a user can apply to the provided entitlement.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>list</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_localized_price_text()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_localized_price_text',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_localized_price_text()" _toc_parts="openedx.core.djangoapps.catalog.utils get_localized_price_text" class="" classes="sig sig-object py" fullname="get_localized_price_text" ids="openedx.core.djangoapps.catalog.utils.get_localized_price_text" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_localized_price_text</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">price</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the localized converted price as string (ex. ‘$150 USD’)</paragraph>
                    <paragraph>If the users location has been added to the request, this will return the given price based on conversion rate
                        from the Catalog service and return a localized string otherwise will return the default price in USD</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_owners_for_course()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_owners_for_course',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_owners_for_course()" _toc_parts="openedx.core.djangoapps.catalog.utils get_owners_for_course" class="" classes="sig sig-object py" fullname="get_owners_for_course" ids="openedx.core.djangoapps.catalog.utils.get_owners_for_course" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_owners_for_course</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_uuid</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieves the course owner given a course uuid.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>Arguments</term>
                            <definition>
                                <paragraph>course_uuid (string): Course UUID</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_pathways()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_pathways',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_pathways()" _toc_parts="openedx.core.djangoapps.catalog.utils get_pathways" class="" classes="sig sig-object py" fullname="get_pathways" ids="openedx.core.djangoapps.catalog.utils.get_pathways" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_pathways</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">pathway_id</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Read pathways from the cache.
                        The cache is populated by a management command, cache_programs.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>site</literal_strong> (<literal_emphasis>Site</literal_emphasis>) – django.contrib.sites.models object</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <paragraph><literal_strong>pathway_id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – id identifying a specific pathway to read from the cache.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dict, representing pathways.
                                    dict, if a specific pathway is requested.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_program_types()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_program_types',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_program_types()" _toc_parts="openedx.core.djangoapps.catalog.utils get_program_types" class="" classes="sig sig-object py" fullname="get_program_types" ids="openedx.core.djangoapps.catalog.utils.get_program_types" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_program_types</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve program types from the catalog service.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <paragraph><literal_strong>name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Name identifying a specific program type.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dict, representing program types.
                                    dict, if a specific program type is requested.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs" class="" classes="sig sig-object py" fullname="get_programs" ids="openedx.core.djangoapps.catalog.utils.get_programs" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Site</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">uuid</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">uuids</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">catalog_course_uuid</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">organization</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Read programs from the cache.</paragraph>
                    <paragraph>The cache is populated by a management command, cache_programs.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>site</literal_strong> (<literal_emphasis>Site</literal_emphasis>) – django.contrib.sites.models object to fetch programs of.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>uuid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – UUID identifying a specific program to read from the cache.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>uuids</literal_strong> (<literal_emphasis>list</literal_emphasis><literal_emphasis> of </literal_emphasis><literal_emphasis>string</literal_emphasis>) – UUIDs identifying a specific programs to read from the cache.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course</literal_strong> (<literal_emphasis>string</literal_emphasis>) – course run id identifying a specific course run to read from the cache.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>catalog_course_uuid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Catalog Course UUID</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>organization</literal_strong> (<literal_emphasis>string</literal_emphasis>) – short name for specific organization to read from the cache.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of str, representing programs.
                                    dict, if a specific program is requested.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_by_type()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs_by_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_by_type()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs_by_type" class="" classes="sig sig-object py" fullname="get_programs_by_type" ids="openedx.core.djangoapps.catalog.utils.get_programs_by_type" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_by_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <field_list>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>site</literal_strong> (<literal_emphasis>Site</literal_emphasis>) – The corresponding Site object to fetch programs for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>program_type</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The program_type that matching programs must have.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of programs for the given site with the given program_type.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_by_type_slug()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs_by_type_slug',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_by_type_slug()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs_by_type_slug" class="" classes="sig sig-object py" fullname="get_programs_by_type_slug" ids="openedx.core.djangoapps.catalog.utils.get_programs_by_type_slug" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_by_type_slug</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program_type_slug</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <field_list>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>site</literal_strong> (<literal_emphasis>Site</literal_emphasis>) – The corresponding Site object to fetch programs for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>program_type_slug</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The type slug that matching programs must have.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A list of programs for the given site with the given type slug.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Slugs are a consistent identifier whereas type (used in <title_reference>get_programs_by_type</title_reference>)
                        may be translated.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_by_uuids()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs_by_uuids',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_by_uuids()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs_by_uuids" class="" classes="sig sig-object py" fullname="get_programs_by_uuids" ids="openedx.core.djangoapps.catalog.utils.get_programs_by_uuids" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_by_uuids</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">uuids</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Any<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>str<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>Gets a list of programs for the provided uuids</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_for_organization()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs_for_organization',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_for_organization()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs_for_organization" class="" classes="sig sig-object py" fullname="get_programs_for_organization" ids="openedx.core.djangoapps.catalog.utils.get_programs_for_organization" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_for_organization</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">organization</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Retrieve list of program uuids authored by a given organization</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_programs_with_type()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_programs_with_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_programs_with_type()" _toc_parts="openedx.core.djangoapps.catalog.utils get_programs_with_type" class="" classes="sig sig-object py" fullname="get_programs_with_type" ids="openedx.core.djangoapps.catalog.utils.get_programs_with_type" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_programs_with_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">site</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">include_hidden</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the list of programs. You can filter the types of programs returned by using the optional
                        include_hidden parameter. By default hidden programs will be included.</paragraph>
                    <paragraph>The program dict is updated with the fully serialized program type.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>site</literal_strong> (<literal_emphasis>Site</literal_emphasis>) – django.contrib.sites.models object</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <paragraph><literal_strong>include_hidden</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – whether to include hidden programs</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>list of dict, representing the active programs.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_pseudo_session_for_entitlement()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_pseudo_session_for_entitlement',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_pseudo_session_for_entitlement()" _toc_parts="openedx.core.djangoapps.catalog.utils get_pseudo_session_for_entitlement" class="" classes="sig sig-object py" fullname="get_pseudo_session_for_entitlement" ids="openedx.core.djangoapps.catalog.utils.get_pseudo_session_for_entitlement" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_pseudo_session_for_entitlement</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entitlement</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This function is used to pass pseudo-data to the front end, returning a single session, regardless of whether that
                        session is currently available.</paragraph>
                    <paragraph>First tries to return the first available session. If there are no available sessions, will try
                        to return the most recent session regardless of availability.
                        Returns None if there are no sessions for that course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_visible_sessions_for_entitlement()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.get_visible_sessions_for_entitlement',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_visible_sessions_for_entitlement()" _toc_parts="openedx.core.djangoapps.catalog.utils get_visible_sessions_for_entitlement" class="" classes="sig sig-object py" fullname="get_visible_sessions_for_entitlement" ids="openedx.core.djangoapps.catalog.utils.get_visible_sessions_for_entitlement" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_visible_sessions_for_entitlement</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">entitlement</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Takes an entitlement object and returns the course runs that a user can currently enroll in.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_course_run_in_program()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.is_course_run_in_program',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_course_run_in_program()" _toc_parts="openedx.core.djangoapps.catalog.utils is_course_run_in_program" class="" classes="sig sig-object py" fullname="is_course_run_in_program" ids="openedx.core.djangoapps.catalog.utils.is_course_run_in_program" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_course_run_in_program</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_run_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if a course run is part of a program.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>program</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – program data, as returned by get_programs()</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>course_run_key</literal_strong> (<literal_emphasis>CourseKey</literal_emphasis><literal_emphasis>|</literal_emphasis><literal_emphasis>str</literal_emphasis>)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <definition_list>
                        <definition_list_item>
                            <term>Returns: bool</term>
                            <definition>
                                <paragraph>Whether the program exists AND the course run is part of it.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'normalize_program_type()\ (in\ module\ openedx.core.djangoapps.catalog.utils)',\ 'openedx.core.djangoapps.catalog.utils.normalize_program_type',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="normalize_program_type()" _toc_parts="openedx.core.djangoapps.catalog.utils normalize_program_type" class="" classes="sig sig-object py" fullname="normalize_program_type" ids="openedx.core.djangoapps.catalog.utils.normalize_program_type" module="openedx.core.djangoapps.catalog.utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">normalize_program_type</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">program_type</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function that normalizes a program type string for use in a cache key.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog.views openedx-core-djangoapps-catalog-views-module" names="openedx.core.djangoapps.catalog.views\ module">
            <title>openedx.core.djangoapps.catalog.views module</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog.views',\ 'module-openedx.core.djangoapps.catalog.views',\ '',\ None]"></index>
            <index entries="['single',\ 'cache_programs()\ (in\ module\ openedx.core.djangoapps.catalog.views)',\ 'openedx.core.djangoapps.catalog.views.cache_programs',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="cache_programs()" _toc_parts="openedx.core.djangoapps.catalog.views cache_programs" class="" classes="sig sig-object py" fullname="cache_programs" ids="openedx.core.djangoapps.catalog.views.cache_programs" module="openedx.core.djangoapps.catalog.views"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.djangoapps.catalog.views.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">cache_programs</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Call the cache_programs management command.</paragraph>
                    <paragraph>This view is intended for use in testing contexts where the LMS can only be
                        reached over HTTP (e.g., Selenium-based browser tests). The discovery service
                        API the management command attempts to call should be stubbed out first.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.djangoapps.catalog module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.djangoapps.catalog',\ 'module-openedx.core.djangoapps.catalog',\ '',\ None]"></index>
        </section>
    </section>
</document>
