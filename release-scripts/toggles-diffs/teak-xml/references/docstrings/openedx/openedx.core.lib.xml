<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docstrings/openedx/openedx.core.lib.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="openedx-core-lib-package" names="openedx.core.lib\ package">
        <title>openedx.core.lib package</title>
        <section ids="subpackages" names="subpackages">
            <title>Subpackages</title>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.api">openedx.core.lib.api package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.api#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.authentication" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.authentication">openedx.core.lib.api.authentication module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication"><literal>BearerAuthentication</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.allow_inactive_users" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.allow_inactive_users"><literal>BearerAuthentication.allow_inactive_users</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.authenticate" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.authenticate"><literal>BearerAuthentication.authenticate()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.authenticate_credentials" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.authenticate_credentials"><literal>BearerAuthentication.authenticate_credentials()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.authenticate_header" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.authenticate_header"><literal>BearerAuthentication.authenticate_header()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.get_access_token" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.get_access_token"><literal>BearerAuthentication.get_access_token()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthentication.www_authenticate_realm" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthentication.www_authenticate_realm"><literal>BearerAuthentication.www_authenticate_realm</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser"><literal>BearerAuthenticationAllowInactiveUser</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser.allow_inactive_users" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.BearerAuthenticationAllowInactiveUser.allow_inactive_users"><literal>BearerAuthenticationAllowInactiveUser.allow_inactive_users</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.OAuth2Authentication" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.OAuth2Authentication"><literal>OAuth2Authentication</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.authentication.OAuth2AuthenticationAllowInactiveUser" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.authentication.OAuth2AuthenticationAllowInactiveUser"><literal>OAuth2AuthenticationAllowInactiveUser</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.fields" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.fields">openedx.core.lib.api.fields module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.fields.AbsoluteURLField" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.fields.AbsoluteURLField"><literal>AbsoluteURLField</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.fields.AbsoluteURLField.to_representation" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.fields.AbsoluteURLField.to_representation"><literal>AbsoluteURLField.to_representation()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.fields.ExpandableField" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.fields.ExpandableField"><literal>ExpandableField</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.fields.ExpandableField.to_representation" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.fields.ExpandableField.to_representation"><literal>ExpandableField.to_representation()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.mixins" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.mixins">openedx.core.lib.api.mixins module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.mixins.PutAsCreateMixin" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.mixins.PutAsCreateMixin"><literal>PutAsCreateMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.mixins.PutAsCreateMixin.update" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.mixins.PutAsCreateMixin.update"><literal>PutAsCreateMixin.update()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.parsers" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.parsers">openedx.core.lib.api.parsers module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.MergePatchParser" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.MergePatchParser"><literal>MergePatchParser</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.MergePatchParser.media_type" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.MergePatchParser.media_type"><literal>MergePatchParser.media_type</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.TypedFileUploadParser" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.TypedFileUploadParser"><literal>TypedFileUploadParser</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.TypedFileUploadParser.file_extensions" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.TypedFileUploadParser.file_extensions"><literal>TypedFileUploadParser.file_extensions</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.TypedFileUploadParser.media_type" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.TypedFileUploadParser.media_type"><literal>TypedFileUploadParser.media_type</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.parsers.TypedFileUploadParser.parse" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.parsers.TypedFileUploadParser.parse"><literal>TypedFileUploadParser.parse()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.permissions" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.permissions">openedx.core.lib.api.permissions module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.ApiKeyHeaderPermission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.ApiKeyHeaderPermission"><literal>ApiKeyHeaderPermission</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.ApiKeyHeaderPermission.has_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.ApiKeyHeaderPermission.has_permission"><literal>ApiKeyHeaderPermission.has_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.ApiKeyHeaderPermissionIsAuthenticated" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.ApiKeyHeaderPermissionIsAuthenticated"><literal>ApiKeyHeaderPermissionIsAuthenticated</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.ApiKeyHeaderPermissionIsAuthenticated.has_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.ApiKeyHeaderPermissionIsAuthenticated.has_permission"><literal>ApiKeyHeaderPermissionIsAuthenticated.has_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsCourseStaffInstructor" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsCourseStaffInstructor"><literal>IsCourseStaffInstructor</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsCourseStaffInstructor.has_object_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsCourseStaffInstructor.has_object_permission"><literal>IsCourseStaffInstructor.has_object_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsMasterCourseStaffInstructor" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsMasterCourseStaffInstructor"><literal>IsMasterCourseStaffInstructor</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsMasterCourseStaffInstructor.has_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsMasterCourseStaffInstructor.has_permission"><literal>IsMasterCourseStaffInstructor.has_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsStaffOrOwner" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsStaffOrOwner"><literal>IsStaffOrOwner</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsStaffOrOwner.has_object_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsStaffOrOwner.has_object_permission"><literal>IsStaffOrOwner.has_object_permission()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsStaffOrOwner.has_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsStaffOrOwner.has_permission"><literal>IsStaffOrOwner.has_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsStaffOrReadOnly" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsStaffOrReadOnly"><literal>IsStaffOrReadOnly</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsStaffOrReadOnly.has_object_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsStaffOrReadOnly.has_object_permission"><literal>IsStaffOrReadOnly.has_object_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsUserInUrlOrStaff" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsUserInUrlOrStaff"><literal>IsUserInUrlOrStaff</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.permissions.IsUserInUrlOrStaff.has_permission" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.permissions.IsUserInUrlOrStaff.has_permission"><literal>IsUserInUrlOrStaff.has_permission()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.serializers" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.serializers">openedx.core.lib.api.serializers module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.CollapsedReferenceSerializer" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.CollapsedReferenceSerializer"><literal>CollapsedReferenceSerializer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.CollapsedReferenceSerializer.Meta" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.CollapsedReferenceSerializer.Meta"><literal>CollapsedReferenceSerializer.Meta</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.CourseKeyField" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.CourseKeyField"><literal>CourseKeyField</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.CourseKeyField.to_internal_value" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.CourseKeyField.to_internal_value"><literal>CourseKeyField.to_internal_value()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.CourseKeyField.to_representation" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.CourseKeyField.to_representation"><literal>CourseKeyField.to_representation()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.UsageKeyField" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.UsageKeyField"><literal>UsageKeyField</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.UsageKeyField.to_internal_value" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.UsageKeyField.to_internal_value"><literal>UsageKeyField.to_internal_value()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.serializers.UsageKeyField.to_representation" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.serializers.UsageKeyField.to_representation"><literal>UsageKeyField.to_representation()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.test_utils" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.test_utils">openedx.core.lib.api.test_utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase"><literal>ApiTestCase</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertAllowedMethods" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertAllowedMethods"><literal>ApiTestCase.assertAllowedMethods()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertAuthDisabled" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertAuthDisabled"><literal>ApiTestCase.assertAuthDisabled()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpBadRequest" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpBadRequest"><literal>ApiTestCase.assertHttpBadRequest()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpCreated" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpCreated"><literal>ApiTestCase.assertHttpCreated()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpForbidden" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpForbidden"><literal>ApiTestCase.assertHttpForbidden()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpMethodNotAllowed" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpMethodNotAllowed"><literal>ApiTestCase.assertHttpMethodNotAllowed()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpNotAuthorized" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpNotAuthorized"><literal>ApiTestCase.assertHttpNotAuthorized()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpOK" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertHttpOK"><literal>ApiTestCase.assertHttpOK()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.assertSelfReferential" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.assertSelfReferential"><literal>ApiTestCase.assertSelfReferential()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.basic_auth" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.basic_auth"><literal>ApiTestCase.basic_auth()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.get_json" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.get_json"><literal>ApiTestCase.get_json()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.request_with_auth" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.request_with_auth"><literal>ApiTestCase.request_with_auth()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.test_utils.ApiTestCase.request_without_auth" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.test_utils.ApiTestCase.request_without_auth"><literal>ApiTestCase.request_without_auth()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api.view_utils" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api.view_utils">openedx.core.lib.api.view_utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.DeveloperErrorResponseException" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorResponseException"><literal>DeveloperErrorResponseException</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin"><literal>DeveloperErrorViewMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin.api_error" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin.api_error"><literal>DeveloperErrorViewMixin.api_error()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin.handle_exception" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.DeveloperErrorViewMixin.handle_exception"><literal>DeveloperErrorViewMixin.handle_exception()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.ExpandableFieldViewMixin" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.ExpandableFieldViewMixin"><literal>ExpandableFieldViewMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.ExpandableFieldViewMixin.get_serializer_context" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.ExpandableFieldViewMixin.get_serializer_context"><literal>ExpandableFieldViewMixin.get_serializer_context()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.LazySequence" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.LazySequence"><literal>LazySequence</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.PaginatedAPIView" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.PaginatedAPIView"><literal>PaginatedAPIView</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.PaginatedAPIView.get_paginated_response" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.PaginatedAPIView.get_paginated_response"><literal>PaginatedAPIView.get_paginated_response()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.PaginatedAPIView.paginate_queryset" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.PaginatedAPIView.paginate_queryset"><literal>PaginatedAPIView.paginate_queryset()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.PaginatedAPIView.paginator" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.PaginatedAPIView.paginator"><literal>PaginatedAPIView.paginator</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.RetrievePatchAPIView" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.RetrievePatchAPIView"><literal>RetrievePatchAPIView</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.RetrievePatchAPIView.get" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.RetrievePatchAPIView.get"><literal>RetrievePatchAPIView.get()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.RetrievePatchAPIView.get_object_or_none" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.RetrievePatchAPIView.get_object_or_none"><literal>RetrievePatchAPIView.get_object_or_none()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.RetrievePatchAPIView.patch" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.RetrievePatchAPIView.patch"><literal>RetrievePatchAPIView.patch()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.add_serializer_errors" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.add_serializer_errors"><literal>add_serializer_errors()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.build_api_error" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.build_api_error"><literal>build_api_error()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.clean_errors" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.clean_errors"><literal>clean_errors()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.get_course_key" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.get_course_key"><literal>get_course_key()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.require_post_params" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.require_post_params"><literal>require_post_params()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.validate_course_key" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.validate_course_key"><literal>validate_course_key()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.verify_course_exists" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.verify_course_exists"><literal>verify_course_exists()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.api.view_utils.view_auth_classes" internal="True" refuri="openedx.core.lib.api#openedx.core.lib.api.view_utils.view_auth_classes"><literal>view_auth_classes()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.api" internal="True" refuri="openedx.core.lib.api#module-openedx.core.lib.api">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.celery">openedx.core.lib.celery package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.celery#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.celery.routers" internal="True" refuri="openedx.core.lib.celery#module-openedx.core.lib.celery.routers">openedx.core.lib.celery.routers module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.celery.routers.ensure_queue_env" internal="True" refuri="openedx.core.lib.celery#openedx.core.lib.celery.routers.ensure_queue_env"><literal>ensure_queue_env()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.celery.routers.route_task" internal="True" refuri="openedx.core.lib.celery#openedx.core.lib.celery.routers.route_task"><literal>route_task()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.celery.task_utils" internal="True" refuri="openedx.core.lib.celery#module-openedx.core.lib.celery.task_utils">openedx.core.lib.celery.task_utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.celery.task_utils.emulate_http_request" internal="True" refuri="openedx.core.lib.celery#openedx.core.lib.celery.task_utils.emulate_http_request"><literal>emulate_http_request()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.celery" internal="True" refuri="openedx.core.lib.celery#module-openedx.core.lib.celery">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.django_require">openedx.core.lib.django_require package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.django_require#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.django_require.staticstorage" internal="True" refuri="openedx.core.lib.django_require#module-openedx.core.lib.django_require.staticstorage">openedx.core.lib.django_require.staticstorage module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.django_require.staticstorage.OptimizedCachedRequireJsStorage" internal="True" refuri="openedx.core.lib.django_require#openedx.core.lib.django_require.staticstorage.OptimizedCachedRequireJsStorage"><literal>OptimizedCachedRequireJsStorage</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.django_require" internal="True" refuri="openedx.core.lib.django_require#module-openedx.core.lib.django_require">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.gating">openedx.core.lib.gating package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.gating#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.gating.api" internal="True" refuri="openedx.core.lib.gating#module-openedx.core.lib.gating.api">openedx.core.lib.gating.api module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.add_prerequisite" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.add_prerequisite"><literal>add_prerequisite()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.compute_is_prereq_met" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.compute_is_prereq_met"><literal>compute_is_prereq_met()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.find_gating_milestones" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.find_gating_milestones"><literal>find_gating_milestones()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.gating_enabled" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.gating_enabled"><literal>gating_enabled()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_gated_content" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_gated_content"><literal>get_gated_content()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_gating_milestone" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_gating_milestone"><literal>get_gating_milestone()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_prerequisites" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_prerequisites"><literal>get_prerequisites()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_required_content" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_required_content"><literal>get_required_content()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_subsection_completion_percentage" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_subsection_completion_percentage"><literal>get_subsection_completion_percentage()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.get_subsection_grade_percentage" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.get_subsection_grade_percentage"><literal>get_subsection_grade_percentage()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.is_gate_fulfilled" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.is_gate_fulfilled"><literal>is_gate_fulfilled()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.is_prerequisite" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.is_prerequisite"><literal>is_prerequisite()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.remove_prerequisite" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.remove_prerequisite"><literal>remove_prerequisite()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.set_required_content" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.set_required_content"><literal>set_required_content()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.api.update_milestone" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.api.update_milestone"><literal>update_milestone()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.gating.exceptions" internal="True" refuri="openedx.core.lib.gating#module-openedx.core.lib.gating.exceptions">openedx.core.lib.gating.exceptions module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.exceptions.GatingValidationError" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.exceptions.GatingValidationError"><literal>GatingValidationError</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.gating.services" internal="True" refuri="openedx.core.lib.gating#module-openedx.core.lib.gating.services">openedx.core.lib.gating.services module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.services.GatingService" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.services.GatingService"><literal>GatingService</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.services.GatingService.compute_is_prereq_met" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.services.GatingService.compute_is_prereq_met"><literal>GatingService.compute_is_prereq_met()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.services.GatingService.is_gate_fulfilled" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.services.GatingService.is_gate_fulfilled"><literal>GatingService.is_gate_fulfilled()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.gating.services.GatingService.required_prereq" internal="True" refuri="openedx.core.lib.gating#openedx.core.lib.gating.services.GatingService.required_prereq"><literal>GatingService.required_prereq()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.gating" internal="True" refuri="openedx.core.lib.gating#module-openedx.core.lib.gating">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.license">openedx.core.lib.license package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.license#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.license.mixin" internal="True" refuri="openedx.core.lib.license#module-openedx.core.lib.license.mixin">openedx.core.lib.license.mixin module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.license.mixin.LicenseMixin" internal="True" refuri="openedx.core.lib.license#openedx.core.lib.license.mixin.LicenseMixin"><literal>LicenseMixin</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.license.mixin.LicenseMixin.add_license_to_xml" internal="True" refuri="openedx.core.lib.license#openedx.core.lib.license.mixin.LicenseMixin.add_license_to_xml"><literal>LicenseMixin.add_license_to_xml()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.license.mixin.LicenseMixin.license" internal="True" refuri="openedx.core.lib.license#openedx.core.lib.license.mixin.LicenseMixin.license"><literal>LicenseMixin.license</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.license.mixin.LicenseMixin.parse_license_from_xml" internal="True" refuri="openedx.core.lib.license#openedx.core.lib.license.mixin.LicenseMixin.parse_license_from_xml"><literal>LicenseMixin.parse_license_from_xml()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.license.wrapper" internal="True" refuri="openedx.core.lib.license#module-openedx.core.lib.license.wrapper">openedx.core.lib.license.wrapper module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.license.wrapper.wrap_with_license" internal="True" refuri="openedx.core.lib.license#openedx.core.lib.license.wrapper.wrap_with_license"><literal>wrap_with_license()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.license" internal="True" refuri="openedx.core.lib.license#module-openedx.core.lib.license">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.safe_lxml">openedx.core.lib.safe_lxml package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.safe_lxml#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.safe_lxml.conftest" internal="True" refuri="openedx.core.lib.safe_lxml#module-openedx.core.lib.safe_lxml.conftest">openedx.core.lib.safe_lxml.conftest module</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.safe_lxml.etree" internal="True" refuri="openedx.core.lib.safe_lxml#module-openedx.core.lib.safe_lxml.etree">openedx.core.lib.safe_lxml.etree module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.etree.XMLParser" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.etree.XMLParser"><literal>XMLParser</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.safe_lxml.xmlparser" internal="True" refuri="openedx.core.lib.safe_lxml#module-openedx.core.lib.safe_lxml.xmlparser">openedx.core.lib.safe_lxml.xmlparser module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS"><literal>GlobalParserTLS</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.createDefaultParser" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.createDefaultParser"><literal>GlobalParserTLS.createDefaultParser()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.element_class" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.element_class"><literal>GlobalParserTLS.element_class</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.getDefaultParser" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.getDefaultParser"><literal>GlobalParserTLS.getDefaultParser()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.parser_config" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.parser_config"><literal>GlobalParserTLS.parser_config</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.setDefaultParser" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.GlobalParserTLS.setDefaultParser"><literal>GlobalParserTLS.setDefaultParser()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement"><literal>RestrictedElement</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.blacklist" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.blacklist"><literal>RestrictedElement.blacklist</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getchildren" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getchildren"><literal>RestrictedElement.getchildren()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getiterator" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.getiterator"><literal>RestrictedElement.getiterator()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iter" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iter"><literal>RestrictedElement.iter()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterchildren" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterchildren"><literal>RestrictedElement.iterchildren()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterdescendants" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.iterdescendants"><literal>RestrictedElement.iterdescendants()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.itersiblings" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.RestrictedElement.itersiblings"><literal>RestrictedElement.itersiblings()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.XML" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.XML"><literal>XML()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.check_docinfo" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.check_docinfo"><literal>check_docinfo()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.fromstring" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.fromstring"><literal>fromstring()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.getDefaultParser" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.getDefaultParser"><literal>getDefaultParser()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.iterparse" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.iterparse"><literal>iterparse()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.xmlparser.parse" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.xmlparser.parse"><literal>parse()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.safe_lxml" internal="True" refuri="openedx.core.lib.safe_lxml#module-openedx.core.lib.safe_lxml">Module contents</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.safe_lxml.defuse_xml_libs" internal="True" refuri="openedx.core.lib.safe_lxml#openedx.core.lib.safe_lxml.defuse_xml_libs"><literal>defuse_xml_libs()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.x_forwarded_for">openedx.core.lib.x_forwarded_for package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.x_forwarded_for#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.x_forwarded_for.middleware" internal="True" refuri="openedx.core.lib.x_forwarded_for#module-openedx.core.lib.x_forwarded_for.middleware">openedx.core.lib.x_forwarded_for.middleware module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.x_forwarded_for.middleware.XForwardedForMiddleware" internal="True" refuri="openedx.core.lib.x_forwarded_for#openedx.core.lib.x_forwarded_for.middleware.XForwardedForMiddleware"><literal>XForwardedForMiddleware</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.x_forwarded_for.middleware.XForwardedForMiddleware.process_request" internal="True" refuri="openedx.core.lib.x_forwarded_for#openedx.core.lib.x_forwarded_for.middleware.XForwardedForMiddleware.process_request"><literal>XForwardedForMiddleware.process_request()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.x_forwarded_for" internal="True" refuri="openedx.core.lib.x_forwarded_for#module-openedx.core.lib.x_forwarded_for">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.xblock_pipeline">openedx.core.lib.xblock_pipeline package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.xblock_pipeline#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_pipeline.finder" internal="True" refuri="openedx.core.lib.xblock_pipeline#module-openedx.core.lib.xblock_pipeline.finder">openedx.core.lib.xblock_pipeline.finder module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage"><literal>XBlockPackageStorage</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.RESOURCE_PREFIX" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.RESOURCE_PREFIX"><literal>XBlockPackageStorage.RESOURCE_PREFIX</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.delete" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.delete"><literal>XBlockPackageStorage.delete()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.exists" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.exists"><literal>XBlockPackageStorage.exists()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_accessed_time" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_accessed_time"><literal>XBlockPackageStorage.get_accessed_time()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_created_time" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_created_time"><literal>XBlockPackageStorage.get_created_time()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_modified_time" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.get_modified_time"><literal>XBlockPackageStorage.get_modified_time()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.listdir" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.listdir"><literal>XBlockPackageStorage.listdir()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.open" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.open"><literal>XBlockPackageStorage.open()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.path" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.path"><literal>XBlockPackageStorage.path()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.size" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.size"><literal>XBlockPackageStorage.size()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.url" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPackageStorage.url"><literal>XBlockPackageStorage.url()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder"><literal>XBlockPipelineFinder</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder.find" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder.find"><literal>XBlockPipelineFinder.find()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder.list" internal="True" refuri="openedx.core.lib.xblock_pipeline#openedx.core.lib.xblock_pipeline.finder.XBlockPipelineFinder.list"><literal>XBlockPipelineFinder.list()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_pipeline" internal="True" refuri="openedx.core.lib.xblock_pipeline#module-openedx.core.lib.xblock_pipeline">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.xblock_serializer">openedx.core.lib.xblock_serializer package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.xblock_serializer#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.api" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.api">openedx.core.lib.xblock_serializer.api module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.api.serialize_modulestore_block_for_learning_core" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.api.serialize_modulestore_block_for_learning_core"><literal>serialize_modulestore_block_for_learning_core()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.api.serialize_xblock_to_olx" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.api.serialize_xblock_to_olx"><literal>serialize_xblock_to_olx()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.block_serializer" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.block_serializer">openedx.core.lib.xblock_serializer.block_serializer module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer"><literal>XBlockSerializer</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer.static_files" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer.static_files"><literal>XBlockSerializer.static_files</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer.tags" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.block_serializer.XBlockSerializer.tags"><literal>XBlockSerializer.tags</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.data" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.data">openedx.core.lib.xblock_serializer.data module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.data.StaticFile" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.data.StaticFile"><literal>StaticFile</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.data.StaticFile.data" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.data.StaticFile.data"><literal>StaticFile.data</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.data.StaticFile.name" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.data.StaticFile.name"><literal>StaticFile.name</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.data.StaticFile.url" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.data.StaticFile.url"><literal>StaticFile.url</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.test_api" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.test_api">openedx.core.lib.xblock_serializer.test_api module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase"><literal>XBlockSerializationTestCase</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.assertXmlEqual" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.assertXmlEqual"><literal>XBlockSerializationTestCase.assertXmlEqual()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.setUpClass" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.setUpClass"><literal>XBlockSerializationTestCase.setUpClass()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_capa_python_lib" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_capa_python_lib"><literal>XBlockSerializationTestCase.test_capa_python_lib()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_export_sequential" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_export_sequential"><literal>XBlockSerializationTestCase.test_export_sequential()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_fields" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_fields"><literal>XBlockSerializationTestCase.test_html_with_fields()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_static_asset" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_static_asset"><literal>XBlockSerializationTestCase.test_html_with_static_asset()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_static_asset_learning_core" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_html_with_static_asset_learning_core"><literal>XBlockSerializationTestCase.test_html_with_static_asset_learning_core()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_jsinput_extra_files" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_jsinput_extra_files"><literal>XBlockSerializationTestCase.test_jsinput_extra_files()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_html_block" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_html_block"><literal>XBlockSerializationTestCase.test_tagged_html_block()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_library_content_blocks" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_library_content_blocks"><literal>XBlockSerializationTestCase.test_tagged_library_content_blocks()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_openassessment_block" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_openassessment_block"><literal>XBlockSerializationTestCase.test_tagged_openassessment_block()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_problem_blocks" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_problem_blocks"><literal>XBlockSerializationTestCase.test_tagged_problem_blocks()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_units" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_units"><literal>XBlockSerializationTestCase.test_tagged_units()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_video_block" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_api.XBlockSerializationTestCase.test_tagged_video_block"><literal>XBlockSerializationTestCase.test_tagged_video_block()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.test_utils" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.test_utils">openedx.core.lib.xblock_serializer.test_utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils"><literal>TestUtils</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_1____problem__jsinput_html_file___static_question_html_____problem______static_question_html__" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_1____problem__jsinput_html_file___static_question_html_____problem______static_question_html__"><literal>TestUtils.test_extract_local_html_path_1____problem__jsinput_html_file___static_question_html_____problem______static_question_html__()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_2____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_2____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__"><literal>TestUtils.test_extract_local_html_path_2____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_3____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_3____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__"><literal>TestUtils.test_extract_local_html_path_3____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_4____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_4____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__"><literal>TestUtils.test_extract_local_html_path_4____problem__jsinput_html_file___static_simple_question_html_____problem______static_simple_question_html__()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_5____problem__jsinput_html_file__example_com_static_simple_question_html_____problem____None_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_5____problem__jsinput_html_file__example_com_static_simple_question_html_____problem____None_"><literal>TestUtils.test_extract_local_html_path_5____problem__jsinput_html_file__example_com_static_simple_question_html_____problem____None_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_6____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_6____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_"><literal>TestUtils.test_extract_local_html_path_6____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_7____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_7____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_"><literal>TestUtils.test_extract_local_html_path_7____problem__jsinput_html_file__https___example_com_static_simple_question_html_____problem____None_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_8____problem__jsinput___some_url___static_simple_question_html__problem____None_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_local_html_path_8____problem__jsinput___some_url___static_simple_question_html__problem____None_"><literal>TestUtils.test_extract_local_html_path_8____problem__jsinput___some_url___static_simple_question_html__problem____None_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_static_assets" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_extract_static_assets"><literal>TestUtils.test_extract_static_assets()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_1____problem__n_script_ambiguous_script_n__script___problem____False_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_1____problem__n_script_ambiguous_script_n__script___problem____False_"><literal>TestUtils.test_has_python_script_1____problem__n_script_ambiguous_script_n__script___problem____False_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_2____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_2____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_"><literal>TestUtils.test_has_python_script_2____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_3____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_3____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_"><literal>TestUtils.test_has_python_script_3____problem__n_script_type__text_python___npython_nscript_n__script___problem____True_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_4____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_4____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_"><literal>TestUtils.test_has_python_script_4____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_5____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_has_python_script_5____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_"><literal>TestUtils.test_has_python_script_5____problem__n_script_type__loncapa_python___npython_nscript_n__script___problem____True_()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_rewrite_absolute_static_urls" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.test_utils.TestUtils.test_rewrite_absolute_static_urls"><literal>TestUtils.test_rewrite_absolute_static_urls()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer.utils" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer.utils">openedx.core.lib.xblock_serializer.utils module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.collect_assets_from_text" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.collect_assets_from_text"><literal>collect_assets_from_text()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.get_asset_content_from_path" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.get_asset_content_from_path"><literal>get_asset_content_from_path()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.get_js_input_files_if_using" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.get_js_input_files_if_using"><literal>get_js_input_files_if_using()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.get_python_lib_zip_if_using" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.get_python_lib_zip_if_using"><literal>get_python_lib_zip_if_using()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.learning_core_def_key_from_modulestore_usage_key" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.learning_core_def_key_from_modulestore_usage_key"><literal>learning_core_def_key_from_modulestore_usage_key()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.override_export_fs" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.override_export_fs"><literal>override_export_fs()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_serializer.utils.rewrite_absolute_static_urls" internal="True" refuri="openedx.core.lib.xblock_serializer#openedx.core.lib.xblock_serializer.utils.rewrite_absolute_static_urls"><literal>rewrite_absolute_static_urls()</literal></reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_serializer" internal="True" refuri="openedx.core.lib.xblock_serializer#module-openedx.core.lib.xblock_serializer">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.xblock_services">openedx.core.lib.xblock_services package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#submodules" internal="True" refuri="openedx.core.lib.xblock_services#submodules">Submodules</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_services.call_to_action" internal="True" refuri="openedx.core.lib.xblock_services#module-openedx.core.lib.xblock_services.call_to_action">openedx.core.lib.xblock_services.call_to_action module</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_services.call_to_action.CallToActionService" internal="True" refuri="openedx.core.lib.xblock_services#openedx.core.lib.xblock_services.call_to_action.CallToActionService"><literal>CallToActionService</literal></reference></compact_paragraph><bullet_list><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_services.call_to_action.CallToActionService.NAMESPACE" internal="True" refuri="openedx.core.lib.xblock_services#openedx.core.lib.xblock_services.call_to_action.CallToActionService.NAMESPACE"><literal>CallToActionService.NAMESPACE</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l4"><compact_paragraph classes="toctree-l4" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_services.call_to_action.CallToActionService.get_ctas" internal="True" refuri="openedx.core.lib.xblock_services#openedx.core.lib.xblock_services.call_to_action.CallToActionService.get_ctas"><literal>CallToActionService.get_ctas()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_services" internal="True" refuri="openedx.core.lib.xblock_services#module-openedx.core.lib.xblock_services">Module contents</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="openedx.core.lib.xblock_utils">openedx.core.lib.xblock_utils package</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#module-openedx.core.lib.xblock_utils" internal="True" refuri="openedx.core.lib.xblock_utils#module-openedx.core.lib.xblock_utils">Module contents</reference></compact_paragraph><bullet_list><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.add_staff_markup" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.add_staff_markup"><literal>add_staff_markup()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.get_aside_from_xblock" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.get_aside_from_xblock"><literal>get_aside_from_xblock()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.get_course_update_items" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.get_course_update_items"><literal>get_course_update_items()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.get_css_dependencies" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.get_css_dependencies"><literal>get_css_dependencies()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.get_icon" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.get_icon"><literal>get_icon()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.get_js_dependencies" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.get_js_dependencies"><literal>get_js_dependencies()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.grade_histogram" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.grade_histogram"><literal>grade_histogram()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.hash_resource" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.hash_resource"><literal>hash_resource()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.is_xblock_aside" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.is_xblock_aside"><literal>is_xblock_aside()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.request_token" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.request_token"><literal>request_token()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.sanitize_html_id" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.sanitize_html_id"><literal>sanitize_html_id()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.wrap_fragment" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.wrap_fragment"><literal>wrap_fragment()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.wrap_xblock" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.wrap_xblock"><literal>wrap_xblock()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.wrap_xblock_aside" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.wrap_xblock_aside"><literal>wrap_xblock_aside()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.xblock_local_resource_url" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.xblock_local_resource_url"><literal>xblock_local_resource_url()</literal></reference></compact_paragraph></list_item><list_item classes="toctree-l3"><compact_paragraph classes="toctree-l3" skip_section_number="True"><reference anchorname="#openedx.core.lib.xblock_utils.xblock_resource_pkg" internal="True" refuri="openedx.core.lib.xblock_utils#openedx.core.lib.xblock_utils.xblock_resource_pkg"><literal>xblock_resource_pkg()</literal></reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="submodules" names="submodules">
            <title>Submodules</title>
        </section>
        <section ids="module-openedx.core.lib.cache_utils openedx-core-lib-cache-utils-module" names="openedx.core.lib.cache_utils\ module">
            <title>openedx.core.lib.cache_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.cache_utils',\ 'module-openedx.core.lib.cache_utils',\ '',\ None]"></index>
            <paragraph>Utilities related to caching.</paragraph>
            <index entries="['single',\ 'CacheInvalidationManager\ (class\ in\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.CacheInvalidationManager',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CacheInvalidationManager" _toc_parts="openedx.core.lib.cache_utils CacheInvalidationManager" class="" classes="sig sig-object py" fullname="CacheInvalidationManager" ids="openedx.core.lib.cache_utils.CacheInvalidationManager" module="openedx.core.lib.cache_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CacheInvalidationManager</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">namespace</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cache_time</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">86400</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>This class provides a decorator for simple functions, which can handle invalidation.</paragraph>
                    <paragraph>To use, instantiate with a namespace or django model class:
                        <title_reference>manager = CacheInvalidationManager(model=User)</title_reference>
                        One of namespace or model should be specified, but not both.</paragraph>
                    <paragraph>Then use it as a decorator on functions with no arguments
                        <problematic ids="id2" refid="id1">`</problematic>@manager
                        def get_system_user():</paragraph>
                    <block_quote>
                        <paragraph>…</paragraph>
                    </block_quote>
                    <paragraph>`
                        When the User model is saved or deleted, all cache keys used by
                        the decorator will be cleared.</paragraph>
                    <index entries="['single',\ 'invalidate()\ (openedx.core.lib.cache_utils.CacheInvalidationManager\ method)',\ 'openedx.core.lib.cache_utils.CacheInvalidationManager.invalidate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CacheInvalidationManager.invalidate()" _toc_parts="openedx.core.lib.cache_utils CacheInvalidationManager invalidate" class="CacheInvalidationManager" classes="sig sig-object py" fullname="CacheInvalidationManager.invalidate" ids="openedx.core.lib.cache_utils.CacheInvalidationManager.invalidate" module="openedx.core.lib.cache_utils"><desc_name classes="sig-name descname" xml:space="preserve">invalidate</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Invalidate all keys tracked by the manager.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'CacheService\ (class\ in\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.CacheService',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CacheService" _toc_parts="openedx.core.lib.cache_utils CacheService" class="" classes="sig sig-object py" fullname="CacheService" ids="openedx.core.lib.cache_utils.CacheService" module="openedx.core.lib.cache_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CacheService</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cache</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>An XBlock service which provides a cache.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>cache</literal_strong> (<literal_emphasis>object</literal_emphasis>) – provides get/set functions for retrieving/storing key/value pairs.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <index entries="['single',\ 'get()\ (openedx.core.lib.cache_utils.CacheService\ method)',\ 'openedx.core.lib.cache_utils.CacheService.get',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CacheService.get()" _toc_parts="openedx.core.lib.cache_utils CacheService get" class="CacheService" classes="sig sig-object py" fullname="CacheService.get" ids="openedx.core.lib.cache_utils.CacheService.get" module="openedx.core.lib.cache_utils"><desc_name classes="sig-name descname" xml:space="preserve">get</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the value cached against the given key, or None.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'set()\ (openedx.core.lib.cache_utils.CacheService\ method)',\ 'openedx.core.lib.cache_utils.CacheService.set',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CacheService.set()" _toc_parts="openedx.core.lib.cache_utils CacheService set" class="CacheService" classes="sig sig-object py" fullname="CacheService.set" ids="openedx.core.lib.cache_utils.CacheService.set" module="openedx.core.lib.cache_utils"><desc_name classes="sig-name descname" xml:space="preserve">set</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">args</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Caches the value against the given key.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_cache()\ (in\ module\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.get_cache',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_cache()" _toc_parts="openedx.core.lib.cache_utils get_cache" class="" classes="sig sig-object py" fullname="get_cache" ids="openedx.core.lib.cache_utils.get_cache" module="openedx.core.lib.cache_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_cache</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the request cache named <literal>name</literal>.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The name of the request cache to load</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns: dict</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'process_cached\ (class\ in\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.process_cached',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="process_cached" _toc_parts="openedx.core.lib.cache_utils process_cached" class="" classes="sig sig-object py" fullname="process_cached" ids="openedx.core.lib.cache_utils.process_cached" module="openedx.core.lib.cache_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">process_cached</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">func</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Decorator to cache the result of a function for the life of a process.</paragraph>
                    <paragraph>If the return value of the function for the provided arguments has not
                        yet been cached, the function will be calculated and cached. If called
                        later with the same arguments, the cached value is returned
                        (not reevaluated).
                        <reference refuri="https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize">https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize</reference></paragraph>
                    <paragraph>WARNING: Only use this process_cached decorator for caching data that
                        is constant throughout the lifetime of a gunicorn worker process,
                        is costly to compute, and is required often.  Otherwise, it can lead to
                        unwanted memory leakage.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'request_cached()\ (in\ module\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.request_cached',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="request_cached()" _toc_parts="openedx.core.lib.cache_utils request_cached" class="" classes="sig sig-object py" fullname="request_cached" ids="openedx.core.lib.cache_utils.request_cached" module="openedx.core.lib.cache_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">request_cached</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">namespace</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">arg_map_function</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request_cache_getter</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>A function decorator that automatically handles caching its return value for
                        the duration of the request. It returns the cached value for subsequent
                        calls to the same function, with the same parameters, within a given request.</paragraph>
                    <rubric>Notes</rubric>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>We convert arguments and keyword arguments to their string form to build the cache key. So if you have
                                args/kwargs that can’t be converted to strings, you’re gonna have a bad time (don’t do it).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Cache key cardinality depends on the args/kwargs. So if you’re caching a function that takes five arguments,
                                you might have deceptively low cache efficiency.  Prefer functions with fewer arguments.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>WATCH OUT: Don’t use this decorator for instance methods that take in a “self” argument that changes each
                                time the method is called. This will result in constant cache misses and not provide the performance benefit
                                you are looking for. Rather, change your instance method to a class method.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Benchmark, benchmark, benchmark! If you never measure, how will you know you’ve improved? or regressed?</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>namespace</literal_strong> (<literal_emphasis>string</literal_emphasis>) – An optional namespace to use for the cache. By default, we use the default request cache,
                                            not a namespaced request cache. Since the code automatically creates a unique cache key with the module and
                                            function’s name, storing the cached value in the default cache, you won’t usually need to specify a
                                            namespace value.
                                            But you can specify a namespace value here if you need to use your own namespaced cache - for example,
                                            if you want to clear out your own cache by calling RequestCache(namespace=NAMESPACE).clear().
                                            NOTE: This argument is ignored if you supply a <literal>request_cache_getter</literal>.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>(</literal_strong><literal_strong>function</literal_strong> (<literal_emphasis>request_cache_getter</literal_emphasis>) – arg-&gt;string): Function to use for mapping the wrapped function’s arguments to
                                            strings to use in the cache key. If not provided, defaults to force_text, which converts the given
                                            argument to a string.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>(</literal_strong><literal_strong>function</literal_strong> – args, kwargs-&gt;RequestCache): Function that returns the RequestCache to use.
                                            If not provided, defaults to edx_django_utils.cache.RequestCache.  If <literal>request_cache_getter</literal> returns None,
                                            the function’s return values are not cached.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph><definition_list><definition_list_item><term>a wrapper function which will call the wrapped function, passing in the same args/kwargs,</term><definition><paragraph>cache the value it returns, and return that cached value for subsequent calls with the
                                                    same args/kwargs within a single request.</paragraph></definition></definition_list_item></definition_list></paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>func</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'zpickle()\ (in\ module\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.zpickle',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="zpickle()" _toc_parts="openedx.core.lib.cache_utils zpickle" class="" classes="sig sig-object py" fullname="zpickle" ids="openedx.core.lib.cache_utils.zpickle" module="openedx.core.lib.cache_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">zpickle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given any data structure, returns a zlib compressed pickled serialization.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'zunpickle()\ (in\ module\ openedx.core.lib.cache_utils)',\ 'openedx.core.lib.cache_utils.zunpickle',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="zunpickle()" _toc_parts="openedx.core.lib.cache_utils zunpickle" class="" classes="sig sig-object py" fullname="zunpickle" ids="openedx.core.lib.cache_utils.zunpickle" module="openedx.core.lib.cache_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.cache_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">zunpickle</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">zdata</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a zlib compressed pickled serialization, returns the deserialized data.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.command_utils openedx-core-lib-command-utils-module" names="openedx.core.lib.command_utils\ module">
            <title>openedx.core.lib.command_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.command_utils',\ 'module-openedx.core.lib.command_utils',\ '',\ None]"></index>
            <paragraph>Useful utilities for management commands.</paragraph>
            <index entries="['single',\ 'get_mutually_exclusive_required_option()\ (in\ module\ openedx.core.lib.command_utils)',\ 'openedx.core.lib.command_utils.get_mutually_exclusive_required_option',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_mutually_exclusive_required_option()" _toc_parts="openedx.core.lib.command_utils get_mutually_exclusive_required_option" class="" classes="sig sig-object py" fullname="get_mutually_exclusive_required_option" ids="openedx.core.lib.command_utils.get_mutually_exclusive_required_option" module="openedx.core.lib.command_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.command_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_mutually_exclusive_required_option</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">options</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">*</desc_sig_operator><desc_sig_name classes="n">selections</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Validates that exactly one of the 2 given options is specified.
                        Returns the name of the found option.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'parse_course_keys()\ (in\ module\ openedx.core.lib.command_utils)',\ 'openedx.core.lib.command_utils.parse_course_keys',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="parse_course_keys()" _toc_parts="openedx.core.lib.command_utils parse_course_keys" class="" classes="sig sig-object py" fullname="parse_course_keys" ids="openedx.core.lib.command_utils.parse_course_keys" module="openedx.core.lib.command_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.command_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">parse_course_keys</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key_strings</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Parses and returns a list of CourseKey objects from the given
                        list of course key strings.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'validate_dependent_option()\ (in\ module\ openedx.core.lib.command_utils)',\ 'openedx.core.lib.command_utils.validate_dependent_option',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="validate_dependent_option()" _toc_parts="openedx.core.lib.command_utils validate_dependent_option" class="" classes="sig sig-object py" fullname="validate_dependent_option" ids="openedx.core.lib.command_utils.validate_dependent_option" module="openedx.core.lib.command_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.command_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">validate_dependent_option</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">options</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dependent_option</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">depending_on_option</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Validates that option_1 is specified if dependent_option is specified.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'validate_mutually_exclusive_option()\ (in\ module\ openedx.core.lib.command_utils)',\ 'openedx.core.lib.command_utils.validate_mutually_exclusive_option',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="validate_mutually_exclusive_option()" _toc_parts="openedx.core.lib.command_utils validate_mutually_exclusive_option" class="" classes="sig sig-object py" fullname="validate_mutually_exclusive_option" ids="openedx.core.lib.command_utils.validate_mutually_exclusive_option" module="openedx.core.lib.command_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.command_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">validate_mutually_exclusive_option</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">options</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">option_1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">option_2</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Validates that both of the 2 given options are not specified.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.course_tabs openedx-core-lib-course-tabs-module" names="openedx.core.lib.course_tabs\ module">
            <title>openedx.core.lib.course_tabs module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.course_tabs',\ 'module-openedx.core.lib.course_tabs',\ '',\ None]"></index>
            <paragraph>Tabs for courseware.</paragraph>
            <index entries="['single',\ 'CourseTabPluginManager\ (class\ in\ openedx.core.lib.course_tabs)',\ 'openedx.core.lib.course_tabs.CourseTabPluginManager',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CourseTabPluginManager" _toc_parts="openedx.core.lib.course_tabs CourseTabPluginManager" class="" classes="sig sig-object py" fullname="CourseTabPluginManager" ids="openedx.core.lib.course_tabs.CourseTabPluginManager" module="openedx.core.lib.course_tabs"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.course_tabs.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseTabPluginManager</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">PluginManager</literal></paragraph>
                    <paragraph>Manager for all of the course tabs that have been made available.</paragraph>
                    <paragraph>All course tabs should implement <title_reference>CourseTab</title_reference>.</paragraph>
                    <index entries="['single',\ 'NAMESPACE\ (openedx.core.lib.course_tabs.CourseTabPluginManager\ attribute)',\ 'openedx.core.lib.course_tabs.CourseTabPluginManager.NAMESPACE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CourseTabPluginManager.NAMESPACE" _toc_parts="openedx.core.lib.course_tabs CourseTabPluginManager NAMESPACE" class="CourseTabPluginManager" classes="sig sig-object py" fullname="CourseTabPluginManager.NAMESPACE" ids="openedx.core.lib.course_tabs.CourseTabPluginManager.NAMESPACE" module="openedx.core.lib.course_tabs"><desc_name classes="sig-name descname" xml:space="preserve">NAMESPACE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.course_tab'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'get_tab_types()\ (openedx.core.lib.course_tabs.CourseTabPluginManager\ class\ method)',\ 'openedx.core.lib.course_tabs.CourseTabPluginManager.get_tab_types',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CourseTabPluginManager.get_tab_types()" _toc_parts="openedx.core.lib.course_tabs CourseTabPluginManager get_tab_types" class="CourseTabPluginManager" classes="sig sig-object py" fullname="CourseTabPluginManager.get_tab_types" ids="openedx.core.lib.course_tabs.CourseTabPluginManager.get_tab_types" module="openedx.core.lib.course_tabs"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_tab_types</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Returns the list of available course tabs in their canonical order.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.courses openedx-core-lib-courses-module" names="openedx.core.lib.courses\ module">
            <title>openedx.core.lib.courses module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.courses',\ 'module-openedx.core.lib.courses',\ '',\ None]"></index>
            <paragraph>Common utility functions related to courses.</paragraph>
            <index entries="['single',\ 'clean_course_id()\ (in\ module\ openedx.core.lib.courses)',\ 'openedx.core.lib.courses.clean_course_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clean_course_id()" _toc_parts="openedx.core.lib.courses clean_course_id" class="" classes="sig sig-object py" fullname="clean_course_id" ids="openedx.core.lib.courses.clean_course_id" module="openedx.core.lib.courses"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.courses.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clean_course_id</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model_form</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">is_required</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Cleans and validates a course_id for use with a Django ModelForm.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>model_form</literal_strong> (<literal_emphasis>form.ModelForm</literal_emphasis>) – The form that has a course_id.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>is_required</literal_strong> (<literal_emphasis>Boolean</literal_emphasis>) – Default True. When True, validates that the
                                            course_id is not empty.  In all cases, when course_id is supplied,
                                            validates that it is a valid course.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>(CourseKey) The cleaned and validated course_id as a CourseKey.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>NOTE: Use this method in model forms instead of a custom “clean_course_id” method!</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_image_url()\ (in\ module\ openedx.core.lib.courses)',\ 'openedx.core.lib.courses.course_image_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_image_url()" _toc_parts="openedx.core.lib.courses course_image_url" class="" classes="sig sig-object py" fullname="course_image_url" ids="openedx.core.lib.courses.course_image_url" module="openedx.core.lib.courses"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.courses.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_image_url</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">image_key</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'course_image'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Try to look up the image url for the course.  If it’s not found,
                        log an error and return the dead link.
                        image_key can be one of the three: ‘course_image’, ‘hero_image’, ‘thumbnail_image’</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_course_image_thumbnail()\ (in\ module\ openedx.core.lib.courses)',\ 'openedx.core.lib.courses.create_course_image_thumbnail',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_course_image_thumbnail()" _toc_parts="openedx.core.lib.courses create_course_image_thumbnail" class="" classes="sig sig-object py" fullname="create_course_image_thumbnail" ids="openedx.core.lib.courses.create_course_image_thumbnail" module="openedx.core.lib.courses"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.courses.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_course_image_thumbnail</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dimensions</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create a course image thumbnail and return the URL.</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>dimensions is a tuple of (width, height)</paragraph>
                        </list_item>
                    </bullet_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_course_by_id()\ (in\ module\ openedx.core.lib.courses)',\ 'openedx.core.lib.courses.get_course_by_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_course_by_id()" _toc_parts="openedx.core.lib.courses get_course_by_id" class="" classes="sig sig-object py" fullname="get_course_by_id" ids="openedx.core.lib.courses.get_course_by_id" module="openedx.core.lib.courses"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.courses.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_course_by_id</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_key</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">depth</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Given a course id, return the corresponding course block.</paragraph>
                    <paragraph>If such a course does not exist, raises a 404.</paragraph>
                    <paragraph>depth: The number of levels of children for the modulestore to cache. None means infinite depth</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.derived openedx-core-lib-derived-module" names="openedx.core.lib.derived\ module">
            <title>openedx.core.lib.derived module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.derived',\ 'module-openedx.core.lib.derived',\ '',\ None]"></index>
            <paragraph>Allows the registration of Django/Python settings that are derived from other settings
                via callable methods/lambdas. The derivation time can be controlled to happen after all
                other settings have been set. The derived setting can also be overridden by setting the
                derived setting to an actual value.</paragraph>
            <index entries="['single',\ 'Derived\ (class\ in\ openedx.core.lib.derived)',\ 'openedx.core.lib.derived.Derived',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="Derived" _toc_parts="openedx.core.lib.derived Derived" class="" classes="sig sig-object py" fullname="Derived" ids="openedx.core.lib.derived.Derived" module="openedx.core.lib.derived"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.derived.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">Derived</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">calculate_value</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Callable<desc_sig_punctuation classes="p">[</desc_sig_punctuation><desc_sig_punctuation classes="p">[</desc_sig_punctuation>ModuleType<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>T<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Generic</literal>[<literal classes="xref py py-obj">T</literal>]</paragraph>
                    <paragraph>A temporary Django setting value, defined with a function which generates the setting’s eventual value.</paragraph>
                    <paragraph>Said function (<title_reference>calculate_value</title_reference>) should accept a Django settings module, and return a calculated value.</paragraph>
                    <paragraph>To ensure that application code does not encounter an instance of this class in your settings, be sure to call
                        <title_reference>derive_settings</title_reference> somewhere in your terminal settings file.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'derive_settings()\ (in\ module\ openedx.core.lib.derived)',\ 'openedx.core.lib.derived.derive_settings',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="derive_settings()" _toc_parts="openedx.core.lib.derived derive_settings" class="" classes="sig sig-object py" fullname="derive_settings" ids="openedx.core.lib.derived.derive_settings" module="openedx.core.lib.derived"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.derived.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">derive_settings</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">module_name</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">None</desc_returns></desc_signature>
                <desc_content>
                    <paragraph>In the Django settings module at <title_reference>module_name</title_reference>, replace <title_reference>Derived</title_reference> values with their cacluated values.</paragraph>
                    <paragraph>The replacement happens recursively for any values or containers defined by a Django setting name (which is: an
                        uppercase top-level variable name which is not prefixed by an underscore). Within containers,</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.django_courseware_routers openedx-core-lib-django-courseware-routers-module" names="openedx.core.lib.django_courseware_routers\ module">
            <title>openedx.core.lib.django_courseware_routers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.django_courseware_routers',\ 'module-openedx.core.lib.django_courseware_routers',\ '',\ None]"></index>
            <paragraph>Database Routers for use with the coursewarehistoryextended django app.</paragraph>
            <index entries="['single',\ 'StudentModuleHistoryExtendedRouter\ (class\ in\ openedx.core.lib.django_courseware_routers)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="StudentModuleHistoryExtendedRouter" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter" class="" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter" module="openedx.core.lib.django_courseware_routers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.django_courseware_routers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">StudentModuleHistoryExtendedRouter</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>A Database Router that separates StudentModuleHistoryExtended into its own database.</paragraph>
                    <index entries="['single',\ 'DATABASE_NAME\ (openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\ attribute)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.DATABASE_NAME',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="StudentModuleHistoryExtendedRouter.DATABASE_NAME" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter DATABASE_NAME" class="StudentModuleHistoryExtendedRouter" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter.DATABASE_NAME" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.DATABASE_NAME" module="openedx.core.lib.django_courseware_routers"><desc_name classes="sig-name descname" xml:space="preserve">DATABASE_NAME</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'student_module_history'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'allow_migrate()\ (openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\ method)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.allow_migrate',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StudentModuleHistoryExtendedRouter.allow_migrate()" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter allow_migrate" class="StudentModuleHistoryExtendedRouter" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter.allow_migrate" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.allow_migrate" module="openedx.core.lib.django_courseware_routers"><desc_name classes="sig-name descname" xml:space="preserve">allow_migrate</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">db</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">app_label</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model_name</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">hints</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Only sync StudentModuleHistoryExtended to StudentModuleHistoryExtendedRouter.DATABASE_Name</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'allow_relation()\ (openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\ method)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.allow_relation',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StudentModuleHistoryExtendedRouter.allow_relation()" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter allow_relation" class="StudentModuleHistoryExtendedRouter" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter.allow_relation" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.allow_relation" module="openedx.core.lib.django_courseware_routers"><desc_name classes="sig-name descname" xml:space="preserve">allow_relation</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj2</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">hints</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Manage relations if the model is StudentModuleHistoryExtended.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'db_for_read()\ (openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\ method)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.db_for_read',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StudentModuleHistoryExtendedRouter.db_for_read()" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter db_for_read" class="StudentModuleHistoryExtendedRouter" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter.db_for_read" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.db_for_read" module="openedx.core.lib.django_courseware_routers"><desc_name classes="sig-name descname" xml:space="preserve">db_for_read</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">hints</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Use the StudentModuleHistoryExtendedRouter.DATABASE_NAME if the model is StudentModuleHistoryExtended.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'db_for_write()\ (openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\ method)',\ 'openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.db_for_write',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="StudentModuleHistoryExtendedRouter.db_for_write()" _toc_parts="openedx.core.lib.django_courseware_routers StudentModuleHistoryExtendedRouter db_for_write" class="StudentModuleHistoryExtendedRouter" classes="sig sig-object py" fullname="StudentModuleHistoryExtendedRouter.db_for_write" ids="openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter.db_for_write" module="openedx.core.lib.django_courseware_routers"><desc_name classes="sig-name descname" xml:space="preserve">db_for_write</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">model</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">hints</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Use the StudentModuleHistoryExtendedRouter.DATABASE_NAME if the model is StudentModuleHistoryExtended.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.django_test_client_utils openedx-core-lib-django-test-client-utils-module" names="openedx.core.lib.django_test_client_utils\ module">
            <title>openedx.core.lib.django_test_client_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.django_test_client_utils',\ 'module-openedx.core.lib.django_test_client_utils',\ '',\ None]"></index>
            <paragraph>This file includes util methods.</paragraph>
            <index entries="['single',\ 'get_absolute_url()\ (in\ module\ openedx.core.lib.django_test_client_utils)',\ 'openedx.core.lib.django_test_client_utils.get_absolute_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_absolute_url()" _toc_parts="openedx.core.lib.django_test_client_utils get_absolute_url" class="" classes="sig sig-object py" fullname="get_absolute_url" ids="openedx.core.lib.django_test_client_utils.get_absolute_url" module="openedx.core.lib.django_test_client_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.django_test_client_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_absolute_url</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate an absolute URL for a resource on the test server.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.dynamic_partitions_generators openedx-core-lib-dynamic-partitions-generators-module" names="openedx.core.lib.dynamic_partitions_generators\ module">
            <title>openedx.core.lib.dynamic_partitions_generators module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.dynamic_partitions_generators',\ 'module-openedx.core.lib.dynamic_partitions_generators',\ '',\ None]"></index>
            <paragraph>A plugin manager to retrieve the dynamic course partitions generators.</paragraph>
            <index entries="['single',\ 'DynamicPartitionGeneratorsPluginManager\ (class\ in\ openedx.core.lib.dynamic_partitions_generators)',\ 'openedx.core.lib.dynamic_partitions_generators.DynamicPartitionGeneratorsPluginManager',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="DynamicPartitionGeneratorsPluginManager" _toc_parts="openedx.core.lib.dynamic_partitions_generators DynamicPartitionGeneratorsPluginManager" class="" classes="sig sig-object py" fullname="DynamicPartitionGeneratorsPluginManager" ids="openedx.core.lib.dynamic_partitions_generators.DynamicPartitionGeneratorsPluginManager" module="openedx.core.lib.dynamic_partitions_generators"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.dynamic_partitions_generators.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DynamicPartitionGeneratorsPluginManager</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">PluginManager</literal></paragraph>
                    <index entries="['single',\ 'NAMESPACE\ (openedx.core.lib.dynamic_partitions_generators.DynamicPartitionGeneratorsPluginManager\ attribute)',\ 'openedx.core.lib.dynamic_partitions_generators.DynamicPartitionGeneratorsPluginManager.NAMESPACE',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="DynamicPartitionGeneratorsPluginManager.NAMESPACE" _toc_parts="openedx.core.lib.dynamic_partitions_generators DynamicPartitionGeneratorsPluginManager NAMESPACE" class="DynamicPartitionGeneratorsPluginManager" classes="sig sig-object py" fullname="DynamicPartitionGeneratorsPluginManager.NAMESPACE" ids="openedx.core.lib.dynamic_partitions_generators.DynamicPartitionGeneratorsPluginManager.NAMESPACE" module="openedx.core.lib.dynamic_partitions_generators"><desc_name classes="sig-name descname" xml:space="preserve">NAMESPACE</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'openedx.dynamic_partition_generator'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.edx_api_utils openedx-core-lib-edx-api-utils-module" names="openedx.core.lib.edx_api_utils\ module">
            <title>openedx.core.lib.edx_api_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.edx_api_utils',\ 'module-openedx.core.lib.edx_api_utils',\ '',\ None]"></index>
            <paragraph>Helper functions to get data from APIs</paragraph>
            <index entries="['single',\ 'get_api_data()\ (in\ module\ openedx.core.lib.edx_api_utils)',\ 'openedx.core.lib.edx_api_utils.get_api_data',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_api_data()" _toc_parts="openedx.core.lib.edx_api_utils get_api_data" class="" classes="sig sig-object py" fullname="get_api_data" ids="openedx.core.lib.edx_api_utils.get_api_data" module="openedx.core.lib.edx_api_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.edx_api_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_api_data</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">api_config</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Any</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">resource</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">api_client</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">session</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">base_api_url</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">resource_id</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">int<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">querystring</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Any<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Any<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">cache_key</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str<desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">many</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">bool</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">traverse_pagination</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">bool</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Any<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>None</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">long_term_cache</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">bool</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">raise_on_error</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">bool</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">List<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Any<desc_sig_punctuation classes="p">]</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">|</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Dict<desc_sig_punctuation classes="p">[</desc_sig_punctuation>Any<desc_sig_punctuation classes="p">,</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>Any<desc_sig_punctuation classes="p">]</desc_sig_punctuation></desc_returns></desc_signature>
                <desc_content>
                    <paragraph>GET data from an edX REST API endpoint using the API client.</paragraph>
                    <paragraph>DRY utility for handling caching and pagination.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>api_config</literal_strong> (<literal_emphasis>ConfigurationModel</literal_emphasis>) – The configuration model governing interaction with the API.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>resource</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Name of the API resource being requested.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>api_client</literal_strong> (<literal_emphasis>requests.Session</literal_emphasis>) – API client (either raw requests.Session or OAuthAPIClient) to use for
                                            requesting data.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>base_api_url</literal_strong> (<literal_emphasis>str</literal_emphasis>) – base API url, used to construct the full API URL across with resource and
                                            resource_id (if any).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>resource_id</literal_strong> (<literal_emphasis>int</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>str</literal_emphasis>) – Identifies a specific resource to be retrieved.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>querystring</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – Optional query string parameters.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>cache_key</literal_strong> (<literal_emphasis>str</literal_emphasis>) – Where to cache retrieved data. The cache will be ignored if this is omitted
                                            (neither inspected nor updated).</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>many</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether the resource requested is a collection of objects, or a single object.
                                            If false, an empty dict will be returned in cases of failure rather than the default empty list.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>traverse_pagination</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether to traverse pagination or return paginated response..</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>fields</literal_strong> (<literal_emphasis>list</literal_emphasis>) – Return only specific fields from the response</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>long_term_cache</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether to use the long term cache ttl or the standard cache ttl</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>raise_on_error</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Reraise errors back to the caller, instead if returning empty results.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Data returned by the API. When hitting a list endpoint, extracts “results” (list of dict)
                                    returned by DRF-powered APIs. By default, returns an empty result if the called API
                                    returns an error.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_fields()\ (in\ module\ openedx.core.lib.edx_api_utils)',\ 'openedx.core.lib.edx_api_utils.get_fields',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_fields()" _toc_parts="openedx.core.lib.edx_api_utils get_fields" class="" classes="sig sig-object py" fullname="get_fields" ids="openedx.core.lib.edx_api_utils.get_fields" module="openedx.core.lib.edx_api_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.edx_api_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_fields</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">fields</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Extracts desired fields from the API response</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.exceptions openedx-core-lib-exceptions-module" names="openedx.core.lib.exceptions\ module">
            <title>openedx.core.lib.exceptions module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.exceptions',\ 'module-openedx.core.lib.exceptions',\ '',\ None]"></index>
            <paragraph>Common Purpose Errors</paragraph>
            <index entries="['single',\ 'CourseNotFoundError',\ 'openedx.core.lib.exceptions.CourseNotFoundError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="CourseNotFoundError" _toc_parts="openedx.core.lib.exceptions CourseNotFoundError" class="" classes="sig sig-object py" fullname="CourseNotFoundError" ids="openedx.core.lib.exceptions.CourseNotFoundError" module="openedx.core.lib.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">CourseNotFoundError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                    <paragraph>Course was not found.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'DiscussionNotFoundError',\ 'openedx.core.lib.exceptions.DiscussionNotFoundError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="DiscussionNotFoundError" _toc_parts="openedx.core.lib.exceptions DiscussionNotFoundError" class="" classes="sig sig-object py" fullname="DiscussionNotFoundError" ids="openedx.core.lib.exceptions.DiscussionNotFoundError" module="openedx.core.lib.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">DiscussionNotFoundError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                    <paragraph>Discussion Block was not found.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'PageNotFoundError',\ 'openedx.core.lib.exceptions.PageNotFoundError',\ '',\ None]"></index>
            <desc classes="py exception" desctype="exception" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="exception">
                <desc_signature _toc_name="PageNotFoundError" _toc_parts="openedx.core.lib.exceptions PageNotFoundError" class="" classes="sig sig-object py" fullname="PageNotFoundError" ids="openedx.core.lib.exceptions.PageNotFoundError" module="openedx.core.lib.exceptions"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">exception</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.exceptions.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PageNotFoundError</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/ref/exceptions/#django.core.exceptions.ObjectDoesNotExist"><literal classes="xref py py-class">ObjectDoesNotExist</literal></reference></paragraph>
                    <paragraph>Page was not found. Used for paginated endpoint.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.extract_archive openedx-core-lib-extract-archive-module" names="openedx.core.lib.extract_archive\ module">
            <title>openedx.core.lib.extract_archive module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.extract_archive',\ 'module-openedx.core.lib.extract_archive',\ '',\ None]"></index>
            <paragraph>Safe version of extractall which does not extract any files that would
                be, or symlink to a file that is, outside of the directory extracted in.</paragraph>
            <paragraph>Adapted from:
                <reference refuri="http://stackoverflow.com/questions/10060069/safely-extract-zip-or-tar-using-python">http://stackoverflow.com/questions/10060069/safely-extract-zip-or-tar-using-python</reference></paragraph>
            <index entries="['single',\ 'resolved()\ (in\ module\ openedx.core.lib.extract_archive)',\ 'openedx.core.lib.extract_archive.resolved',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="resolved()" _toc_parts="openedx.core.lib.extract_archive resolved" class="" classes="sig sig-object py" fullname="resolved" ids="openedx.core.lib.extract_archive.resolved" module="openedx.core.lib.extract_archive"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.extract_archive.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">resolved</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">rpath</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the canonical absolute path of <title_reference>rpath</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'safe_extractall()\ (in\ module\ openedx.core.lib.extract_archive)',\ 'openedx.core.lib.extract_archive.safe_extractall',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="safe_extractall()" _toc_parts="openedx.core.lib.extract_archive safe_extractall" class="" classes="sig sig-object py" fullname="safe_extractall" ids="openedx.core.lib.extract_archive.safe_extractall" module="openedx.core.lib.extract_archive"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.extract_archive.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">safe_extractall</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">file_name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">output_path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Extract Zip or Tar files</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.grade_utils openedx-core-lib-grade-utils-module" names="openedx.core.lib.grade_utils\ module">
            <title>openedx.core.lib.grade_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.grade_utils',\ 'module-openedx.core.lib.grade_utils',\ '',\ None]"></index>
            <paragraph>Helpers functions for grades and scores.</paragraph>
            <index entries="['single',\ 'compare_scores()\ (in\ module\ openedx.core.lib.grade_utils)',\ 'openedx.core.lib.grade_utils.compare_scores',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="compare_scores()" _toc_parts="openedx.core.lib.grade_utils compare_scores" class="" classes="sig sig-object py" fullname="compare_scores" ids="openedx.core.lib.grade_utils.compare_scores" module="openedx.core.lib.grade_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.grade_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">compare_scores</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">earned1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">possible1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">earned2</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">possible2</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">treat_undefined_as_zero</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <definition_list>
                        <definition_list_item>
                            <term>Returns a tuple of:</term>
                            <definition>
                                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                                    <list_item>
                                        <paragraph>Whether the 2nd set of scores is higher than the first.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Grade percentage of 1st set of scores.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Grade percentage of 2nd set of scores.</paragraph>
                                    </list_item>
                                </enumerated_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <paragraph>If <literal>treat_undefined_as_zero</literal> is True, this function will treat
                        cases where <literal>possible1</literal> or <literal>possible2</literal> is 0 as if
                        the (earned / possible) score is 0.  If this flag is false,
                        a ZeroDivisionError is raised.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'is_score_higher_or_equal()\ (in\ module\ openedx.core.lib.grade_utils)',\ 'openedx.core.lib.grade_utils.is_score_higher_or_equal',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_score_higher_or_equal()" _toc_parts="openedx.core.lib.grade_utils is_score_higher_or_equal" class="" classes="sig sig-object py" fullname="is_score_higher_or_equal" ids="openedx.core.lib.grade_utils.is_score_higher_or_equal" module="openedx.core.lib.grade_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.grade_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_score_higher_or_equal</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">earned1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">possible1</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">earned2</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">possible2</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">treat_undefined_as_zero</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns whether the 2nd set of scores is higher than the first.
                        If <literal>treat_undefined_as_zero</literal> is True, this function will treat
                        cases where <literal>possible1</literal> or <literal>possible2</literal> is 0 as if
                        the (earned / possible) score is 0.  If this flag is false,
                        a ZeroDivisionError is raised.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'round_away_from_zero()\ (in\ module\ openedx.core.lib.grade_utils)',\ 'openedx.core.lib.grade_utils.round_away_from_zero',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="round_away_from_zero()" _toc_parts="openedx.core.lib.grade_utils round_away_from_zero" class="" classes="sig sig-object py" fullname="round_away_from_zero" ids="openedx.core.lib.grade_utils.round_away_from_zero" module="openedx.core.lib.grade_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.grade_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">round_away_from_zero</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">number</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">digits</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">0</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Round numbers using the ‘away from zero’ strategy as opposed to the
                        ‘Banker’s rounding strategy.’ The strategy refers to how we round when
                        a number is half way between two numbers.  eg. 0.5, 1.5, etc. In python 3
                        numbers round towards even. So 0.5 would round to 0 but 1.5 would round to 2.</paragraph>
                    <paragraph>See here for more on floating point rounding strategies:
                        <reference refuri="https://en.wikipedia.org/wiki/IEEE_754#Rounding_rules">https://en.wikipedia.org/wiki/IEEE_754#Rounding_rules</reference></paragraph>
                    <paragraph>We want to continue to round away from zero so that student grades remain
                        consistent and don’t suddenly change.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.graph_traversals openedx-core-lib-graph-traversals-module" names="openedx.core.lib.graph_traversals\ module">
            <title>openedx.core.lib.graph_traversals module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.graph_traversals',\ 'module-openedx.core.lib.graph_traversals',\ '',\ None]"></index>
            <paragraph>This module contains generic generator functions for traversing tree
                (and DAG) structures.  It is agnostic to the underlying data structure
                and implementation of the tree object.  It does this through dependency
                injection of the tree’s accessor functions: get_parents and
                get_children.</paragraph>
            <paragraph>The following depth-first traversal methods are implemented:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Pre-order: Parent yielded before children; child with multiple</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>parents is yielded when first encountered.</paragraph>
            <block_quote>
                <paragraph>Example use cases (when DAGs are <emphasis>not</emphasis> supported):</paragraph>
                <block_quote>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>User access. If computing a user’s access to a node relies</term>
                                    <definition>
                                        <paragraph>on the user’s access to the node’s parents, access to the
                                            parent has to be computed before access to the child can
                                            be determined. To support access chains, a user’s access on
                                            a node is actually an accumulation of accesses down from the
                                            root node through the ancestor chain to the actual node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Field value percolated down. If a value for a field is</term>
                                    <definition>
                                        <paragraph>dependent on a combination of the child’s and the parent’s
                                            value, the parent’s value should be computed before that of
                                            the child’s. Similar to “User access”, the value would be
                                            percolated down through the entire ancestor chain.</paragraph>
                                        <definition_list>
                                            <definition_list_item>
                                                <term>Example: Start Date is</term>
                                                <definition>
                                                    <paragraph>max(node’s start date, start date of each ancestor)</paragraph>
                                                </definition>
                                            </definition_list_item>
                                        </definition_list>
                                        <paragraph>This takes the most restrictive value.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Depth. When computing the depth of a tree, since a child’s</term>
                                    <definition>
                                        <paragraph>depth value is 1 + the parent’s depth value, the parent’s
                                            value should be computed before the child’s.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Fast Subtree Deletion. If the tree is to be pruned during</term>
                                    <definition>
                                        <paragraph>traversal, an entire subtree can be deleted, without
                                            traversing the children, as soon as the parent is determined
                                            to be deleted.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </enumerated_list>
                </block_quote>
            </block_quote>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Topological: Parent yielded before children; child with multiple</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>parents yielded only after all its parents are visited.</paragraph>
            <block_quote>
                <paragraph>Example use cases (when DAGs <emphasis>are</emphasis> supported):</paragraph>
                <block_quote>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>User access. Similar to pre-order, except a user’s access</term>
                                    <definition>
                                        <paragraph>is now determined by taking a <emphasis>union</emphasis> of the percolated
                                            access value from each of the node’s parents combined with
                                            its own access.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Field value percolated down. Similar to pre-order, except the</term>
                                    <definition>
                                        <paragraph>value for a node is calculated from the array of
                                            percolated values from each of its parents combined
                                            with its own.</paragraph>
                                        <definition_list>
                                            <definition_list_item>
                                                <term>Example: Start Date is</term>
                                                <definition>
                                                    <paragraph>max(node’s start date, min(max(ancestry of each parent))</paragraph>
                                                </definition>
                                            </definition_list_item>
                                        </definition_list>
                                        <paragraph>This takes the most permissive from all ancestry chains.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Depth. Similar to pre-order, except the depth of a node will</term>
                                    <definition>
                                        <paragraph>be 1 + the minimum (or the maximum depending on semantics)
                                            of the depth of all its parents.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term>Deletion. Deletion of subtrees are not as fast as they are</term>
                                    <definition>
                                        <paragraph>for pre-order since a node can be accessed through multiple
                                            parents.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </enumerated_list>
                </block_quote>
            </block_quote>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Post-order: Children yielded before its parents.</paragraph>
                    <block_quote>
                        <paragraph>Example use cases:</paragraph>
                        <block_quote>
                            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>Counting. When each node wants to count the number of nodes</term>
                                            <definition>
                                                <paragraph>within its sub-structure, the count for each child has to be
                                                    calculated before its parents, since a parent’s value
                                                    depends on its children.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>Map function (when order doesn’t matter). If a function</term>
                                            <definition>
                                                <paragraph>needs to be evaluated for each node in a DAG and the order
                                                    that the nodes are iterated doesn’t matter, then use
                                                    post-order since it is faster than topological for DAGs.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>Field value percolated up. If a value for a field is based</term>
                                            <definition>
                                                <paragraph>on the value from it’s children, the children’s values need
                                                    to be computed before their parents.</paragraph>
                                                <paragraph>Example: Minimum Due Date of all nodes within the
                                                    sub-structure.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </enumerated_list>
                        </block_quote>
                    </block_quote>
                </list_item>
            </bullet_list>
            <paragraph>Note: In-order traversal is not implemented as of yet.  We can do so
                if/when needed.</paragraph>
            <paragraph>Optimization once DAGs are not supported:
                Supporting Directed Acyclic Graphs (DAGs) requires us to use
                topological sort, which has the following negative performance
                implications:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>For a simple tree, we can immediately skip over traversing</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>descendants, once it is determined that a parent is not to be yielded
                (based on the return value from the ‘filter_func’ function). However,
                since we support DAGs, we cannot simply skip over descendants since
                they may still be accessible through a different ancestry chain and
                need to be revisited once all their parents are visited.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>For topological sort, we need the get_parents accessor function in</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>order to determine whether all of a node’s parents have been visited.
                This means the underlying implementation of the graph needs to have
                an efficient way to get a node’s parents, perhaps with back pointers
                to each node’s parents.  This requires additional storage space, which
                could be eliminated if DAGs are not supported.</paragraph>
            <index entries="['single',\ 'get_children()\ (in\ module\ openedx.core.lib.graph_traversals)',\ 'openedx.core.lib.graph_traversals.get_children',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_children()" _toc_parts="openedx.core.lib.graph_traversals get_children" class="" classes="sig sig-object py" fullname="get_children" ids="openedx.core.lib.graph_traversals.get_children" module="openedx.core.lib.graph_traversals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.graph_traversals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_children</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">parent</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Function for traversals to get the children of a block</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'leaf_filter()\ (in\ module\ openedx.core.lib.graph_traversals)',\ 'openedx.core.lib.graph_traversals.leaf_filter',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="leaf_filter()" _toc_parts="openedx.core.lib.graph_traversals leaf_filter" class="" classes="sig sig-object py" fullname="leaf_filter" ids="openedx.core.lib.graph_traversals.leaf_filter" module="openedx.core.lib.graph_traversals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.graph_traversals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">leaf_filter</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">block</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Filter for traversals to find leaf blocks</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'traverse_post_order()\ (in\ module\ openedx.core.lib.graph_traversals)',\ 'openedx.core.lib.graph_traversals.traverse_post_order',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="traverse_post_order()" _toc_parts="openedx.core.lib.graph_traversals traverse_post_order" class="" classes="sig sig-object py" fullname="traverse_post_order" ids="openedx.core.lib.graph_traversals.traverse_post_order" module="openedx.core.lib.graph_traversals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.graph_traversals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">traverse_post_order</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_node</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_children</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generator for yielding nodes of a tree (or directed acyclic graph)
                        in a post-order sort.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>traverse_topologically.</literal_strong> (<literal_emphasis>See description in</literal_emphasis>)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'traverse_pre_order()\ (in\ module\ openedx.core.lib.graph_traversals)',\ 'openedx.core.lib.graph_traversals.traverse_pre_order',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="traverse_pre_order()" _toc_parts="openedx.core.lib.graph_traversals traverse_pre_order" class="" classes="sig sig-object py" fullname="traverse_pre_order" ids="openedx.core.lib.graph_traversals.traverse_pre_order" module="openedx.core.lib.graph_traversals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.graph_traversals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">traverse_pre_order</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_node</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_children</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generator for yielding nodes of a tree (or directed acyclic graph)
                        in a pre-order sort.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>traverse_topologically.</literal_strong> (<literal_emphasis>See description in</literal_emphasis>)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'traverse_topologically()\ (in\ module\ openedx.core.lib.graph_traversals)',\ 'openedx.core.lib.graph_traversals.traverse_topologically',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="traverse_topologically()" _toc_parts="openedx.core.lib.graph_traversals traverse_topologically" class="" classes="sig sig-object py" fullname="traverse_topologically" ids="openedx.core.lib.graph_traversals.traverse_topologically" module="openedx.core.lib.graph_traversals"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.graph_traversals.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">traverse_topologically</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">start_node</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_parents</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_children</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">filter_func</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">yield_descendants_of_unyielded</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generator for yielding nodes of a tree (or directed acyclic graph)
                        in a topological sort.  The tree is traversed using the
                        get_parents and get_children accessors. The filter_func function is
                        used to limit which nodes are actually yielded.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>start_node</literal_strong> (<literal_emphasis>any hashable type</literal_emphasis>)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>traversal.</literal_strong></paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>get_parents</literal_strong> (<literal_emphasis>node-&gt;</literal_emphasis><literal_emphasis>[</literal_emphasis><literal_emphasis>node</literal_emphasis><literal_emphasis>]</literal_emphasis>) – parent nodes for a given node.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>get_children</literal_strong> (<literal_emphasis>node-&gt;</literal_emphasis><literal_emphasis>[</literal_emphasis><literal_emphasis>node</literal_emphasis><literal_emphasis>]</literal_emphasis>) – children nodes for a given node.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>filter_func</literal_strong> (<literal_emphasis>node-&gt;boolean</literal_emphasis>) – whether or not to yield the given node.
                                            If None, the True function is assumed.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>yield_descendants_of_unyielded</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – <definition_list><definition_list_item><term>If False, descendants of an unyielded node are not</term><definition><paragraph>yielded.</paragraph></definition></definition_list_item><definition_list_item><term>If True, descendants of an unyielded node are yielded even</term><definition><paragraph>if none of their parents were yielded.</paragraph></definition></definition_list_item></definition_list><paragraph>Note: In case of a DAG, a descendant is yielded if <emphasis>any</emphasis> of
                                                its parents are yielded.</paragraph></paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Yields</field_name>
                            <field_body>
                                <paragraph><emphasis>node</emphasis> – The result of the next node in the traversal.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.hash_utils openedx-core-lib-hash-utils-module" names="openedx.core.lib.hash_utils\ module">
            <title>openedx.core.lib.hash_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.hash_utils',\ 'module-openedx.core.lib.hash_utils',\ '',\ None]"></index>
            <paragraph>Utilities related to hashing</paragraph>
            <paragraph>This duplicates functionality in django-oauth-provider,
                specifically long_token and short token functions which was used to create
                random tokens</paragraph>
            <index entries="['single',\ 'create_hash256()\ (in\ module\ openedx.core.lib.hash_utils)',\ 'openedx.core.lib.hash_utils.create_hash256',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_hash256()" _toc_parts="openedx.core.lib.hash_utils create_hash256" class="" classes="sig sig-object py" fullname="create_hash256" ids="openedx.core.lib.hash_utils.create_hash256" module="openedx.core.lib.hash_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.hash_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_hash256</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">max_length</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generate a hash that can be used as an application secret
                        Warning: this is not sufficiently secure for tasks like encription
                        Currently, this is just meant to create sufficiently random tokens</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'short_token()\ (in\ module\ openedx.core.lib.hash_utils)',\ 'openedx.core.lib.hash_utils.short_token',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="short_token()" _toc_parts="openedx.core.lib.hash_utils short_token" class="" classes="sig sig-object py" fullname="short_token" ids="openedx.core.lib.hash_utils.short_token" module="openedx.core.lib.hash_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.hash_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">short_token</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Generates a hash of length 32
                        Warning: this is not sufficiently secure for tasks like encription
                        Currently, this is just meant to create sufficiently random tokens</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.html_to_text openedx-core-lib-html-to-text-module" names="openedx.core.lib.html_to_text\ module">
            <title>openedx.core.lib.html_to_text module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.html_to_text',\ 'module-openedx.core.lib.html_to_text',\ '',\ None]"></index>
            <paragraph>Provides a function to convert html to plaintext.</paragraph>
            <index entries="['single',\ 'html_to_text()\ (in\ module\ openedx.core.lib.html_to_text)',\ 'openedx.core.lib.html_to_text.html_to_text',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="html_to_text()" _toc_parts="openedx.core.lib.html_to_text html_to_text" class="" classes="sig sig-object py" fullname="html_to_text" ids="openedx.core.lib.html_to_text.html_to_text" module="openedx.core.lib.html_to_text"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.html_to_text.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">html_to_text</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">html_message</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Converts an html message to plaintext.
                        Currently uses lynx in a subprocess; should be refactored to
                        use something more pythonic.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.json_utils openedx-core-lib-json-utils-module" names="openedx.core.lib.json_utils\ module">
            <title>openedx.core.lib.json_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.json_utils',\ 'module-openedx.core.lib.json_utils',\ '',\ None]"></index>
            <paragraph>Helpers for json serialization</paragraph>
            <index entries="['single',\ 'EdxJSONEncoder\ (class\ in\ openedx.core.lib.json_utils)',\ 'openedx.core.lib.json_utils.EdxJSONEncoder',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="EdxJSONEncoder" _toc_parts="openedx.core.lib.json_utils EdxJSONEncoder" class="" classes="sig sig-object py" fullname="EdxJSONEncoder" ids="openedx.core.lib.json_utils.EdxJSONEncoder" module="openedx.core.lib.json_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.json_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">EdxJSONEncoder</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_operator classes="keyword-only-separator o"><abbreviation explanation="Keyword-only parameters separator (PEP 3102)">*</abbreviation></desc_sig_operator></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">skipkeys</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">ensure_ascii</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">check_circular</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">allow_nan</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">True</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">sort_keys</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">indent</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">separators</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">default</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="False" reftitle="(in Django v4.2)" refuri="https://docs.djangoproject.com/en/4.2/topics/serialization/#django.core.serializers.json.DjangoJSONEncoder"><literal classes="xref py py-class">DjangoJSONEncoder</literal></reference></paragraph>
                    <paragraph>Custom JSONEncoder that handles <title_reference>Location</title_reference> and <title_reference>datetime.datetime</title_reference> objects.</paragraph>
                    <paragraph><problematic ids="id4" refid="id3">`</problematic>Location`s are encoded as their url string form, and <problematic ids="id6" refid="id5">`</problematic>datetime`s as
                        ISO date strings</paragraph>
                    <index entries="['single',\ 'default()\ (openedx.core.lib.json_utils.EdxJSONEncoder\ method)',\ 'openedx.core.lib.json_utils.EdxJSONEncoder.default',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="EdxJSONEncoder.default()" _toc_parts="openedx.core.lib.json_utils EdxJSONEncoder default" class="EdxJSONEncoder" classes="sig sig-object py" fullname="EdxJSONEncoder.default" ids="openedx.core.lib.json_utils.EdxJSONEncoder.default" module="openedx.core.lib.json_utils"><desc_name classes="sig-name descname" xml:space="preserve">default</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">o</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Implement this method in a subclass such that it returns
                                a serializable object for <literal>o</literal>, or calls the base implementation
                                (to raise a <literal>TypeError</literal>).</paragraph>
                            <paragraph>For example, to support arbitrary iterators, you could
                                implement default like this:</paragraph>
                            <literal_block force="False" language="default" linenos="False" xml:space="preserve">def default(self, o):
    try:
        iterable = iter(o)
    except TypeError:
        pass
    else:
        return list(iterable)
    # Let the base class default method raise the TypeError
    return super().default(o)</literal_block>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.jwt openedx-core-lib-jwt-module" names="openedx.core.lib.jwt\ module">
            <title>openedx.core.lib.jwt module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.jwt',\ 'module-openedx.core.lib.jwt',\ '',\ None]"></index>
            <paragraph>JWT Token handling and signing functions.</paragraph>
            <index entries="['single',\ 'create_jwt()\ (in\ module\ openedx.core.lib.jwt)',\ 'openedx.core.lib.jwt.create_jwt',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_jwt()" _toc_parts="openedx.core.lib.jwt create_jwt" class="" classes="sig sig-object py" fullname="create_jwt" ids="openedx.core.lib.jwt.create_jwt" module="openedx.core.lib.jwt"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.jwt.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_jwt</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">lms_user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">expires_in_seconds</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">additional_token_claims</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">now</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Produce an encoded JWT (string) indicating some temporary permission for the indicated user.</paragraph>
                    <paragraph>What permission that is must be encoded in additional_claims.
                        :param lms_user_id: LMS user ID this token is being generated for
                        :type lms_user_id: int
                        :param expires_in_seconds: Time to token expiry, specified in seconds.
                        :type expires_in_seconds: int
                        :param additional_token_claims: Additional claims to include in the token.
                        :type additional_token_claims: dict
                        :param now: optional now value for testing
                        :type now: int</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'unpack_jwt()\ (in\ module\ openedx.core.lib.jwt)',\ 'openedx.core.lib.jwt.unpack_jwt',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="unpack_jwt()" _toc_parts="openedx.core.lib.jwt unpack_jwt" class="" classes="sig sig-object py" fullname="unpack_jwt" ids="openedx.core.lib.jwt.unpack_jwt" module="openedx.core.lib.jwt"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.jwt.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">unpack_jwt</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">token</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">lms_user_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">now</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Unpack and verify an encoded JWT.</paragraph>
                    <paragraph>Validate the user and expiration.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>token</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The token to be unpacked and verified.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>lms_user_id</literal_strong> (<literal_emphasis>int</literal_emphasis>) – LMS user ID this token should match with.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>now</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Optional now value for testing.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>Returns a valid, decoded json payload (string).</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.log_utils openedx-core-lib-log-utils-module" names="openedx.core.lib.log_utils\ module">
            <title>openedx.core.lib.log_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.log_utils',\ 'module-openedx.core.lib.log_utils',\ '',\ None]"></index>
            <paragraph>Helper functions for logging.</paragraph>
            <index entries="['single',\ 'audit_log()\ (in\ module\ openedx.core.lib.log_utils)',\ 'openedx.core.lib.log_utils.audit_log',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="audit_log()" _toc_parts="openedx.core.lib.log_utils audit_log" class="" classes="sig sig-object py" fullname="audit_log" ids="openedx.core.lib.log_utils.audit_log" module="openedx.core.lib.log_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.log_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">audit_log</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">name</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_operator classes="o">**</desc_sig_operator><desc_sig_name classes="n">kwargs</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>DRY helper used to emit an INFO-level log message.</paragraph>
                    <paragraph>Messages logged with this function are used to construct an audit trail. Log messages
                        should be emitted immediately after the event they correspond to has occurred and, if
                        applicable, after the database has been updated. These log messages use a verbose
                        key-value pair syntax to make it easier to extract fields when parsing the application’s
                        logs.</paragraph>
                    <paragraph>This function is variadic, accepting a variable number of keyword arguments.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>name</literal_strong> (<literal_emphasis>str</literal_emphasis>) – The name of the message to log. For example, ‘payment_received’.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Keyword Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>key-value</literal_strong> (<literal_emphasis>Indefinite. Keyword arguments are strung together as comma-separated</literal_emphasis>)</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>message.</literal_strong> (<literal_emphasis>pairs ordered alphabetically by key in the resulting log</literal_emphasis>)</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>None</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.logsettings openedx-core-lib-logsettings-module" names="openedx.core.lib.logsettings\ module">
            <title>openedx.core.lib.logsettings module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.logsettings',\ 'module-openedx.core.lib.logsettings',\ '',\ None]"></index>
            <paragraph>Get log settings.</paragraph>
            <index entries="['single',\ 'get_docker_logger_config()\ (in\ module\ openedx.core.lib.logsettings)',\ 'openedx.core.lib.logsettings.get_docker_logger_config',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_docker_logger_config()" _toc_parts="openedx.core.lib.logsettings get_docker_logger_config" class="" classes="sig sig-object py" fullname="get_docker_logger_config" ids="openedx.core.lib.logsettings.get_docker_logger_config" module="openedx.core.lib.logsettings"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.logsettings.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_docker_logger_config</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">log_dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'/var/tmp'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">logging_env</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'no_env'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">edx_filename</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'edx.log'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dev_env</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">debug</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">False</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">service_variant</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'lms'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the appropriate logging config dictionary for a docker based setup.
                        You should assign the result of this to the LOGGING var in your settings.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_logger_config()\ (in\ module\ openedx.core.lib.logsettings)',\ 'openedx.core.lib.logsettings.get_logger_config',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_logger_config()" _toc_parts="openedx.core.lib.logsettings get_logger_config" class="" classes="sig sig-object py" fullname="get_logger_config" ids="openedx.core.lib.logsettings.get_logger_config" module="openedx.core.lib.logsettings"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.logsettings.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_logger_config</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">log_dir</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">logging_env</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'no_env'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">local_loglevel</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'INFO'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">service_variant</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the appropriate logging config dictionary. You should assign the
                        result of this to the LOGGING var in your settings. The reason it’s done
                        this way instead of registering directly is because I didn’t want to worry
                        about resetting the logging state if this is called multiple times when
                        settings are extended.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'log_python_warnings()\ (in\ module\ openedx.core.lib.logsettings)',\ 'openedx.core.lib.logsettings.log_python_warnings',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="log_python_warnings()" _toc_parts="openedx.core.lib.logsettings log_python_warnings" class="" classes="sig sig-object py" fullname="log_python_warnings" ids="openedx.core.lib.logsettings.log_python_warnings" module="openedx.core.lib.logsettings"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.logsettings.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">log_python_warnings</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Stop ignoring DeprecationWarning, ImportWarning, and PendingDeprecationWarning;
                        log all Python warnings to the main log file.</paragraph>
                    <paragraph>Not used in test runs, so pytest can collect the warnings triggered for
                        each test case.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.mail_utils openedx-core-lib-mail-utils-module" names="openedx.core.lib.mail_utils\ module">
            <title>openedx.core.lib.mail_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.mail_utils',\ 'module-openedx.core.lib.mail_utils',\ '',\ None]"></index>
            <paragraph>Utilities related to mailing.</paragraph>
            <index entries="['single',\ 'wrap_message()\ (in\ module\ openedx.core.lib.mail_utils)',\ 'openedx.core.lib.mail_utils.wrap_message',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="wrap_message()" _toc_parts="openedx.core.lib.mail_utils wrap_message" class="" classes="sig sig-object py" fullname="wrap_message" ids="openedx.core.lib.mail_utils.wrap_message" module="openedx.core.lib.mail_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.mail_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">wrap_message</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">width</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">900</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <block_quote>
                        <paragraph>RFC 2822 states that line lengths in emails must be less than 998. Some MTA’s add newlines to messages if any line
                            exceeds a certain limit (the exact limit varies). Sendmail goes so far as to add ‘!</paragraph>
                    </block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>‘ after the 990th character in</term>
                            <definition>
                                <paragraph>a line. To ensure that messages look consistent this helper function wraps long lines to a conservative length.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.mobile_utils openedx-core-lib-mobile-utils-module" names="openedx.core.lib.mobile_utils\ module">
            <title>openedx.core.lib.mobile_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.mobile_utils',\ 'module-openedx.core.lib.mobile_utils',\ '',\ None]"></index>
            <paragraph>Common utilities related to the mobile apps.</paragraph>
            <index entries="['single',\ 'is_request_from_mobile_app()\ (in\ module\ openedx.core.lib.mobile_utils)',\ 'openedx.core.lib.mobile_utils.is_request_from_mobile_app',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="is_request_from_mobile_app()" _toc_parts="openedx.core.lib.mobile_utils is_request_from_mobile_app" class="" classes="sig sig-object py" fullname="is_request_from_mobile_app" ids="openedx.core.lib.mobile_utils.is_request_from_mobile_app" module="openedx.core.lib.mobile_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.mobile_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">is_request_from_mobile_app</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns whether the given request was made by an Open edX mobile app,
                        either natively or through the mobile web view.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>request</literal_strong> (<literal_emphasis>HttpRequest</literal_emphasis>)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.request_utils openedx-core-lib-request-utils-module" names="openedx.core.lib.request_utils\ module">
            <title>openedx.core.lib.request_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.request_utils',\ 'module-openedx.core.lib.request_utils',\ '',\ None]"></index>
            <paragraph>Utility functions related to HTTP requests</paragraph>
            <index entries="['single',\ 'IgnoredErrorMiddleware\ (class\ in\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.IgnoredErrorMiddleware',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="IgnoredErrorMiddleware" _toc_parts="openedx.core.lib.request_utils IgnoredErrorMiddleware" class="" classes="sig sig-object py" fullname="IgnoredErrorMiddleware" ids="openedx.core.lib.request_utils.IgnoredErrorMiddleware" module="openedx.core.lib.request_utils"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">IgnoredErrorMiddleware</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">get_response</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Middleware to add logging and monitoring for ignored errors.</paragraph>
                    <index entries="['single',\ 'process_exception()\ (openedx.core.lib.request_utils.IgnoredErrorMiddleware\ method)',\ 'openedx.core.lib.request_utils.IgnoredErrorMiddleware.process_exception',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="IgnoredErrorMiddleware.process_exception()" _toc_parts="openedx.core.lib.request_utils IgnoredErrorMiddleware process_exception" class="IgnoredErrorMiddleware" classes="sig sig-object py" fullname="IgnoredErrorMiddleware.process_exception" ids="openedx.core.lib.request_utils.IgnoredErrorMiddleware.process_exception" module="openedx.core.lib.request_utils"><desc_name classes="sig-name descname" xml:space="preserve">process_exception</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exception</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Add logging and monitoring of ignored errors.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'clear_cached_ignored_error_settings()\ (in\ module\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.clear_cached_ignored_error_settings',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="clear_cached_ignored_error_settings()" _toc_parts="openedx.core.lib.request_utils clear_cached_ignored_error_settings" class="" classes="sig sig-object py" fullname="clear_cached_ignored_error_settings" ids="openedx.core.lib.request_utils.clear_cached_ignored_error_settings" module="openedx.core.lib.request_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">clear_cached_ignored_error_settings</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Clears the cached ignored error settings. Useful for testing.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'course_id_from_url()\ (in\ module\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.course_id_from_url',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="course_id_from_url()" _toc_parts="openedx.core.lib.request_utils course_id_from_url" class="" classes="sig sig-object py" fullname="course_id_from_url" ids="openedx.core.lib.request_utils.course_id_from_url" module="openedx.core.lib.request_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">course_id_from_url</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">url</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Extracts the course_id from the given <title_reference>url</title_reference>.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_request_or_stub()\ (in\ module\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.get_request_or_stub',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_request_or_stub()" _toc_parts="openedx.core.lib.request_utils get_request_or_stub" class="" classes="sig sig-object py" fullname="get_request_or_stub" ids="openedx.core.lib.request_utils.get_request_or_stub" module="openedx.core.lib.request_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_request_or_stub</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return the current request or a stub request.</paragraph>
                    <paragraph>If called outside the context of a request, construct a fake
                        request that can be used to build an absolute URI.</paragraph>
                    <paragraph>This is useful in cases where we need to pass in a request object
                        but don’t have an active request (for example, in tests, celery tasks, and XBlocks).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ignored_error_exception_handler()\ (in\ module\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.ignored_error_exception_handler',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ignored_error_exception_handler()" _toc_parts="openedx.core.lib.request_utils ignored_error_exception_handler" class="" classes="sig sig-object py" fullname="ignored_error_exception_handler" ids="openedx.core.lib.request_utils.ignored_error_exception_handler" module="openedx.core.lib.request_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ignored_error_exception_handler</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">exc</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">context</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Replacement for DRF’s default exception handler to enable observing ignored errors.</paragraph>
                    <paragraph>In addition to the default behaviour, add logging and monitoring for ignored errors.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'safe_get_host()\ (in\ module\ openedx.core.lib.request_utils)',\ 'openedx.core.lib.request_utils.safe_get_host',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="safe_get_host()" _toc_parts="openedx.core.lib.request_utils safe_get_host" class="" classes="sig sig-object py" fullname="safe_get_host" ids="openedx.core.lib.request_utils.safe_get_host" module="openedx.core.lib.request_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.request_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">safe_get_host</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">request</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the host name for this request, as safely as possible.</paragraph>
                    <paragraph>If ALLOWED_HOSTS is properly set, this calls request.get_host;
                        otherwise, this returns whatever settings.SITE_NAME is set to.</paragraph>
                    <paragraph>This ensures we will never accept an untrusted value of get_host()</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.rooted_paths openedx-core-lib-rooted-paths-module" names="openedx.core.lib.rooted_paths\ module">
            <title>openedx.core.lib.rooted_paths module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.rooted_paths',\ 'module-openedx.core.lib.rooted_paths',\ '',\ None]"></index>
            <paragraph>Provides rooted_glob, for finding relative glob paths in another director.</paragraph>
            <index entries="['single',\ 'remove_root()\ (in\ module\ openedx.core.lib.rooted_paths)',\ 'openedx.core.lib.rooted_paths.remove_root',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="remove_root()" _toc_parts="openedx.core.lib.rooted_paths remove_root" class="" classes="sig sig-object py" fullname="remove_root" ids="openedx.core.lib.rooted_paths.remove_root" module="openedx.core.lib.rooted_paths"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.rooted_paths.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">remove_root</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">paths</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns <title_reference>paths</title_reference> made relative to <title_reference>root</title_reference></paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'rooted_glob()\ (in\ module\ openedx.core.lib.rooted_paths)',\ 'openedx.core.lib.rooted_paths.rooted_glob',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="rooted_glob()" _toc_parts="openedx.core.lib.rooted_paths rooted_glob" class="" classes="sig sig-object py" fullname="rooted_glob" ids="openedx.core.lib.rooted_paths.rooted_glob" module="openedx.core.lib.rooted_paths"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.rooted_paths.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">rooted_glob</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">root</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">glob</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the results of running <title_reference>glob</title_reference> rooted in the directory <title_reference>root</title_reference>.
                        All returned paths are relative to <title_reference>root</title_reference>.</paragraph>
                    <paragraph>Uses glob2 globbing</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.session_serializers openedx-core-lib-session-serializers-module" names="openedx.core.lib.session_serializers\ module">
            <title>openedx.core.lib.session_serializers module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.session_serializers',\ 'module-openedx.core.lib.session_serializers',\ '',\ None]"></index>
            <paragraph>Custom session serializer to deal with going from python2 and python3.</paragraph>
            <index entries="['single',\ 'PickleSerializer\ (class\ in\ openedx.core.lib.session_serializers)',\ 'openedx.core.lib.session_serializers.PickleSerializer',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="PickleSerializer" _toc_parts="openedx.core.lib.session_serializers PickleSerializer" class="" classes="sig sig-object py" fullname="PickleSerializer" ids="openedx.core.lib.session_serializers.PickleSerializer" module="openedx.core.lib.session_serializers"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.session_serializers.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">PickleSerializer</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Set the pickle protocol version explicitly because we don’t want
                        to have session thrashing when we upgrade to newer versions of
                        python.</paragraph>
                    <paragraph>Based on the PickleSerializer built into django:
                        <reference refuri="https://github.com/django/django/blob/master/django/contrib/sessions/serializers.py">https://github.com/django/django/blob/master/django/contrib/sessions/serializers.py</reference></paragraph>
                    <index entries="['single',\ 'dumps()\ (openedx.core.lib.session_serializers.PickleSerializer\ method)',\ 'openedx.core.lib.session_serializers.PickleSerializer.dumps',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PickleSerializer.dumps()" _toc_parts="openedx.core.lib.session_serializers PickleSerializer dumps" class="PickleSerializer" classes="sig sig-object py" fullname="PickleSerializer.dumps" ids="openedx.core.lib.session_serializers.PickleSerializer.dumps" module="openedx.core.lib.session_serializers"><desc_name classes="sig-name descname" xml:space="preserve">dumps</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">obj</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a pickled representation of object.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'loads()\ (openedx.core.lib.session_serializers.PickleSerializer\ method)',\ 'openedx.core.lib.session_serializers.PickleSerializer.loads',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="PickleSerializer.loads()" _toc_parts="openedx.core.lib.session_serializers PickleSerializer loads" class="PickleSerializer" classes="sig sig-object py" fullname="PickleSerializer.loads" ids="openedx.core.lib.session_serializers.PickleSerializer.loads" module="openedx.core.lib.session_serializers"><desc_name classes="sig-name descname" xml:space="preserve">loads</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a python object from pickled data.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'protocol\ (openedx.core.lib.session_serializers.PickleSerializer\ attribute)',\ 'openedx.core.lib.session_serializers.PickleSerializer.protocol',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="PickleSerializer.protocol" _toc_parts="openedx.core.lib.session_serializers PickleSerializer protocol" class="PickleSerializer" classes="sig sig-object py" fullname="PickleSerializer.protocol" ids="openedx.core.lib.session_serializers.PickleSerializer.protocol" module="openedx.core.lib.session_serializers"><desc_name classes="sig-name descname" xml:space="preserve">protocol</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>4</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.teams_config openedx-core-lib-teams-config-module" names="openedx.core.lib.teams_config\ module">
            <title>openedx.core.lib.teams_config module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.teams_config',\ 'module-openedx.core.lib.teams_config',\ '',\ None]"></index>
            <paragraph>Safe configuration wrapper for Course Teams feature.</paragraph>
            <index entries="['single',\ 'TeamsConfig\ (class\ in\ openedx.core.lib.teams_config)',\ 'openedx.core.lib.teams_config.TeamsConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TeamsConfig" _toc_parts="openedx.core.lib.teams_config TeamsConfig" class="" classes="sig sig-object py" fullname="TeamsConfig" ids="openedx.core.lib.teams_config.TeamsConfig" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.teams_config.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TeamsConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Configuration for the Course Teams feature on a course run.</paragraph>
                    <paragraph>Takes in a configuration from a JSON-friendly dictionary,
                        and exposes cleaned data from it.</paragraph>
                    <index entries="['single',\ 'calc_max_team_size()\ (openedx.core.lib.teams_config.TeamsConfig\ method)',\ 'openedx.core.lib.teams_config.TeamsConfig.calc_max_team_size',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TeamsConfig.calc_max_team_size()" _toc_parts="openedx.core.lib.teams_config TeamsConfig calc_max_team_size" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.calc_max_team_size" ids="openedx.core.lib.teams_config.TeamsConfig.calc_max_team_size" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">calc_max_team_size</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">teamset_id</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Given a team-set’s ID, return the maximum allowed size of teams within it.</paragraph>
                            <paragraph>For ‘open’ team-sets, first regards the team-set’s <title_reference>max_team_size</title_reference>,
                                then falls back to the course’s <title_reference>max_team_size</title_reference>.
                                For managed team-sets, returns <title_reference>MANAGED_TEAM_MAX_TEAM_SIZE</title_reference>
                                (a number that is big enough to never really be a limit, but does put an upper limit for safety’s sake)</paragraph>
                            <paragraph>Return value of None should be regarded as “no maximum size” (TODO MST-33).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'cleaned_data\ (openedx.core.lib.teams_config.TeamsConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsConfig.cleaned_data',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsConfig.cleaned_data" _toc_parts="openedx.core.lib.teams_config TeamsConfig cleaned_data" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.cleaned_data" ids="openedx.core.lib.teams_config.TeamsConfig.cleaned_data" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">cleaned_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>JSON-friendly dictionary containing cleaned data from this TeamsConfig.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'default_max_team_size\ (openedx.core.lib.teams_config.TeamsConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsConfig.default_max_team_size',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsConfig.default_max_team_size" _toc_parts="openedx.core.lib.teams_config TeamsConfig default_max_team_size" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.default_max_team_size" ids="openedx.core.lib.teams_config.TeamsConfig.default_max_team_size" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">default_max_team_size</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The default maximum size for teams in this course.</paragraph>
                            <paragraph>Can be overriden by individual team sets; see <title_reference>calc_max_team_size</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_enabled\ (openedx.core.lib.teams_config.TeamsConfig\ property)',\ 'openedx.core.lib.teams_config.TeamsConfig.is_enabled',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="TeamsConfig.is_enabled" _toc_parts="openedx.core.lib.teams_config TeamsConfig is_enabled" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.is_enabled" ids="openedx.core.lib.teams_config.TeamsConfig.is_enabled" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">is_enabled</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the Course Teams feature is enabled for this course run.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'source_data\ (openedx.core.lib.teams_config.TeamsConfig\ property)',\ 'openedx.core.lib.teams_config.TeamsConfig.source_data',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="TeamsConfig.source_data" _toc_parts="openedx.core.lib.teams_config TeamsConfig source_data" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.source_data" ids="openedx.core.lib.teams_config.TeamsConfig.source_data" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">source_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Dictionary containing the data from which this TeamsConfig was built.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'teamsets\ (openedx.core.lib.teams_config.TeamsConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsConfig.teamsets',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsConfig.teamsets" _toc_parts="openedx.core.lib.teams_config TeamsConfig teamsets" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.teamsets" ids="openedx.core.lib.teams_config.TeamsConfig.teamsets" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">teamsets</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>List of configurations for team-sets.</paragraph>
                            <paragraph>A team-set is a logical collection of teams, generally centered around a
                                discussion topic or assignment.</paragraph>
                            <paragraph>A learner should be able to join one team per team-set
                                (TODO MST-12… currently, a learner may join one team per course).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'teamsets_by_id\ (openedx.core.lib.teams_config.TeamsConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsConfig.teamsets_by_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsConfig.teamsets_by_id" _toc_parts="openedx.core.lib.teams_config TeamsConfig teamsets_by_id" class="TeamsConfig" classes="sig sig-object py" fullname="TeamsConfig.teamsets_by_id" ids="openedx.core.lib.teams_config.TeamsConfig.teamsets_by_id" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">teamsets_by_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TeamsetConfig\ (class\ in\ openedx.core.lib.teams_config)',\ 'openedx.core.lib.teams_config.TeamsetConfig',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TeamsetConfig" _toc_parts="openedx.core.lib.teams_config TeamsetConfig" class="" classes="sig sig-object py" fullname="TeamsetConfig" ids="openedx.core.lib.teams_config.TeamsetConfig" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.teams_config.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TeamsetConfig</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">data</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                    <paragraph>Configuration for a team-set within a course run.</paragraph>
                    <paragraph>Takes in a configuration from a JSON-friendly dictionary,
                        and exposes cleaned data from it.</paragraph>
                    <index entries="['single',\ 'cleaned_data\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.cleaned_data',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.cleaned_data" _toc_parts="openedx.core.lib.teams_config TeamsetConfig cleaned_data" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.cleaned_data" ids="openedx.core.lib.teams_config.TeamsetConfig.cleaned_data" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">cleaned_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>JSON-friendly dictionary containing cleaned data from this TeamsConfig.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'description\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.description',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.description" _toc_parts="openedx.core.lib.teams_config TeamsetConfig description" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.description" ids="openedx.core.lib.teams_config.TeamsetConfig.description" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">description</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A brief description of the team-set,
                                falling back to empty string.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'is_private_managed\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.is_private_managed',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.is_private_managed" _toc_parts="openedx.core.lib.teams_config TeamsetConfig is_private_managed" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.is_private_managed" ids="openedx.core.lib.teams_config.TeamsetConfig.is_private_managed" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">is_private_managed</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Returns true if teamsettype is private_managed</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'max_team_size\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.max_team_size',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.max_team_size" _toc_parts="openedx.core.lib.teams_config TeamsetConfig max_team_size" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.max_team_size" ids="openedx.core.lib.teams_config.TeamsetConfig.max_team_size" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">max_team_size</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Configured maximum team size override for this team-set,
                                falling back to None.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'name\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.name',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.name" _toc_parts="openedx.core.lib.teams_config TeamsetConfig name" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.name" ids="openedx.core.lib.teams_config.TeamsetConfig.name" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>A human-friendly name of the team-set,
                                falling back to <title_reference>teamset_id</title_reference>.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'source_data\ (openedx.core.lib.teams_config.TeamsetConfig\ property)',\ 'openedx.core.lib.teams_config.TeamsetConfig.source_data',\ '',\ None]"></index>
                    <desc classes="py property" desctype="property" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="TeamsetConfig.source_data" _toc_parts="openedx.core.lib.teams_config TeamsetConfig source_data" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.source_data" ids="openedx.core.lib.teams_config.TeamsetConfig.source_data" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">property</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">source_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Dictionary containing the data from which this TeamsConfig was built.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'teamset_id\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.teamset_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.teamset_id" _toc_parts="openedx.core.lib.teams_config TeamsetConfig teamset_id" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.teamset_id" ids="openedx.core.lib.teams_config.TeamsetConfig.teamset_id" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">teamset_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>An identifier for this team-set.</paragraph>
                            <paragraph>Should be a URL-slug friendly string,
                                but for a historical reasons may contain periods and spaces.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'teamset_id_regex\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.teamset_id_regex',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.teamset_id_regex" _toc_parts="openedx.core.lib.teams_config TeamsetConfig teamset_id_regex" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.teamset_id_regex" ids="openedx.core.lib.teams_config.TeamsetConfig.teamset_id_regex" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">teamset_id_regex</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>re.compile('^[A-Za-z0-9_. -]+$')</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'teamset_type\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.teamset_type',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.teamset_type" _toc_parts="openedx.core.lib.teams_config TeamsetConfig teamset_type" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.teamset_type" ids="openedx.core.lib.teams_config.TeamsetConfig.teamset_type" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">teamset_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Configured TeamsetType,
                                falling back to default TeamsetType.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'user_partition_id\ (openedx.core.lib.teams_config.TeamsetConfig\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetConfig.user_partition_id',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetConfig.user_partition_id" _toc_parts="openedx.core.lib.teams_config TeamsetConfig user_partition_id" class="TeamsetConfig" classes="sig sig-object py" fullname="TeamsetConfig.user_partition_id" ids="openedx.core.lib.teams_config.TeamsetConfig.user_partition_id" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">user_partition_id</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The ID of the dynamic user partition for this team-set,
                                falling back to None.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'TeamsetType\ (class\ in\ openedx.core.lib.teams_config)',\ 'openedx.core.lib.teams_config.TeamsetType',\ '',\ None]"></index>
            <desc classes="py class" desctype="class" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="TeamsetType" _toc_parts="openedx.core.lib.teams_config TeamsetType" class="" classes="sig sig-object py" fullname="TeamsetType" ids="openedx.core.lib.teams_config.TeamsetType" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">class</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.teams_config.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">TeamsetType</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">value</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Enum</literal></paragraph>
                    <paragraph>Management and privacy scheme for teams within a team-set.</paragraph>
                    <paragraph>“open” team-sets allow learners to freely join, leave, and create teams.</paragraph>
                    <paragraph>“public_managed” team-sets forbid learners from modifying teams’ membership.
                        Instead, instructors manage membership (TODO MST-9).</paragraph>
                    <paragraph>“private_managed” is like public_managed, except for that team names,
                        team memberships, and team discussions are all private to the members
                        of the teams (TODO MST-10).</paragraph>
                    <index entries="['single',\ 'get_default()\ (openedx.core.lib.teams_config.TeamsetType\ class\ method)',\ 'openedx.core.lib.teams_config.TeamsetType.get_default',\ '',\ None]"></index>
                    <desc classes="py method" desctype="method" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="TeamsetType.get_default()" _toc_parts="openedx.core.lib.teams_config TeamsetType get_default" class="TeamsetType" classes="sig sig-object py" fullname="TeamsetType.get_default" ids="openedx.core.lib.teams_config.TeamsetType.get_default" module="openedx.core.lib.teams_config"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k">classmethod</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space></desc_annotation><desc_name classes="sig-name descname" xml:space="preserve">get_default</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return default TeamsetType.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'open\ (openedx.core.lib.teams_config.TeamsetType\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetType.open',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetType.open" _toc_parts="openedx.core.lib.teams_config TeamsetType open" class="TeamsetType" classes="sig sig-object py" fullname="TeamsetType.open" ids="openedx.core.lib.teams_config.TeamsetType.open" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">open</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'open'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'open_managed\ (openedx.core.lib.teams_config.TeamsetType\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetType.open_managed',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetType.open_managed" _toc_parts="openedx.core.lib.teams_config TeamsetType open_managed" class="TeamsetType" classes="sig sig-object py" fullname="TeamsetType.open_managed" ids="openedx.core.lib.teams_config.TeamsetType.open_managed" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">open_managed</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'open_managed'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'private_managed\ (openedx.core.lib.teams_config.TeamsetType\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetType.private_managed',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetType.private_managed" _toc_parts="openedx.core.lib.teams_config TeamsetType private_managed" class="TeamsetType" classes="sig sig-object py" fullname="TeamsetType.private_managed" ids="openedx.core.lib.teams_config.TeamsetType.private_managed" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">private_managed</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'private_managed'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'public_managed\ (openedx.core.lib.teams_config.TeamsetType\ attribute)',\ 'openedx.core.lib.teams_config.TeamsetType.public_managed',\ '',\ None]"></index>
                    <desc classes="py attribute" desctype="attribute" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="TeamsetType.public_managed" _toc_parts="openedx.core.lib.teams_config TeamsetType public_managed" class="TeamsetType" classes="sig sig-object py" fullname="TeamsetType.public_managed" ids="openedx.core.lib.teams_config.TeamsetType.public_managed" module="openedx.core.lib.teams_config"><desc_name classes="sig-name descname" xml:space="preserve">public_managed</desc_name><desc_annotation xml:space="preserve"><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">=</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space>'public_managed'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_team_set_partition()\ (in\ module\ openedx.core.lib.teams_config)',\ 'openedx.core.lib.teams_config.create_team_set_partition',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_team_set_partition()" _toc_parts="openedx.core.lib.teams_config create_team_set_partition" class="" classes="sig sig-object py" fullname="create_team_set_partition" ids="openedx.core.lib.teams_config.create_team_set_partition" module="openedx.core.lib.teams_config"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.teams_config.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_team_set_partition</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get the dynamic enrollment track user partition based on the team-sets of the course.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_team_set_partitions_with_course_id()\ (in\ module\ openedx.core.lib.teams_config)',\ 'openedx.core.lib.teams_config.create_team_set_partitions_with_course_id',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_team_set_partitions_with_course_id()" _toc_parts="openedx.core.lib.teams_config create_team_set_partitions_with_course_id" class="" classes="sig sig-object py" fullname="create_team_set_partitions_with_course_id" ids="openedx.core.lib.teams_config.create_team_set_partitions_with_course_id" module="openedx.core.lib.teams_config"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.teams_config.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_team_set_partitions_with_course_id</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">course_id</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">team_sets</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Create and return the team-set user partitions based only on course_id.
                        If they cannot be created, None is returned.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.tempdir openedx-core-lib-tempdir-module" names="openedx.core.lib.tempdir\ module">
            <title>openedx.core.lib.tempdir module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.tempdir',\ 'module-openedx.core.lib.tempdir',\ '',\ None]"></index>
            <paragraph>Make temporary directories nicely.</paragraph>
            <index entries="['single',\ 'cleanup_tempdir()\ (in\ module\ openedx.core.lib.tempdir)',\ 'openedx.core.lib.tempdir.cleanup_tempdir',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="cleanup_tempdir()" _toc_parts="openedx.core.lib.tempdir cleanup_tempdir" class="" classes="sig sig-object py" fullname="cleanup_tempdir" ids="openedx.core.lib.tempdir.cleanup_tempdir" module="openedx.core.lib.tempdir"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.tempdir.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">cleanup_tempdir</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">the_dir</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Called on process exit to remove a temp directory.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'create_symlink()\ (in\ module\ openedx.core.lib.tempdir)',\ 'openedx.core.lib.tempdir.create_symlink',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="create_symlink()" _toc_parts="openedx.core.lib.tempdir create_symlink" class="" classes="sig sig-object py" fullname="create_symlink" ids="openedx.core.lib.tempdir.create_symlink" module="openedx.core.lib.tempdir"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.tempdir.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">create_symlink</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">src</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dest</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Creates a symbolic link which will be deleted when the process ends.
                        :param src: path to source
                        :param dest: path to destination</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'delete_symlink()\ (in\ module\ openedx.core.lib.tempdir)',\ 'openedx.core.lib.tempdir.delete_symlink',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="delete_symlink()" _toc_parts="openedx.core.lib.tempdir delete_symlink" class="" classes="sig sig-object py" fullname="delete_symlink" ids="openedx.core.lib.tempdir.delete_symlink" module="openedx.core.lib.tempdir"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.tempdir.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">delete_symlink</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">link_path</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Removes symbolic link for
                        :param link_path:</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'mkdtemp_clean()\ (in\ module\ openedx.core.lib.tempdir)',\ 'openedx.core.lib.tempdir.mkdtemp_clean',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="mkdtemp_clean()" _toc_parts="openedx.core.lib.tempdir mkdtemp_clean" class="" classes="sig sig-object py" fullname="mkdtemp_clean" ids="openedx.core.lib.tempdir.mkdtemp_clean" module="openedx.core.lib.tempdir"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.tempdir.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">mkdtemp_clean</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">suffix</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">''</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">prefix</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">'tmp'</inline></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">dir</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Just like mkdtemp, but the directory will be deleted when the process ends.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.time_zone_utils openedx-core-lib-time-zone-utils-module" names="openedx.core.lib.time_zone_utils\ module">
            <title>openedx.core.lib.time_zone_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.time_zone_utils',\ 'module-openedx.core.lib.time_zone_utils',\ '',\ None]"></index>
            <paragraph>Utilities related to timezones</paragraph>
            <index entries="['single',\ 'get_display_time_zone()\ (in\ module\ openedx.core.lib.time_zone_utils)',\ 'openedx.core.lib.time_zone_utils.get_display_time_zone',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_display_time_zone()" _toc_parts="openedx.core.lib.time_zone_utils get_display_time_zone" class="" classes="sig sig-object py" fullname="get_display_time_zone" ids="openedx.core.lib.time_zone_utils.get_display_time_zone" module="openedx.core.lib.time_zone_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.time_zone_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_display_time_zone</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">time_zone_name</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns a formatted display time zone (e.g. ‘Asia/Tokyo (JST, UTC+0900)’)</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong>(</literal_strong><literal_strong>str</literal_strong><literal_strong>)</literal_strong> (<literal_emphasis>time_zone_name</literal_emphasis>) – Name of Pytz time zone</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_time_zone_abbr()\ (in\ module\ openedx.core.lib.time_zone_utils)',\ 'openedx.core.lib.time_zone_utils.get_time_zone_abbr',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_time_zone_abbr()" _toc_parts="openedx.core.lib.time_zone_utils get_time_zone_abbr" class="" classes="sig sig-object py" fullname="get_time_zone_abbr" ids="openedx.core.lib.time_zone_utils.get_time_zone_abbr" module="openedx.core.lib.time_zone_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.time_zone_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_time_zone_abbr</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">time_zone</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">date_time</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the time zone abbreviation (e.g. EST) of the time zone for given datetime</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'get_time_zone_offset()\ (in\ module\ openedx.core.lib.time_zone_utils)',\ 'openedx.core.lib.time_zone_utils.get_time_zone_offset',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="get_time_zone_offset()" _toc_parts="openedx.core.lib.time_zone_utils get_time_zone_offset" class="" classes="sig sig-object py" fullname="get_time_zone_offset" ids="openedx.core.lib.time_zone_utils.get_time_zone_offset" module="openedx.core.lib.time_zone_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.time_zone_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">get_time_zone_offset</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">time_zone</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n">date_time</desc_sig_name><desc_sig_operator classes="o">=</desc_sig_operator><inline classes="default_value" support_smartquotes="False">None</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the time zone offset (e.g. -0800) of the time zone for given datetime</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib.url_utils openedx-core-lib-url-utils-module" names="openedx.core.lib.url_utils\ module">
            <title>openedx.core.lib.url_utils module</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib.url_utils',\ 'module-openedx.core.lib.url_utils',\ '',\ None]"></index>
            <paragraph>Contains common utilities for URL escaping.</paragraph>
            <index entries="['single',\ 'quote_slashes()\ (in\ module\ openedx.core.lib.url_utils)',\ 'openedx.core.lib.url_utils.quote_slashes',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="quote_slashes()" _toc_parts="openedx.core.lib.url_utils quote_slashes" class="" classes="sig sig-object py" fullname="quote_slashes" ids="openedx.core.lib.url_utils.quote_slashes" module="openedx.core.lib.url_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.url_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">quote_slashes</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">text</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Quote ‘/’ characters so that they aren’t visible to
                        django’s url quoting, unquoting, or url regex matching.</paragraph>
                    <paragraph>Escapes ‘/’’ to the sequence ‘;_’, and ‘;’ to the sequence
                        ‘;;’. By making the escape sequence fixed length, and escaping
                        identifier character ‘;’, we are able to reverse the escaping.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'unquote_slashes()\ (in\ module\ openedx.core.lib.url_utils)',\ 'openedx.core.lib.url_utils.unquote_slashes',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="unquote_slashes()" _toc_parts="openedx.core.lib.url_utils unquote_slashes" class="" classes="sig sig-object py" fullname="unquote_slashes" ids="openedx.core.lib.url_utils.unquote_slashes" module="openedx.core.lib.url_utils"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.url_utils.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">unquote_slashes</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">text</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Unquote slashes quoted by <title_reference>quote_slashes</title_reference></paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="module-openedx.core.lib module-contents" names="module\ contents">
            <title>Module contents</title>
            <index entries="['pair',\ 'module;\ openedx.core.lib',\ 'module-openedx.core.lib',\ '',\ None]"></index>
            <paragraph>This directory (openedx/core/lib) contains packages of utilities used by
                both LMS and CMS. Packages with models should go in openedx/core/djangoapps instead.
                Packages that are LMS-specific or CMS-specific should be in lms/ or cms/ instead.</paragraph>
            <paragraph>This particular module contains a small handful of broadly useful utility functions.</paragraph>
            <index entries="['single',\ 'ensure_cms()\ (in\ module\ openedx.core.lib)',\ 'openedx.core.lib.ensure_cms',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ensure_cms()" _toc_parts="openedx.core.lib ensure_cms" class="" classes="sig sig-object py" fullname="ensure_cms" ids="openedx.core.lib.ensure_cms" module="openedx.core.lib"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ensure_cms</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">'This code may only be called by CMS, but it was called by LMS'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Assert that we’re configured as CMS.</paragraph>
                    <paragraph>Useful if you want to forbid authoring-oriented code from accidentally
                        running in the LMS process.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ 'ensure_lms()\ (in\ module\ openedx.core.lib)',\ 'openedx.core.lib.ensure_lms',\ '',\ None]"></index>
            <desc classes="py function" desctype="function" domain="py" no-contents-entry="False" no-index="False" no-index-entry="False" no-typesetting="False" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="ensure_lms()" _toc_parts="openedx.core.lib ensure_lms" class="" classes="sig sig-object py" fullname="ensure_lms" ids="openedx.core.lib.ensure_lms" module="openedx.core.lib"><desc_addname classes="sig-prename descclassname" xml:space="preserve">openedx.core.lib.</desc_addname><desc_name classes="sig-name descname" xml:space="preserve">ensure_lms</desc_name><desc_parameterlist multi_line_parameter_list="False" multi_line_trailing_comma="True" xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n">message</desc_sig_name><desc_sig_punctuation classes="p">:</desc_sig_punctuation><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">str</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_operator classes="o">=</desc_sig_operator><desc_sig_space classes="w"> </desc_sig_space><inline classes="default_value" support_smartquotes="False">'This code may only be called by LMS, but it was called by CMS'</inline></desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Assert that we’re configured as LMS.</paragraph>
                    <paragraph>Useful if you want to forbid learner/instructor-oriented code from accidentally
                        running in the CMS process.</paragraph>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
