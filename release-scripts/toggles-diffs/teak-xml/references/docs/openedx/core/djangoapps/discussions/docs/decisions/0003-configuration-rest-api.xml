<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docs/openedx/core/djangoapps/discussions/docs/decisions/0003-configuration-rest-api.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="expose-discussion-configuration-via-http-api" names="expose\ discussion\ configuration\ via\ http\ api">
        <title>Expose Discussion Configuration via HTTP API</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Proposal</paragraph>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>As part of the BD-03 initiative (Blended Development, Project 3),
                we have previously created a discussion provider configuration backend,
                <title_reference>DiscussionsConfiguration</title_reference>, as well as a new microfrontend (MFE),
                <title_reference>frontend-app-course-authoring</title_reference>.</paragraph>
            <paragraph>However, these two systems cannot yet interact with one another.</paragraph>
            <paragraph>This document proposes the creation of a new HTTP API to connect the two.</paragraph>
        </section>
        <section ids="requirements" names="requirements">
            <title>Requirements</title>
            <paragraph>For a given <title_reference>context_key</title_reference>, this API must allow:
                - retrieval of:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>the list of available providers</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>any options for the active provider</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>creation of:
                        - new configurations</paragraph>
                </list_item>
                <list_item>
                    <paragraph>updating of:
                        - existing configurations</paragraph>
                </list_item>
                <list_item>
                    <paragraph>deletion/disabling of:
                        - unneeded/inactive configurations</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="consideration" names="consideration">
            <title>Consideration</title>
            <paragraph>The API should follow existing best-practices and technology as exists
                in <title_reference>edx-platform</title_reference>. We should _not_ introduce new API architecture.</paragraph>
        </section>
        <section ids="decision" names="decision">
            <title>Decision</title>
            <paragraph>We propose to implement this as a Django REST Framework (DRF)-based HTTP API.</paragraph>
            <paragraph>This API will provide the following HTTP methods:
                - GET</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Retrieve collection of active and available providers,
                            as well as their options</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>POST
                        - Create, update, or disable a configuration</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="payload-shape" names="payload\ shape">
            <title>Payload Shape</title>
            <paragraph>The payload is expected to be shaped like this (key names subject to change):</paragraph>
            <paragraph>The following configuration values are explicitly omitted;
                this should be left entirely up to the MFE.
                -  name
                -  logo
                -  description
                -  support_level
                -  documentation URL</paragraph>
            <paragraph>The LTI configuration (keys, secrets, URLs, etc.) are considered
                out-of-scope at this time.</paragraph>
        </section>
    </section>
</document>
