<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docs/openedx/core/djangoapps/oauth_dispatch/docs/decisions/0012-scope-and-filter-for-third-party-auth.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="scope-and-filter-for-third-party-auth" names="12.\ scope\ and\ filter\ for\ third-party\ auth">
        <title>12. Scope and filter for Third-Party Auth</title>
    </section>
    <section ids="status" names="status">
        <title>Status</title>
        <paragraph>Accepted</paragraph>
    </section>
    <section ids="context" names="context">
        <title>Context</title>
        <paragraph>The permission class <literal>ThirdPartyAuthProviderApiPermission</literal> exists to protect a single view, <literal>UserMappingView</literal>.  The permission ensures that the OAuth Client Application used during authentication has a related mapping in the <literal>ProviderApiPermissions</literal> model for the <literal>provider_id</literal> passed to the view.</paragraph>
        <paragraph>An example call to this view looks like:</paragraph>
        <literal_block force="False" language="default" linenos="False" xml:space="preserve">GET /api/third_party_auth/v0/providers/{provider_id}/users</literal_block>
        <paragraph>The problem is that <literal>ProviderApiPermissions</literal> has a foreign-key reference to a django-oauth-provider (DOP) table which is no longer supported as of the decision to <reference name="Migrate to Django OAuth Toolkit (DOT)" refuri="0002-migrate-to-dot.rst">Migrate to Django OAuth Toolkit (DOT)</reference>.</paragraph>
        <target ids="migrate-to-django-oauth-toolkit-dot" names="migrate\ to\ django\ oauth\ toolkit\ (dot)" refuri="0002-migrate-to-dot.rst"></target>
    </section>
    <section ids="decisions" names="decisions">
        <title>Decisions</title>
        <paragraph>A new scope and filter will be introduced to provide this same Third-Party Auth authorization, and taking advantage of the <reference name="More General Scope Filter Support" refuri="0011-scope-filter-support.rst">More General Scope Filter Support</reference> decision.</paragraph>
        <paragraph>The new scope and filter are:</paragraph>
        <literal_block force="False" language="default" linenos="False" xml:space="preserve">Scope: tpa:read
Filter: tpa_provider:&lt;provider_id&gt; (e.g. tpa_provider:saml-ubc)</literal_block>
        <paragraph>The scope can be protected using the already existing <reference name="JwtHasScope" refuri="https://github.com/openedx/edx-drf-extensions/blob/64f831d715d14dc2db5a1046201ff14e92fa7c9f/edx_rest_framework_extensions/permissions.py#L70">JwtHasScope</reference> DRF permission class in edx-drf-extensions.</paragraph>
        <paragraph>The new filter permission class, <literal>JwtHasTpaProviderFilterForRequestedProvider</literal>, will be implemented in edx-platform to start because it is only used by an edx-platform view, <literal>UserMappingView</literal>.  Additionally, the permission class is used in conjunction with other legacy permissions and it is simpler to keep all the tests together.</paragraph>
        <target ids="more-general-scope-filter-support" names="more\ general\ scope\ filter\ support" refuri="0011-scope-filter-support.rst"></target>
        <target ids="jwthasscope" names="jwthasscope" refuri="https://github.com/openedx/edx-drf-extensions/blob/64f831d715d14dc2db5a1046201ff14e92fa7c9f/edx_rest_framework_extensions/permissions.py#L70"></target>
    </section>
    <section ids="consequences" names="consequences">
        <title>Consequences</title>
        <bullet_list bullet="*">
            <list_item>
                <paragraph>The django-oauth-provider related model <literal>ProviderApiPermissions</literal> can be retired without adding a new model, simplifying our OAuth story.</paragraph>
            </list_item>
            <list_item>
                <paragraph>The complicated method of handling compound permissions, like <reference name="JWT_RESTRICTED_APPLICATION_OR_USER_ACCESS" refuri="https://github.com/openedx/edx-drf-extensions/blob/64f831d715d14dc2db5a1046201ff14e92fa7c9f/edx_rest_framework_extensions/permissions.py#L171">JWT_RESTRICTED_APPLICATION_OR_USER_ACCESS</reference> from edx-drf-extensions, needs to be duplicated in edx-platform to properly handle Restricted Applications and <literal>JwtHasTpaProviderFilterForRequestedProvider</literal>. Simplifying this design is being left to a later decision.</paragraph>
            </list_item>
        </bullet_list>
        <target ids="jwt-restricted-application-or-user-access" names="jwt_restricted_application_or_user_access" refuri="https://github.com/openedx/edx-drf-extensions/blob/64f831d715d14dc2db5a1046201ff14e92fa7c9f/edx_rest_framework_extensions/permissions.py#L171"></target>
    </section>
</document>
