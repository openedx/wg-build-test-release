<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docs/openedx/core/djangoapps/oauth_dispatch/docs/decisions/0011-scope-filter-support.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="more-general-scope-filter-support" names="11.\ more\ general\ scope\ filter\ support">
        <title>11. More General Scope Filter Support</title>
    </section>
    <section ids="status" names="status">
        <title>Status</title>
        <paragraph>Accepted</paragraph>
    </section>
    <section ids="context" names="context">
        <title>Context</title>
        <paragraph>For background, please see:</paragraph>
        <bullet_list bullet="*">
            <list_item>
                <paragraph><problematic ids="id4" refid="id3">`Include Organizations in Tokens`_</problematic>, where we decided to include a <title_reference>content_org</title_reference> filter in JWT tokens.</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>The implementation of the <title_reference>content_org</title_reference> filter included a new model for relating OAuth Applications and Organizations. This design made it difficult to add new types of filters, especially if they weren’t tied to organizations.</paragraph>
    </section>
    <section ids="decisions" names="decisions">
        <title>Decisions</title>
        <enumerated_list enumtype="arabic" prefix="" suffix=".">
            <list_item>
                <paragraph><strong>Add ApplicationAccess filters</strong> Add a <literal>filters</literal> field to the ApplicationAccess model to more quickly allow for new filter types.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Remove ApplicationOrganization</strong> Deprecate and remove the ApplicationOrganization model which could only handle a very small subset of filters.</paragraph>
            </list_item>
        </enumerated_list>
    </section>
    <section ids="consequences" names="consequences">
        <title>Consequences</title>
        <bullet_list bullet="*">
            <list_item>
                <paragraph>Adding the <title_reference>filters</title_reference> field to the ApplicationAccess model allows for a simpler design with the following benefits:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>This enables filters, which typically have some relationship to scopes, to be defined in the same admin screen. This should make it simpler to define oAuth Applications with proper security.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>This enables the removal of the separate ApplicationOrganization model, which was more complex to configure and less clear regarding its impact on the JWT.</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
        </bullet_list>
        <paragraph><problematic ids="id2" refid="id1">*</problematic>. The new <title_reference>filters</title_reference> field must be added to the <reference name="EdxOAuth2AuthorizationView" refuri="https://github.com/openedx/edx-platform/blob/9cf2f9f298e5e8be3b3abcaadaf0b7a96d0de0df/openedx/core/djangoapps/oauth_dispatch/dot_overrides/views.py#L16">EdxOAuth2AuthorizationView</reference> to handle user authorization for OAuth Applications with grant type ‘Authorization code’. This work will be done in a future PR detailed in <reference name="BOM-1291" refuri="https://openedx.atlassian.net/browse/BOM-1291">BOM-1291</reference>.</paragraph>
        <paragraph>Using the example from <problematic ids="id6" refid="id5">`Include Organizations in Tokens`_</problematic>, we would now simply use the Application Access admin screen to set:</paragraph>
        <literal_block force="False" language="default" linenos="False" xml:space="preserve">Scopes: grades:read,enrollments:read
Filters: content_org:Microsoft</literal_block>
        <paragraph>This would result in a JWT that contains the following, assuming these two scopes were requested:</paragraph>
        <literal_block force="False" language="default" linenos="False" xml:space="preserve">{
  "scopes": ["grades:read", "enrollments:read"],
  "filters": ["content_org:Microsoft", "user:me"],
  ...
}</literal_block>
        <paragraph>Note: Every JWT access token created using a given OAuth Application will include <strong>all filters</strong> defined for that application. This was also true as of the initial introduction of filters.</paragraph>
        <target ids="edxoauth2authorizationview" names="edxoauth2authorizationview" refuri="https://github.com/openedx/edx-platform/blob/9cf2f9f298e5e8be3b3abcaadaf0b7a96d0de0df/openedx/core/djangoapps/oauth_dispatch/dot_overrides/views.py#L16"></target>
        <target ids="bom-1291" names="bom-1291" refuri="https://openedx.atlassian.net/browse/BOM-1291"></target>
        <target ids="transport-jwt-in-http-cookies" names="transport\ jwt\ in\ http\ cookies" refuri="0007-include-organizations-in-tokens.rst"></target>
    </section>
</document>
