<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docs/lms/djangoapps/monitoring/docs/decisions/0001-monitoring-by-code-owner.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="monitoring-by-code-owner" names="monitoring\ by\ code\ owner">
        <title>Monitoring by Code Owner</title>
        <section ids="status" names="status">
            <title>Status</title>
            <paragraph>Accepted</paragraph>
        </section>
        <section ids="context" names="context">
            <title>Context</title>
            <paragraph>It is currently difficult for different teams to have team-based on-calls rotations, alerting and monitoring for various parts of the edx-platform (specifically LMS).</paragraph>
        </section>
        <section ids="decision" names="decision">
            <title>Decision</title>
            <paragraph>We will implement a custom attribute “code_owner” that can be used in NewRelic (or other monitoring solutions that are made pluggable).</paragraph>
            <paragraph>The new custom attribute makes it simple to query NewRelic for all Transactions or TransactionErrors that are associated with requests with a specific owner.  This enables a team to quickly identify data that they own, for use in NewRelic alerts or NewRelic dashboards.</paragraph>
            <paragraph>To minimize maintenance, the value of the “code_owner” attribute will be populated using the source-of-truth of ownership of various parts of edx-platform.</paragraph>
            <paragraph>See <reference name="Rejected Alternatives" refid="rejected-alternatives">Rejected Alternatives</reference> for details of the decision <strong>not</strong> to split the NewRelic application into multiple NewRelic applications.</paragraph>
            <paragraph>Note: “owner” is a MySql reserved word, which NewRelic cautions against using, so we are using “code_owner”.</paragraph>
        </section>
        <section ids="consequences" names="consequences">
            <title>Consequences</title>
            <paragraph>This attribute should be quickly available for use with custom alerts and custom dashboards.</paragraph>
            <paragraph>In the future, this attribute could potentially be added to logging as well.</paragraph>
        </section>
        <section ids="rejected-alternatives" names="rejected\ alternatives">
            <title>Rejected Alternatives</title>
            <section ids="splitting-the-newrelic-application" names="splitting\ the\ newrelic\ application">
                <title>Splitting the NewRelic application</title>
                <paragraph>The edx-platform (LMS) NewRelic application could have been split into multiple applications. This would have had the benefit of getting the out-of-the-box APM Dashboards for free.</paragraph>
                <paragraph>We decided against this alternative because:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>To enable this solution, we would need to disable gunicorn instrumentation, and this instrumentation has proved to be valuable for understanding certain types of production issues.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Splitting the app may make it more difficult to pinpoint the source of any problem that affects multiple applications.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The application splitting depends on a slight “hack” from NewRelic, by resetting the application name for each path.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>This “hack” goes against the grain of NewRelic’s typical recommendations, so there could be unknown pitfalls.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>The mapping of request path to owner would require additional maintenance.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Processing time is <strong>not</strong> accounted for in the NewRelic transaction time, because any processing required takes place before the NewRelic transaction gets started.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                </bullet_list>
            </section>
        </section>
    </section>
</document>
