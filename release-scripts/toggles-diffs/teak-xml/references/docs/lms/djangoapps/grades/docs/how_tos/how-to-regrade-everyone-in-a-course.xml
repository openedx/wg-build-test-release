<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.21.2 -->
<document source="/Users/sarinacanelake/openedx/edx-platform/docs/references/docs/lms/djangoapps/grades/docs/how_tos/how-to-regrade-everyone-in-a-course.rst" translation_progress="{'total': 0, 'translated': 0}" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:http="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="how-to-update-grades-for-every-learner-in-a-course" names="how\ to\ update\ grades\ for\ every\ learner\ in\ a\ course">
        <title>How to Update Grades for Every Learner in a Course</title>
        <paragraph>This will help if you want to re-computer the persistent subsection and course
            grades for every learner in a course.
            <strong>If grades for your course are currently frozen, you must first complete the “What to do if grades are frozen” section below.</strong></paragraph>
        <section ids="steps-to-trigger-course-wide-re-grade" names="steps\ to\ trigger\ course-wide\ re-grade">
            <title>Steps to trigger course-wide re-grade</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Go to LMS Django Admin and add an entry in ComputeGradesSetting, in the Grades section.
                        <literal>/admin/grades/computegradessetting/</literal>
                        (this requires the persistent_grades_admin role in app-permissions)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Put the course key of the course you wish to recompute into the <literal>course ids</literal> field.
                        You can enter multiple whitespace-separated keys. Save the model.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Go to tools-edx-jenkins and navigate to Grading/(prod,stage)-edx-compute_grades
                        You must be a member of the jenkins-tools-grading-jobs github group to run the job, or you can ask a member to run the job for you.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The job will grab the most recent ComputeGradesSetting model and enqueue a task to recompute course grades for
                        the course(s) you specified in step 2.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="what-to-do-if-grades-are-frozen" names="what\ to\ do\ if\ grades\ are\ frozen">
            <title>What to do if grades are frozen</title>
            <paragraph>By default, we don’t allow for subsection or course grades to be changed after
                30 days from the end date of a course have elapsed.  If the course you want to
                update grades for currently has “frozen” grades, you need to do the following:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Go to the Django Admin page and find the “Waffle flag course overrides” page, for example
                        <reference refuri="https://courses-internal.stage.edx.org/admin/waffle_utils/waffleflagcourseoverridemodel/">https://courses-internal.stage.edx.org/admin/waffle_utils/waffleflagcourseoverridemodel/</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph>Ensure that there is not currently an entry with the flag name
                        <literal>grades.enforce_freeze_grade_after_course_end</literal> for this course.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Click the “Add Waffle Flag Course Override” button.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Enter the flag name from step (2) in the “Waffle flag” field.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Enter the course id of the course.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Select “Force Off” for the “Override choice” field.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Check the “Enabled” checkbox.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Click “Save”</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Exit the Django Admin site and proceed to the section above.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="monitoring" names="monitoring">
            <title>Monitoring</title>
            <paragraph>You should be able to track the progress of the re-grade by searching
                for your course id and the <literal>compute_all_grades_for_course</literal> task name in Splunk.
                Initially, that task will have been received, but not started.  When it does start,
                you’ll see a bunch of child tasks like <literal>recalculate_course_and_subsection_grades_for_user</literal>
                that indicate grades are being re-calculated for the learners in this course.</paragraph>
        </section>
    </section>
</document>
